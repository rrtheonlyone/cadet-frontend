{"version":3,"sources":["commons/sideContent/SideContentTypes.ts","commons/workspace/WorkspaceTypes.ts","commons/workspace/WorkspaceActions.ts","commons/application/types/InterpreterTypes.ts","features/sourceRecorder/sourcecast/SourcecastTypes.ts","commons/application/actions/CommonsActions.ts","commons/application/types/CommonsTypes.ts","commons/application/types/ActionTypes.ts","commons/application/actions/SessionActions.ts","commons/application/types/SessionTypes.ts","features/sourceRecorder/SourceRecorderTypes.ts","commons/utils/Constants.ts","commons/application/actions/InterpreterActions.ts","commons/utils/JsSlangHelper.ts","commons/application/types/ExternalTypes.ts","commons/application/ApplicationTypes.ts","commons/application/reducers/SessionsReducer.ts","commons/assessment/AssessmentTypes.ts","commons/controlBar/ControlBarChapterSelect.tsx","commons/ControlButton.tsx","commons/controlBar/ControlBarClearButton.tsx","commons/controlBar/ControlBarEvalButton.tsx","commons/controlBar/ControlBarReturnToAcademyButton.tsx","commons/controlBar/ControlBarNextButton.tsx","commons/controlBar/ControlBarPreviousButton.tsx","commons/controlBar/ControlBarQuestionViewButton.tsx","commons/controlBar/ControlBarResetButton.tsx","commons/controlBar/ControlBarRunButton.tsx","commons/controlBar/ControlBarSaveButton.tsx","commons/Markdown.tsx","commons/sideContent/SideContentCanvasOutput.tsx","commons/sideContent/SideContentAutograderCard.tsx","commons/sideContent/SideContentResultCard.tsx","commons/sideContent/SideContentAutograder.tsx","commons/sideContent/SideContentToneMatrix.tsx","commons/utils/DateHelper.ts","commons/utils/HistoryHelper.ts","commons/utils/NotificationsHelper.ts","commons/utils/ParamParseHelper.ts","commons/controlBar/ControlBar.tsx","commons/collabEditing/CollabEditingTypes.ts","commons/collabEditing/CollabEditingHelper.ts","commons/documentation/Documentation.ts","commons/editor/EditorAceRange.tsx","commons/editor/Editor.tsx","commons/mcqChooser/McqChooser.tsx","commons/repl/ReplInput.tsx","commons/repl/Repl.tsx","commons/sideContent/SideContentHelper.ts","commons/sideContent/SideContent.tsx","commons/workspace/Workspace.tsx","commons/assessmentWorkspace/AssessmentWorkspaceGradingResult.tsx","commons/assessmentWorkspace/AssessmentWorkspace.tsx","commons/assessmentWorkspace/AssessmentWorkspaceContainer.ts","commons/ContentDisplay.tsx","commons/notificationBadge/NotificationBadgeHelper.ts","commons/notificationBadge/NotificationBadgeTypes.ts","commons/notificationBadge/NotificationBadge.tsx","commons/notificationBadge/NotificationBadgeContainer.ts","commons/assessment/Assessment.tsx","commons/assessment/AssessmentContainer.ts","features/academy/AcademyTypes.ts","features/dashboard/DashboardActions.ts","features/dashboard/DashboardTypes.ts","pages/academy/dashboard/Dashboard.tsx","pages/academy/dashboard/DashboardContainer.ts","features/game/assets/FontAssets.ts","features/game/utils/StyleUtils.ts","features/game/commons/CommonConstants.ts","features/game/utils/GameUtils.ts","features/game/assets/ImageAssets.ts","features/game/sound/GameSoundTypes.ts","features/game/assets/SoundAssets.ts","features/game/utils/TextUtils.ts","features/game/utils/ButtonUtils.ts","features/game/commons/CommonBackButton.ts","features/game/effects/LoadingScreen.ts","features/game/layer/GameLayerTypes.ts","features/game/dialogue/GameDialogueConstants.ts","features/game/effects/FadeEffect.ts","features/game/effects/Typewriter.ts","features/game/dialogue/GameDialogueRenderer.ts","features/game/dialogue/GameDialogueHelper.ts","features/game/effects/Notification.ts","features/game/phase/GamePhaseTypes.ts","features/game/scenes/gameManager/GameGlobalAPI.ts","features/game/layer/GameLayerManager.ts","features/game/sound/GameSoundManager.ts","features/game/scenes/chapterSelect/ChapterSelectConstants.ts","features/game/commons/CommonTextHover.ts","features/game/utils/LoaderUtils.ts","features/game/assets/TextAssets.ts","features/game/location/GameMap.ts","features/game/objective/GameObjective.ts","features/game/utils/StringUtils.ts","features/game/action/GameActionTypes.ts","features/game/location/GameMapTypes.ts","features/game/state/GameStateTypes.ts","features/game/commons/CommonTypes.ts","features/game/mode/GameModeTypes.ts","features/game/parser/ParserConverter.ts","features/game/parser/ParserValidator.ts","features/game/parser/ActionParser.ts","features/game/parser/ConditionParser.ts","features/game/parser/CharacterParser.ts","features/game/parser/SpeakerParser.ts","features/game/parser/DialogueParser.ts","features/game/parser/MusicParser.ts","features/game/parser/Parser.ts","features/game/parser/LocationParser.ts","features/game/parser/ObjectParser.ts","features/game/parser/BoundingBoxParser.ts","features/game/parser/LocationDetailsParser.ts","features/game/location/GameMapHelper.ts","features/game/utils/TxtLoaderUtils.ts","features/game/scenes/chapterSelect/ChapterSelectHelper.ts","features/game/scenes/chapterSelect/SampleChapters.ts","features/game/scenes/chapterSelect/ChapterSelect.ts","features/game/scenes/checkpointTransition/CheckpointTransitionConstants.ts","features/game/scenes/checkpointTransition/CheckpointTransition.ts","features/game/action/GameActionManager.ts","features/game/action/GameActionExecuter.ts","features/game/action/GameActionConditionChecker.ts","features/game/boundingBoxes/GameBoundingBoxManager.ts","features/game/utils/SpriteUtils.ts","features/game/character/GameCharacterConstants.ts","features/game/character/GameCharacterManager.ts","features/game/dialogue/GameDialogueGenerator.ts","features/game/dialogue/GameDialogueSpeakerRenderer.ts","features/game/dialogue/GameDialogueManager.ts","features/game/effects/GlowingObject.ts","features/game/objects/GameObjectManager.ts","features/game/popUp/GamePopUpConstants.ts","features/game/popUp/GamePopUpManager.ts","features/game/location/GameMapConstants.ts","features/game/save/GameSaveHelper.ts","features/game/state/GameStateManager.ts","features/academy/AcademyReducer.ts","features/dashboard/DashboardReducer.ts","features/playground/PlaygroundReducer.ts","features/playground/PlaygroundTypes.ts","commons/workspace/WorkspaceReducer.ts","features/sourceRecorder/sourcecast/SourcecastReducer.ts","features/sourceRecorder/sourcereel/SourcereelReducer.ts","features/sourceRecorder/sourcereel/SourcereelTypes.ts","commons/application/ApplicationReducer.ts","commons/application/reducers/RootReducer.ts","commons/collabEditing/CollabEditingActions.ts","features/academy/AcademyActions.ts","features/groundControl/GroundControlActions.ts","features/groundControl/GroundControlTypes.ts","features/persistence/PersistenceActions.ts","features/persistence/PersistenceTypes.ts","features/playground/PlaygroundActions.ts","features/sourceRecorder/sourcecast/SourcecastActions.ts","features/sourceRecorder/SourceRecorderActions.ts","features/sourceRecorder/sourcereel/SourcereelActions.ts","commons/utils/ActionsHelper.ts","commons/mocks/AssessmentMocks.ts","commons/mocks/UserMocks.ts","commons/mocks/GradingMocks.ts","commons/mocks/GroupMocks.ts","commons/mocks/BackendMocks.ts","commons/utils/AuthHelper.ts","commons/sagas/BackendSaga.ts","commons/sagas/RequestsSaga.ts","commons/sagas/LoginSaga.ts","commons/dialogs/ConfirmDialog.tsx","commons/dialogs/PromptDialog.tsx","commons/utils/DialogHelper.tsx","commons/sagas/PersistenceSaga.tsx","commons/sagas/PlaygroundSaga.ts","commons/sagas/WorkspaceSaga.ts","commons/sagas/MainSaga.ts","pages/localStorage.ts","pages/createStore.ts","commons/utils/CastBackend.ts","features/game/state/GameStateConstants.ts","features/game/state/GameUserStateManager.ts","features/storySimulator/assets/ImageAssets.ts","features/storySimulator/StorySimulatorTypes.ts","features/storySimulator/scenes/mainMenu/MainMenuConstants.ts","features/storySimulator/scenes/mainMenu/MainMenu.ts","features/game/input/GameInputManager.ts","features/storySimulator/background/SSBackgroundManager.ts","features/storySimulator/cursorMode/SSCursorModeTypes.ts","features/storySimulator/utils/SSUtils.ts","features/storySimulator/boundingBoxes/SSBBoxManager.ts","features/storySimulator/cursorMode/SSCursorModeConstants.ts","features/storySimulator/cursorMode/SSCursorMode.ts","features/storySimulator/logger/SSLogConstants.ts","features/storySimulator/logger/SSLogManagerHelper.ts","features/storySimulator/logger/SSLogManager.ts","features/storySimulator/objects/SSObjectManager.ts","features/storySimulator/transform/SSTransformManagerConstants.ts","features/storySimulator/transform/SSTransformManager.ts","features/storySimulator/scenes/ObjectPlacement/ObjectPlacementConstants.ts","features/storySimulator/scenes/ObjectPlacement/ObjectPlacement.ts","pages/academy/storySimulator/subcomponents/storySimulatorGame.ts","features/game/background/GameBackgroundManager.ts","features/game/effects/FlyEffect.ts","features/game/collectibles/GameCollectiblesConstants.ts","features/game/collectibles/GameCollectiblesTypes.ts","features/game/collectibles/GameCollectiblesManager.ts","features/game/collectibles/GameCollectiblesHelper.ts","features/game/commons/CommonRadioButton.ts","features/game/scenes/settings/SettingsConstants.ts","features/game/escape/GameEscapeConstants.ts","features/game/escape/GameEscapeManager.ts","features/game/phase/GamePhaseManager.ts","features/game/save/GameSaveTypes.ts","features/game/save/GameSaveManager.ts","features/game/save/GameSaveConstants.ts","features/game/mode/explore/GameModeExploreConstants.ts","features/game/mode/explore/GameModeExplore.ts","features/game/mode/menu/GameModeMenuConstants.ts","features/game/mode/menu/GameModeMenu.ts","features/game/mode/move/GameModeMoveConstants.ts","features/game/mode/move/GameModeMove.ts","features/game/mode/sequence/GameModeSequence.ts","features/game/mode/talk/GameModeTalkConstants.ts","features/game/mode/talk/GameModeTalk.ts","features/game/scenes/gameManager/GameManager.ts","features/game/scenes/gameManager/GameManagerHelper.ts","features/game/scenes/roomPreview/RoomPreviewConstants.ts","features/game/scenes/roomPreview/RoomPreviewHelper.ts","features/game/scenes/mainMenu/MainMenuConstants.ts","features/game/scenes/mainMenu/MainMenu.ts","features/game/scenes/myRoom/MyRoom.ts","features/game/scenes/roomPreview/RoomPreview.ts","features/game/scenes/settings/Settings.ts","pages/academy/game/subcomponents/sourceAcademyGame.ts","features/game/save/GameSaveRequests.ts","pages/academy/game/Game.tsx","pages/academy/grading/subcomponents/GradingEditGradingCell.tsx","pages/academy/grading/subcomponents/GradingGradeCell.tsx","pages/academy/grading/subcomponents/GradingStatusCell.tsx","pages/academy/grading/subcomponents/GradingUnsubmitCell.tsx","pages/academy/grading/subcomponents/GradingEditor.tsx","pages/academy/grading/subcomponents/GradingEditorContainer.ts","pages/academy/grading/subcomponents/GradingWorkspace.tsx","pages/academy/grading/subcomponents/GradingWorkspaceContainer.ts","pages/academy/grading/subcomponents/GradingXPCell.tsx","pages/academy/grading/Grading.tsx","pages/academy/grading/GradingContainer.ts","pages/academy/groundControl/subcomponents/GroundControlDeleteCell.tsx","pages/academy/groundControl/subcomponents/GroundControlDropzone.tsx","pages/academy/groundControl/subcomponents/GroundControlEditCell.tsx","pages/academy/groundControl/subcomponents/GroundControlPublishCell.tsx","pages/academy/groundControl/GroundControl.tsx","pages/academy/groundControl/GroundControlContainer.ts","commons/controlBar/ControlBarAutorunButtons.tsx","commons/controlBar/ControlBarExternalLibrarySelect.tsx","commons/sideContent/SideContentEnvVisualizer.tsx","commons/sideContent/SideContentInspector.tsx","commons/sideContent/SideContentListVisualizer.tsx","commons/sourceRecorder/SourceRecorderControlBar.tsx","commons/sourceRecorder/SourceRecorderEditor.tsx","commons/sourceRecorder/SourceRecorderDeleteCell.tsx","commons/sourceRecorder/SourceRecorderSelectCell.tsx","commons/sourceRecorder/SourceRecorderTable.tsx","pages/academy/sourcereel/subcomponents/SourcereelControlbar.tsx","pages/academy/sourcereel/Sourcereel.tsx","pages/academy/sourcereel/SourcereelContainer.ts","features/storySimulator/StorySimulatorRequest.ts","features/storySimulator/StorySimulatorService.ts","pages/academy/storySimulator/subcomponents/StorySimulatorAssetFileUploader.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorAssetViewer.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorAssetSelection.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorChapterSequencer.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorCheckpointTxtLoader.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorCheckpointSim.tsx","pages/academy/storySimulator/StorySimulator.tsx","pages/academy/subcomponents/AcademyDefaultChapterContainer.ts","pages/academy/subcomponents/AcademyDefaultChapter.tsx","pages/academy/subcomponents/AcademyNavigationBar.tsx","pages/academy/Academy.tsx","pages/academy/AcademyContainer.ts","pages/contributors/subcomponents/ContributorsDetails.tsx","pages/contributors/subcomponents/ContributorsGithubApi.ts","pages/contributors/subcomponents/ContributorsList.tsx","pages/contributors/Contributors.tsx","pages/login/Login.tsx","pages/login/LoginContainer.tsx","commons/XMLParser/XMLParserTypes.ts","commons/XMLParser/XMLParserHelper.ts","commons/editingOverviewCard/EditingOverviewCard.tsx","commons/controlBar/ControlBarToggleEditModeButton.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentHelper.ts","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentTextAreaContent.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentAutograderTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentDeploymentTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentGradingTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentManageQuestionTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentMcqQuestionTemplateTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentProgrammingQuestionTemplateTab.tsx","commons/editingWorkspace/EditingWorkspace.tsx","commons/editingWorkspace/EditingWorkspaceContainer.ts","commons/missionCreator/MissionCreator.tsx","commons/missionCreator/MissionCreatorContainer.ts","pages/missionControl/MissionControl.tsx","pages/missionControl/MissionControlContainer.ts","pages/notFound/NotFound.tsx","commons/controlBar/ControlBarExecutionTime.tsx","commons/controlBar/ControlBarPersistenceButtons.tsx","commons/controlBar/ControlBarSessionButton.tsx","commons/controlBar/ControlBarShareButton.tsx","commons/sideContent/SideContentFaceapiDisplay.tsx","commons/sideContent/SideContentSubstVisualizer.tsx","commons/sideContent/SideContentVideoDisplay.tsx","commons/utils/IntroductionHelper.ts","pages/playground/Playground.tsx","pages/playground/PlaygroundContainer.ts","pages/sourcecast/Sourcecast.tsx","pages/sourcecast/SourcecastContainer.ts","commons/profile/ProfileCard.tsx","commons/profile/Profile.tsx","commons/profile/ProfileContainer.ts","commons/dropdown/DropdownAbout.tsx","commons/dropdown/DropdownHelp.tsx","commons/dropdown/Dropdown.tsx","commons/navigationBar/NavigationBar.tsx","commons/utils/QueryHelper.ts","commons/application/Application.tsx","commons/application/ApplicationContainer.ts","commons/utils/RegisterServiceWorker.ts","index.tsx","assets/default_cover_image.jpg"],"names":["SideContentType","browseReplHistoryDown","workspaceLocation","action","browseReplHistoryUp","changeExternalLibrary","newExternal","changeEditorHeight","height","changeEditorWidth","widthChange","changeExecTime","execTime","changeSideContentHeight","chapterSelect","chapter","variant","externalLibrarySelect","externalLibraryName","toggleEditorAutorun","updateActiveTab","activeTab","beginClearContext","library","clearReplInput","clearReplOutput","clearReplOutputLast","endClearContext","ensureLibrariesLoaded","evalEditor","evalRepl","evalTestcase","testcaseId","updateEditorValue","newEditorValue","setEditorBreakpoint","breakpoints","highlightEditorLine","highlightedLines","updateReplValue","newReplValue","sendReplInputToOutput","newOutput","type","value","resetTestcase","index","navigateToDeclaration","cursorPosition","moveCursor","resetWorkspace","workspaceOptions","updateWorkspace","setEditorReadonly","editorReadonly","updateCurrentAssessmentId","assessmentId","questionId","updateCurrentSubmissionId","submissionId","updateHasUnsavedChanges","hasUnsavedChanges","fetchChapter","changeChapter","updateChapter","promptAutocomplete","row","column","callback","notifyProgramEvaluated","result","lastDebuggerResult","code","context","logOut","fetchAuth","providerId","fetchAssessment","id","fetchAssessmentOverviews","fetchGrading","fetchGradingOverviews","filterToGroup","login","logoutGoogle","setGameState","gameState","setTokens","accessToken","refreshToken","setUser","user","setGoogleUser","submitAnswer","answer","submitAssessment","submitGrading","gradeAdjustment","xpAdjustment","comments","submitGradingAndContinue","updateHistoryHelpers","loc","updateAssessmentOverviews","overviews","updateAssessment","assessment","updateGradingOverviews","updateGrading","grading","unsubmitSubmission","fetchNotifications","acknowledgeNotifications","withFilter","updateNotifications","notifications","KeyboardCommand","PlaybackStatus","RecordingStatus","isTrue","toUpperCase","useBackend","process","playgroundOnly","sentryDsn","REACT_APP_SENTRY_DSN","authProviders","Map","i","name","endpoint","set","isDefault","Links","Constants","sourceAcademyVersion","backendUrl","defaultSourceChapter","defaultSourceVariant","defaultQuestionId","maxBrowseIndex","urlShortener","urlShortenerSignature","moduleBackendUrl","googleClientId","googleApiKey","googleAppId","handleConsoleLog","logString","evalInterpreterSuccess","evalTestcaseSuccess","evalTestcaseFailure","evalInterpreterError","errors","beginInterruptExecution","endInterruptExecution","beginDebuggerPause","endDebuggerPause","debuggerResume","debuggerReset","highlightLine","line","window","Inspector","Error","highlightClean","inspectorUpdate","updateContext","stringify","externalBuiltIns","display","str","undefined","rawDisplay","output","String","__REDUX_STORE__","dispatch","prompt","alert","visualiseList","list","ListVisualizer","draw","createContext","externals","externalContext","moduleParams","createSlangContext","makeElevatedContext","ProxyFrame","prototype","runtime","environments","head","fakeFrame","proxyGlobalEnv","Proxy","get","target","prop","receiver","proxyEnvs","proxyRuntime","elevatedContext","proxyContext","customBuiltIns","importBuiltins","defineBuiltin","fname","getDifferenceInMethods","eFrame","frame","difference","keys","ExternalLibraryName","runesLibrary","curvesLibrary","soundsLibrary","binaryTreesLibrary","videoLibrary","libEntries","NONE","RUNES","CURVES","SOUNDS","BINARYTREES","PIXNFLIX","MACHINELEARNING","ALL","concat","externalLibraries","ApplicationEnvironment","Role","sourceLanguages","variantDisplay","styliseChapter","chap","res","has","defaultAcademy","gameCanvas","defaultApplication","title","environment","Production","defaultDashboard","gradingSummary","defaultPlayground","usingSubst","createDefaultWorkspace","autogradingResults","editorPrepend","editorSessionId","editorValue","editorPostpend","editorTestcases","editorHeight","editorWidth","externalLibrary","replHistory","browseIndex","records","originalValue","replValue","sharedbAceInitValue","sharedbAceIsInviting","sideContentActiveTab","questionOverview","websocketStatus","globals","isEditorAutorun","isRunning","isDebugging","enableDebugging","debuggerContext","defaultWorkspaceManager","currentAssessment","currentQuestion","currentSubmission","playground","sourcecast","audioUrl","codeDeltasToApply","currentPlayerTime","description","inputToApply","playbackData","init","inputs","playbackDuration","playbackStatus","paused","sourcecastIndex","sourcereel","recordingStatus","notStarted","timeElapsedBeforePause","timeResumed","defaultSession","assessments","assessmentOverviews","grade","gradingOverviews","gradings","group","historyHelper","lastAcademyLocations","lastGeneralLocations","maxGrade","maxXp","role","story","playStory","completed_quests","collectibles","xp","defaultState","academy","application","dashboard","session","workspaces","SessionsReducer","state","payload","googleUser","helper","newAcademyLocations","isAcademyRe","exec","newGeneralLocations","newAssessments","newGradings","RegExp","AssessmentStatuses","GradingStatuses","AssessmentCategories","TestcaseTypes","QuestionTypes","overviewTemplate","category","Mission","closeAt","coverImage","openAt","reading","shortSummary","status","not_attempted","gradingStatus","programmingTemplate","roomId","content","external","symbols","graderLibrary","prepend","solutionTemplate","postpend","testcases","testcasesPrivate","mcqTemplate","choices","hint","solution","ControlBarChapterSelect","props","chapters","map","lang","displayName","chapterListRenderer","items","itemsParentRef","query","renderItem","defaultLangs","filter","item","variantLangs","ulRef","active","key","text","icon","chapterRenderer","handleClick","onClick","ChapterSelectComponent","Select","ofType","currentChap","currentVariant","handleSelect","e","disabled","className","Classes","MINIMAL","onItemSelect","itemRenderer","itemListRenderer","filterable","rightIcon","IconNames","DOUBLE_CARET_VERTICAL","chapterSelector","chapSelect","sourceChapter","sourceVariant","handleChapterSelect","defaultOptions","fullWidth","iconOnRight","intent","Intent","minimal","controlButton","label","options","opts","fill","ic","color","iconColor","ControlBarClearButton","REMOVE","handleReplOutputClear","ControlBarEvalButton","CODE","handleReplEval","ControlBarReturnToAcademyButton","ARROW_RIGHT","ControlBarNextButton","questionProgress","onClickReturn","onClickNext","ControlBarPreviousButton","ARROW_LEFT","ControlBarQuestionViewButton","ControlBarResetButton","REPEAT","ControlBarRunButton","PLAY","handleEditorEval","ControlButtonSaveButton","saveButtonOpts","WARNING","FLOPPY_DISK","onClickSave","React","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","openLinksInNewWindow","classNames","RUNNING_TEXT","dangerouslySetInnerHTML","__html","makeHtml","SideContentCanvasOutput","$parent","componentDidMount","this","appendChild","canvas","hidden","render","ref","r","SideContentAutograderCard","evalSelf","handleTestcaseEval","isEvaluated","testcase","isEqual","extraClasses","correct","wrong","private","elevation","Elevation","ONE","INTERACTIVE","program","parseError","ShapeDrawn","$canvas","renderResult","SideContentResultCard","isCorrect","resultType","expected","error","errorType","errorExplanation","join","actual","SideContentAutograder","constructor","super","toggleTestcases","setState","showTestcases","toggleResults","showResults","testcasesHeader","CARET_DOWN","resultsHeader","length","results","collapseButton","isOpen","toggleFunc","CARET_RIGHT","SideContentToneMatrix","$container","shouldComponentUpdate","ToneMatrix","initialise_matrix","handleClear","clear_matrix","handleRandomise","randomise_matrix","DARK","BUTTON_GROUP","beforeNow","dateString","date","moment","now","isBefore","getPrettyDate","format","history","createBrowserHistory","basename","notification","Toaster","create","position","Position","TOP","showSuccessMessage","message","timeout","show","SUCCESS","showWarningMessage","showMessage","dismiss","assessmentCategoryLink","cat","Sidequest","toLowerCase","stringParamToInt","num","parseInt","Number","isInteger","ControlBar","editorButtons","flowButtons","replButtons","XMLHttpReadyState","XMLHttpStatus","checkSessionIdExists","handleConnectionOK","handleSessionIdNotFound","handleCannotReachServer","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","OK","JSON","parse","responseText","open","shareDBServer","send","externalLibrariesDocumentation","shortenCaption","substring","MAX_CAPTION_LENGTH","lib","names","libDocs","SourceDocumentation","ext_lib","caption","meta","docHTML","builtinDocumentation","Object","entries","builtins","forEach","chapterDoc","docs","entry","info","Documentation","ace","Range","acequire","Editor","ShareAce","AceEditor","markerIds","onChangeMethod","completer","getMarkers","markerProps","lineNum","push","startRow","startCol","endRow","endCol","chapterNo","HighlightRulesSelector","ModeSelector","toString","current","editor","selection","clearSelection","moveCursorToPosition","renderer","showCursor","scrollCursorIntoView","handleNavigate","variantString","pos","getCursor","token","getTokenAt","url","textbook","externalUrl","ext","handleDeclarationNavigate","getCursorPosition","newPos","hasDeclaration","some","node","test","handleRefactor","sourceLocations","getAllOccurrencesInScope","getSelection","AceRange","start","end","range","addRange","handleHighlightScope","ranges","getScope","addMarker","handleVariableHighlighting","setTimeout","chapterNumber","bgTokenizer","removeMarker","handleTypeInferenceDisplay","handleSendReplInputToOutput","getTypeInformation","split","st","commentEveryLine","handleGutterClick","domEvent","indexOf","isFocused","clientX","getBoundingClientRect","left","getDocumentPosition","getLine","getBreakpoints","includes","clearBreakpoint","setBreakpoint","stop","handleEditorUpdateBreakpoints","$breakpoints","handleAnnotationChange","annotations","getAnnotations","count","anno","setAnnotations","handleStartCollabEditing","sharedbAce","WsUrl","pluginWsUrl","namespace","on","add","handleEditorValueChange","handleFinishInvite","WS","sessionIdNotFound","clearInterval","interval","close","cannotReachServer","reconnect","setInterval","addEventListener","event","handleSetWebsocketStatus","newCode","handleUpdateHasUnsavedChanges","getSession","getCompletions","prefix","charAt","handlePromptAutocomplete","x","setCompleters","componentWillUnmount","componentDidUpdate","prevProps","newCursorPosition","handlers","commands","bindKey","win","mac","editorProps","$blockScrolling","Infinity","markers","fontSize","highlightActiveLine","mode","onChange","onCursorChange","theme","width","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","fontFamily","goGreen","McqChooser","onButtonClickFactory","mcqOption","handleMCQSubmit","mcq","hintElement","getButtonIntent","currentOption","chosenOption","correctOptionSelected","DANGER","choice","ReplInput","replInputBottom","execBrowseHistoryDown","execBrowseHistoryUp","execEvaluate","handleBrowseHistoryDown","handleBrowseHistoryUp","scrollIntoView","clientWidth","innerWidth","handleReplValueChange","minLines","maxLines","showGutter","showPrintMargin","Repl","cards","slice","Output","inputProps","style","CARD","ELEVATION_0","consoleLogs","Array","potentialTabs","currentlyActiveTabsLabel","SideContent","tabs","handleActiveTabChange","defaultSelectedTabId","dynamicTabs","setDynamicTabs","useSelector","allActiveTabs","spawnedTabs","tab","toSpawn","getDynamicTabs","resetAlert","prevTabId","iconId","generateIconId","document","getElementById","classList","remove","tabId","renderedTabs","tabTitle","iconName","iconSize","tabBody","body","tabPanel","panel","renderTab","newTabId","renderActiveTabPanelOnly","selectedTabId","Workspace","editorDividerDiv","leftParentResizable","maxDividerHeight","sideDividerDiv","editorRef","toggleEditorDividerDisplay","_a","_b","editorWidthPercentage","updateSize","marginRight","toggleDividerDisplay","clientHeight","resizableHeight","rightParentHeight","parentNode","createWorkspaceInput","customEditor","mcqProps","sideContent","sideContentProps","resizableSideContent","sideContentResizableProps","controlBarProps","editorResizableProps","sideContentIsResizeable","replProps","enable","rightResizeOnly","minWidth","onResize","onResizeStop","_c","diff","handleEditorWidthChange","size","as","bounds","bottomResizeOnly","handleSideContentHeightChange","sideContentHeight","top","right","bottom","topRight","bottomRight","bottomLeft","topLeft","AssessmentWorkspaceGradingResult","graderName","gradedAt","AssessmentWorkspace","NINJA","questions","BRIEFCASE","longSummary","briefing","AIRPLANE","autograder","isGraded","grader","TICK","GRID_VIEW","toneMatrix","listingPath","assessmentWorkspacePath","onClickProgress","deferredNavigate","blockedQuestionId","qn","question","programming","reduce","acc","clearButton","evalButton","nextButton","Path","previousButton","questionView","resetButton","showResetTemplateOverlay","closeDate","handleSave","showOverlay","handleAssessmentFetch","notAttempted","checkWorkspaceReset","Spinner","SIZE_LARGE","overlay","closeOverlay","resetTemplateOverlay","ERROR","isCloseButtonShown","onClose","DIALOG_BODY","DIALOG_FOOTER","workspaceProps","handleEditorHeightChange","option","storedAssessmentId","storedQuestionId","questionData","handleUpdateCurrentAssessmentId","handleResetWorkspace","handleClearContext","AssessmentWorkspaceContainer","connect","bindActionCreators","changeEvent","val","handleInterruptEval","newValue","heightChange","handleDebuggerPause","handleDebuggerResume","handleDebuggerReset","col","ContentDisplay","loadContentDispatch","THREE","filterNotificationsByAssessment","n","submission_id","assessment_id","filterNotificationsBySubmission","filterNotificationsByType","assessmentType","assessment_type","NotificationTypes","makeNotificationMessage","new","deadline","autograded","submitted","unsubmitted","graded","new_message","NotificationBadge","notificationFilter","notificationIcon","round","large","disableHover","makeNotificationTag","multiline","onRemove","handleAcknowledgeNotifications","notificationTags","interactionKind","PopoverInteractionKind","HOVER","RIGHT","hoverOpenDelay","hoverCloseDelay","lazy","NotificationBadgeContainer","Assessment","toggleClosedAssessments","showClosedAssessments","toggleOpenAssessments","showOpenedAssessments","toggleUpcomingAssessments","showUpcomingAssessments","setBetchaAssessment","betchaAssessment","setBetchaAssessmentNull","handleSubmitAssessment","sortAssessments","sortBy","a","makeSubmissionButton","overview","attempted","CONFIRM","makeAssessmentInteractButton","optionalLabel","attempting","EDIT","EYE_OPEN","to","makeOverviewCard","renderAttemptButton","renderGradingStatus","alt","src","defaultCoverImage","makeOverviewCardTitle","TIME","ellipsize","makeGradingStatus","isStudent","match","params","assessmentWorkspaceProps","FLAME","isOverviewUpcoming","upcomingCards","isOverviewOpened","openedCards","closedCards","upcomingCardsCollapsible","openedCardsCollapsible","closedCardsCollapsible","submissionText","betchaText","betchaDialog","handleAssessmentOverviewFetch","tooltip","none","CROSS","DISABLE","PRIMARY","AssessmentContainer","withRouter","assessmentCategory","Student","assessmentRegExp","fetchGroupGradingSummary","updateGroupGradingSummary","Dashboard","columnDefs","defaultColumnDefs","gridApi","handleFetchGradingSummary","onGridReady","api","resizeGrid","sizeColumnsToFit","headerName","field","sort","resizable","sortable","setRowData","grid","domLayout","defaultColDef","onFirstDataRendered","onGridSizeChanged","rowData","rowHeight","suppressMovableColumns","DashboardContainer","FontAssets","zektonFont","pngPath","fntPath","alienCowsFont","alienLeagueFont","Color","navy","lightBlue","offWhite","white","darkGrey","lightGrey","blue","darkBlue","orange","yellow","red","maroon","black","purple","paleYellow","HexColor","_","calcTableFormatPos","numOfItems","maxXSpace","screenSize","maxYSpace","y","numItemLimit","redistributeLast","numOfRows","Math","ceil","numOfCols","partitionXSpace","partitionYSpace","partitionLastXSpace","itemXIdx","itemYIdx","floor","itemXPos","itemYPos","calcListFormatPos","xSpacing","ySpacing","repoAssetsFolder","assetsFolder","fadeDuration","nullFunction","nullInteractionId","nullSequenceNumber","popupDuration","defaultAssetPath","defaultFontStyle","align","Phaser","GameObjects","BitmapText","ALIGN_CENTER","screenCenter","sleep","ms","Promise","resolve","mapValues","fn","newMap","limitNumber","min","max","toS3Path","fileName","mandatory","object","ImageAssets","shortButton","path","mediumButton","longButton","topButton","speechBox","speakerBox","defaultLocationImg","locationPreviewFrame","locationPreviewFill","talkOptButton","talkOptCheck","modeMenuBanner","popUpFrame","mediumBox","diamond","arrow","cookies","escapeMenuBackground","collectiblesMenu","collectiblesBanner","collectiblesPageChosen","collectiblesPage","chapterSelectBackground","chapterRepeatButton","chapterContinueButton","chapterSelectFrame","chapterSelectBorder","chapterSelectArrow","mainMenuBackground","mainMenuOptBanner","settingBackground","settingBanner","settingOption","musicFadeOutTween","volume","ease","GameSoundType","SoundAssets","buttonHover","config","soundType","SFX","buttonClick","galacticHarmony","loop","BGM","createBitmapText","scene","setTintFill","createButton","assetKey","textConfig","oriX","oriY","bitMapTextStyle","onDown","onUp","onHover","onOut","onHoverEffect","onClickSound","onHoverSound","soundManager","container","Container","button","Sprite","setInteractive","pixelPerfect","useHandCursor","addListener","Input","Events","GAMEOBJECT_POINTER_UP","playSound","GAMEOBJECT_POINTER_OVER","setAlpha","GAMEOBJECT_POINTER_OUT","GAMEOBJECT_POINTER_DOWN","setOrigin","backTextYPos","backButtonStyle","CommonBackButton","renderBackButton","backButton","setPosition","barX","barWidth","barY","innerBarX","innerBarY","addLoadingScreen","progressBar","progressBox","load","graphics","fillStyle","fillRect","clear","barHeight","destroy","Layer","defaultLayerSequence","Background","Selector","Collectibles","Objects","BBox","Character","Speaker","PopUp","Dialogue","DialogueLabel","UI","Effects","Escape","DialogueConstants","promptSize","promptPadding","rect","dialogueRectMargin","textPadding","speakerRect","textTypeWriterStyle","lineSpacing","wordWrap","speakerTextStyle","fadeOut","targets","duration","alpha","fadeIn","fadeAndDestroy","tween","blackScreen","Rectangle","blink","gameObject","tweens","Typewriter","textStyle","typeWriterInterval","textSprite","Text","typeWriting","charPointer","changeLine","DialogueRenderer","typewriterStyle","typewriter","dialogueBox","blinkingDiamond","gameManager","GameGlobalAPI","getInstance","getGameManager","Image","dialogueConstants","createTypewriter","drawDiamond","getDialogueContainer","diamondSprite","setDisplaySize","clearBlink","getDialogueBox","off","changeText","notifStyle","notifYPos","GamePhaseType","instance","setGameManager","gameManagerRef","getCurrLocId","currentLocationId","getLocationAtId","locationId","getCurrentCheckpoint","isStorySimulator","getAccountInfo","getModesByLocId","stateManager","getLocationMode","addLocationMode","removeLocationMode","hasLocationUpdate","changeLocationTo","locationName","hasTriggeredInteraction","triggerInteraction","getLocationAttr","attr","addLocationAttr","attrElem","removeLocationAttr","subscribeState","observer","subscribe","unsubscribeState","unsubscribe","makeObjectGlow","objectId","objectManager","makeObjectBlink","getObjPropertyMap","setObjProperty","newObjProp","enableObjectAction","callbacks","disableObjectAction","getBBoxPropertyMap","setBBoxProperty","newBBoxProp","enableBBoxAction","boundingBoxManager","disableBBoxAction","isAllComplete","isObjectiveComplete","areObjectivesComplete","completeObjective","addToUserStateList","listName","userStateManager","addToList","doesIdExistInList","clearSeveralLayers","layerTypes","withFade","layerManager","addContainerToLayer","layer","gameObj","addToLayer","fadeInLayer","fadeOutLayer","async","dialogueRenderer","notifText","showNotification","displayNotification","actionIds","phaseManager","pushPhase","Sequence","actionManager","processGameActions","popPhase","dialogueId","dialogueManager","showDialogue","getDialogue","getDialogues","collectibleId","displayPopUp","itemId","popUpManager","destroyAllPopUps","destroyPopUp","saveManager","saveGame","settingsJson","saveSettings","getLoadedUserState","soundKey","playBgMusic","stopCurrBgMusic","stopAllSound","pauseCurrBgMusic","continueCurrBgMusic","applySoundSettings","userSetting","applyUserSettings","enableKeyboardInput","inputManager","enableMouseInput","gamePhaseType","swapPhase","isCurrentPhase","renderBackgroundLayerContainer","backgroundManager","hideCharacterFromMap","characterId","characterManager","showCharacterOnMap","createCharacterSprite","overrideExpression","overridePosition","getCharacterById","GameLayerManager","mainLayer","layers","initialise","existing","layerType","layerContainer","getLayer","hideLayer","layerToHide","setVisible","showLayer","layerToFadeIn","layerToFadeOut","clearLayerContents","clearAllLayers","GameSoundManager","baseSoundManager","parentGame","getBaseSoundManager","getParentGame","sound","pauseOnBlur","userSaveState","setGlobalVolume","settings","renderBackgroundMusic","bgmKey","clearSoundAssets","clearSoundAssetMap","loadSounds","soundAssets","asset","addSoundAsset","loadSound","loadSoundAssetMap","assetMap","assetPath","audio","soundAsset","getSoundAsset","play","currBgMusicKey","getCurrBgMusicKey","setCurrBgMusicKey","currBgMusic","stopByKey","stopAll","isPlaying","pause","isPaused","chapterIndexStyle","chapterTitleStyle","chapterActionAltStyle","ALIGN_LEFT","chapConstants","defaultScrollSpeed","buttonsYOffset","buttonsXOffset","altTextXOffset","altTextYOffset","frameXOffset","frameYOffset","indexYOffset","titleYOffset","arrowXOffset","maskRect","marginX","marginY","imageRect","imageDist","imageRectWidth","CommonTextHover","renderTextHover","hoverTextBg","hoverText","loadImage","textures","image","once","loadText","cache","exists","TextAssets","defaultCheckpoint","GameMap","mapAssets","locations","talkTopics","objects","boundingBoxes","characters","actions","startActions","endActions","locId","addMapAsset","getMapAssets","addLocation","location","setModesAt","modes","Set","setNavigationFrom","navigation","getNavigationFrom","setStartActions","setEndActions","getStartActions","getEndActions","getLocations","getObjects","getBBoxes","getCharacters","getActions","getSoundAssets","getCollectibles","addItemToMap","setItemAt","setBGMusicAt","GameObjective","objective","totalNumOfObjectives","numOfCompletedObjectives","setObjective","prevState","addObjective","addObjectives","getObjectiveState","getObjectives","setObjectives","StringUtils","lines","paragraphHeaderAndBodyLines","startsWith","console","trim","isHeaderFunction","currHeader","sep","limit","repeat","phrase","trimRight","word","capitalize","GameActionType","GameLocationAttr","GameStateStorage","GamePosition","GameMode","gameModeToPhase","Move","Explore","Talk","Menu","stringToPositionMap","Left","middle","Middle","Right","stringToGameModeMap","talk","explore","move","menu","stringToLocAttrMap","stringToActionTypeMap","move_character","MoveCharacter","update_character","UpdateCharacter","obtain_collectible","ObtainCollectible","complete_objective","CompleteObjective","change_location","LocationChange","add_item","AddItem","remove_item","RemoveItem","change_background","ChangeBackground","show_dialogue","BringUpDialogue","add_mode","AddLocationMode","remove_mode","RemoveLocationMode","add_popup","AddPopup","make_object_glow","MakeObjectGlow","make_object_blink","MakeObjectBlink","stringToGameStateStorageMap","checklist","ChecklistState","userstate","UserState","ParserConverter","GameAttr","ParserValidator","locAttrAssertions","attrAssertions","assertLocAttr","locAttr","actionType","assertAttr","gameAttr","assertLocAttrs","itemIds","verifyAssertions","verifyLocAttrAssertions","verifyAttrAssertions","assertionDetails","gameLocationAttr","assertionDetail","Parser","checkpoint","actionAssertionError","objectives","attribute","ActionParser","actionDetails","actionDetail","parseAction","actionString","conditionalsString","splitByChar","gameAction","parseActionContent","actionConditions","condition","conditionDetails","hasExclamation","gameStateStorage","condParams","stringToGameStateStorage","conditionParams","validator","boolean","interactionId","actionParamString","repeatable","gameActionType","stringToActionType","actionParams","actionParamObj","gameLocAttr","stringToLocAttr","stringToGameMode","stringToPosition","generateActionId","isInteractive","isRepeatable","CharacterParser","characterList","characterDetails","parseCharacterDetails","expression","addToLoc","defaultExpression","defaultPosition","expressions","character","characterAssetKey","characterAssetValue","SpeakerParser","rawStr","speakerId","speakerPositionStr","speakerPosition","addCharacterExprToMap","charId","charExpression","isGotoLabel","isActionLabel","isSpeaker","MusicParser","bgmList","bgm","bgmIndex","actionIdNum","configuration","startingLoc","chapterText","continueParse","checkPointLines","splitToLines","splitToParagraph","header","parseCheckpointConfig","parseCheckpointParagraphs","locationBody","parseLocationConfig","parseLocationParagraphs","locationConfig","configValues","gameMode","otherLocationId","objectList","parseObjectConfig","parseActions","shortPath","objectDetails","objectProperty","objectAssetKey","objectPath","boundingBoxList","boundingBox","parseBBoxConfig","bboxDetails","bboxId","bboxProperty","checkpointConfig","locationDetails","locationDetail","locationAssetKey","locationPath","dialoguesBody","dialogueDetails","dialogueBody","parseDialogue","dialogue","parseDialogueContent","mapByHeader","createDialogueLines","dialogueLines","currIndex","goto","lastLine","nextLine","speakerDetail","callGameManagerOnTxtLoad","chapterDetails","continueGame","chapterNum","checkpointNum","filename","checkpointsFilenames","chapterKey","defaultCheckpointText","accountInfo","getSourceAcademyGame","fullSaveState","loadData","gameCheckpoint","createChapter","lastCheckpointsIdx","chapterContainer","chapterPreview","chapterFrame","chapterRepeatHover","chapterContinueHover","chapterRepeat","chapterContinue","chapterIndexText","chapterTitleText","chapterDone","getLoadedGameState","userState","lastCompletedChapter","blackTint","SampleChapters","previewBgPath","ChapterSelect","Scene","backButtonContainer","loadedGameState","autoScrolling","isScrollLeft","isScrollRight","preload","preloadAssets","renderBackground","renderChapters","autoScroll","update","newXPos","cleanUp","background","blackOverlay","mask","createMask","createChapterContainer","Display","Masks","GeometryMask","border","leftArrow","rightArrow","setScale","chapterDetail","chapterIndex","lastCheckpoint","gameSaveStates","lastCheckpointPlayed","chapterIdx","scrollToIndex","xTarget","transitionTextStyle","checkpointConstants","checkpointText","tweenDuration","entryTween","exitTween","CheckpointTransition","currChapter","currCheckpoint","lastPlayedCheckpoint","isLastCheckpoint","saveChapterComplete","showTransitionText","transitionText","saveData","GameActionManager","actionMap","getActionFromId","actionId","processGameAction","checkCanPlayAction","globalAPI","obtainCollectible","showDialogueInSamePhase","executeGameAction","all","checkConditionSatisfied","actionCondition","every","conditional","existsInUserStateList","checkAllConditionsSatisfied","GameBoundingBoxManager","observerId","bboxes","notify","hasUpdate","currLocationId","renderBBoxLayerContainer","bboxIdsToRender","bboxContainer","createBBoxLayerContainer","bboxIds","bboxPropMap","bboxProp","bbox","createBBox","sprite","activate","deactivate","bboxSprite","onPointerout","resize","obj","ratio","displayHeight","displayWidth","resizeUnderflow","CharConstants","charWidth","charRect","CharacterManager","characterMap","characterSpriteMap","renderCharacterLayerContainer","idsToRender","characterLayer","getCharacterContainer","characterContainer","characterSprite","characterXPosition","DialogueGenerator","dialogueContent","currPart","currLineNum","next","generateNextLine","dialogueLine","DialogueSpeakerRenderer","username","currentSpeakerId","changeSpeakerTo","newSpeakerDetail","hidePreviousSpeaker","showNewSpeaker","previousSpeakerId","drawSpeakerSprite","drawSpeakerBox","speakerContainer","createSpeakerBox","speakerSprite","rectangle","speakerText","DialogueManager","dialogueMap","speakerRenderer","dialogueGenerator","getDialogueGenerator","getDialogueRenderer","getSpeakerRenderer","playWholeDialogue","showNextLine","lineWithName","replace","processGameActionsInSamePhase","GlowingImage","imageGlow","clickArea","glowClearer","setTint","startGlow","clearGlow","getContainer","getClickArea","GameObjectManager","renderObjectsLayerContainer","createObjectsLayerContainer","objectIds","objectPropMap","objectContainer","objectProp","createObject","objIdsToRender","popUpYPos","popUpConstants","imgXOffset","imgYOffset","GamePopUpManager","currPopUp","assetXPos","assetYPos","popUpFrameImg","getAssetKey","popUpImage","setActive","popUp","atPosContainer","delete","objProp","emptySet","mapToJsObject","jsObject","locationStatesToJson","locationWithArrays","locationProperty","from","jsObjectToMap","GameStateManager","subscribers","checkpointObjective","locationHasUpdate","locationStates","objectPropertyMap","bboxPropertyMap","triggeredInteractions","getLocationById","obs","updateLocationStateMode","targetLocId","currLocId","updateLocationStateAttr","targetLocName","checkLocationsExist","locIds","gameSaveState","getLoadedGameStoryState","loadFromGameStoryState","loadNewGameStoryState","gameStoryState","chapterObjective","locationWithSets","jsonToLocationStates","oldAttr","isComplete","getLocationStates","getCheckpointObjectives","getTriggeredInteractions","AcademyReducer","DashboardReducer","PlaygroundReducer","queryString","shortURL","persistenceFile","WorkspaceReducer","lastOutput","sourcecastState","playerTime","deltas","SourcecastReducer","sourcereelState","initData","input","timeNow","recording","timeBefore","finished","SourcereelReducer","newIndex","newRecords","lastRecords","lastIndex","parseFloat","newReplHistoryRecords","pop","updatedLastOutput","playgroundWorkspace","ApplicationReducer","createRootReducer","combineReducers","router","connectRouter","finishInvite","initInvite","invalidEditorSessionId","setEditorSessionId","setWebsocketStatus","saveCanvas","changeDateAssessment","deleteAssessment","publishAssessment","togglePublishTo","uploadAssessment","file","forceUpdate","persistenceOpenPicker","persistenceSaveFile","persistenceSaveFileAs","persistenceInitialise","generateLzString","shortenURL","keyword","updateShortURL","toggleUsingSubst","changeQueryString","playgroundUpdatePersistenceFile","fetchSourcecastIndex","updateSourcecastIndex","saveSourcecastData","URL","createObjectURL","setCurrentPlayerTime","setCodeDeltasToApply","setInputToApply","setSourcecastData","setSourcecastDuration","setSourcecastStatus","deleteSourcecastEntry","recordInit","recordInput","resetInputs","timerPause","Date","timerReset","timerResume","timerStart","timerStop","CommonsActions","CollabEditingActions","DashboardActions","InterpreterActions","PlaygroundActions","SessionActions","SourcecastActions","SourceRecorderActions","SourcereelActions","WorkspaceActions","GroundControlActions","AcademyActions","PersistenceActions","mockAssessmentOverviews","excluded","Practical","mockGlobals","b","mockSoundLibrary","mockRuneLibrary","mockCurveLibrary","mockToneMatrixLibrary","mockAssessmentQuestions","public","score","mockClosedAssessmentQuestions","errorLine","mockPathQuestions","mockAssessments","missionPDF","Roles","mockFetchRole","trainer","mockNotifications","assessment_title","mockGradingOverviews","assessmentName","currentGrade","currentXp","xpBonus","initialGrade","initialXp","studentId","studentName","submissionStatus","groupName","questionCount","gradedCount","mockGrading","student","mockGradingSummary","leaderName","ungradedMissions","submittedMissions","ungradedSidequests","submittedSidequests","mockBackendSaga","takeEvery","store","put","select","call","permittedRoles","admin","subX","subY","mockFetchGradingOverview","mockFetchGrading","newQuestions","newAssessment","findIndex","newOverviews","sendGrade","newGrading","gradingQuestion","notificationsToAcknowledge","ids","newNotifications","computeRedirectUri","ep","port","protocol","hostname","encodeURIComponent","BackendSaga","payloadProviderId","find","clientId","searchParams","getClientId","redirectUrl","tokens","postAuth","getUser","getAssessmentOverviews","getAssessment","resp","postAnswer","codes","ok","handleResponseError","postAssessment","getGradingOverviews","getGrading","request","noHeaderAccept","shouldAutoLogout","shouldRefresh","postUnsubmit","postGrading","getNotifications","postAcknowledgeNotifications","getSourcecastIndex","postSourcecast","groupOverviews","getGradingSummary","respMsg","LoginSaga","updateLoginHref","epUrl","computeEndpointUrl","href","ConfirmDialog","buttons","onResponse","largeButtons","escapeResponse","escapeHandler","canEscapeKeyClose","contents","DIALOG_FOOTER_ACTIONS","PromptDialog","enterResponse","validationFunction","inputRef","isValid","setIsValid","defaultValue","returnResponse","buttonResponse","disableOnInvalid","handleEnter","keyCode","handleValidate","autoFocus","onKeyDown","DialogHelper","dialog","dialogOnClose","containerElement","createElement","dialogHelper","ReactDOM","singleton","closeDialog","promisifyDialog","DialogComponent","propFn","reject","finally","showSimpleConfirmDialog","showConfirmDialog","negativeLabel","positiveLabel","showSimplePromptDialog","DISCOVERY_DOCS","UPLOAD_PATH","startInitialisation","initialisationPromise","then","gapi","onerror","client","apiKey","discoveryDocs","scope","auth2","getAuthInstance","currentUser","listen","handleUserChanged","isSignedIn","getBasicProfile","getEmail","ensureInitialised","ensureInitialisedAndAuthorised","signIn","pickFile","pickFolders","showFolders","showFiles","view","google","picker","DocsView","ViewId","DOCS","FOLDERS","rootFolder","setParent","setOwnedByMe","setIncludeFolders","setSelectFolderEnabled","setMode","DocsViewMode","LIST","PickerBuilder","setTitle","enableFeature","Feature","NAV_HIDDEN","addView","setOAuthToken","getAuthResponse","access_token","setAppId","setDeveloperKey","setCallback","data","Response","ACTION","Action","PICKED","mimeType","parentId","picked","CANCEL","build","createFile","parent","parents","appProperties","source","headers","createMultipartBody","method","uploadType","updateFile","contentsMime","metaJson","boundary","generateBoundary","random","persistenceSaga","takeLatest","toastKey","drive","files","fileId","fields","lastSaved","values","v","ex","pickedDir","saveToDir","pickedFile","response","newFile","PlaygroundSaga","updateQueryString","hasTimedOut","race","shortenURLRequest","delay","shorturl","codeString","newQueryString","qs","prgrm","compressToEncodedURIComponent","signature","fetchOpts","formData","k","append","FormData","fetch","json","lastNonDetResult","WorkspaceSaga","checkWebGLAvailable","loadedScripts","getReadyWebGLForCanvas","tempvalue","exploded","externalSymbols","evalCode","blockExtraMethods","autocompleteCode","prependLength","editorNames","displaySuggestions","getNames","editorSuggestions","chapterName","builtinSuggestions","extLib","extLibSuggestions","break","blockKey","unblockKey","restorer","removed","getRestoreExtraMethodsString","restoreExtraMethods","interrupted","runInContext","scheduler","originalMaxExecTime","take","interrupt","InterruptedError","nodes","evalTestCode","newChapter","oldVariant","newVariant","oldChapter","newExternalLibraryName","oldExternalLibraryName","loadLib","runes","phaser","findDeclaration","updateInspector","EnvVisualizer","draw_env","visualiseEnv","toBeBlocked","storeValues","toRemove","getStoreExtraMethodsString","nullifier","debuggerOn","substIsActive","substActiveAndCorrectChapter","executionMethod","substVisualizer","wasm_compile_and_run","wasmCode","wasmContext","Sourceror","wasmModule","returnedValue","isNonDet","isLazy","isWasm","resume","TRY_AGAIN","useSubst","call_variant","manualToggleDebugger","oldErrors","parsed","typeErrors","typeCheck","validateAndAnnotate","idx","success","MainSaga","fork","PersistenceSaga","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","maxAge","compose","initialStore","loadedStore","playgroundEditorValue","playgroundIsEditorAutorun","playgroundExternalLibrary","playgroundSourceChapter","playgroundSourceVariant","loadStore","serializedState","localStorage","getItem","decompressed","decompressFromUTF16","err","loadStoredState","enhancers","applyMiddleware","createdStore","_createStore","run","throttle","stateToBeSaved","serialized","compressToUTF16","setItem","saveState","getState","createStore","appHistory","redirectUri","provider","client_id","redirect_uri","errorMessage","refresh_token","capitalise","computeGradingStatus","back","password","q","eval","gradingOverview","adjustment","notificationIds","noContentType","chapterno","Headers","newTokens","postRefresh","numGraded","numQuestions","emptyUserState","userStateStyle","GameUserStateManager","getList","askAssessmentComplete","assessmentCheckContainer","activateAssessmentContainer","SSImageAssets","storySimBg","invertedButton","blueUnderlay","colorIcon","imageIcon","bboxIcon","handIcon","listIcon","eraseIcon","iconBg","StorySimState","mainMenuOptStyle","SSMainMenuConstants","maxOptButtonsRow","optButtonsXSpace","optButtonsYSpace","gameTxtStorageName","defaultChapter","checkpointTxt","MainMenu","getStorySimulatorGame","setStorySimProps","mainMenuRef","bitmapFont","renderOptionButtons","optionsContainer","getOptionButtons","buttonPositions","mainMenuConstants","createOptButton","setStorySimState","ObjectPlacement","CheckpointSim","AssetUploader","ChapterSequence","xPos","yPos","callGameManager","defaultChapterText","sessionStorage","backgroundImg","backgroundUnderlay","GameInputManager","keyboardListeners","eventListeners","getScene","mouse","enabled","keyboard","registerKeyboardListener","keyboardListener","addKey","registerEventListener","eventListener","clearListeners","removeAllListeners","SSBackgroundManager","backgroundAssetPath","objectPlacement","getObjectPlacement","backgroundAssetKey","addAsset","assetKeyOnLoad","backgroundSprite","getBackgroundAssetPath","screenLog","CursorMode","toIntString","SSBBoxManager","checkpointTitle","bboxBeingDrawn","startingCoordinates","bboxDetailMap","addBBoxListeners","isCursorMode","DrawBBox","createNewBBox","registerBBox","setDraggable","setActiveSelection","getCoordinates","setDataEnabled","generateItemIdNumber","objectDetail","getLoggables","getItemById","resizeWhileBeingDrawn","startX","startY","currentX","currentY","checkpointTxtLog","bboxDetail","bboxDetailArray","setAttribute","deleteAll","altTextStyle","SSCursorModeConstants","iconBgSize","iconSpacing","inactiveAlpha","onHoverAlpha","activeAlpha","altTextXPos","altTextYPos","altTextMargin","SSCursorMode","defaultCursorMode","DragResizeObj","isModes","currCursorMode","cursorModes","currActiveModeIdx","getCurrCursorMode","setCursorMode","newMode","addCursorMode","isMode","cursorModeContainer","currIdx","modeButton","renderCursorModesContainer","activeMode","modeIcon","removeAll","spacing","loggableStyle","getIdFromShortPath","padWithTab","SSLogManager","detailMapContainer","printCheckpoint","locationAssetPath","checkpointLoggers","loggables","checkpointLogger","txt","toCapitalizedWords","log","showDetailMap","loggable","loggerRectangle","loggerText","formatObjectDetails","setLetterSpacing","hideDetailMap","SSObjectManager","objectDetailMap","renderObject","objectSprite","registerObject","generateItemId","getAssetPath","objectIdNumber","objectDetailArray","itemDetail","transformConstants","activeSelectMargin","scaleFactor","SSTransformManager","activeSelection","activeSelectRect","trackDraggables","drawActiveSelectRect","bindDeleteKey","pointer","dragX","dragY","getCursorManager","setObjAttribute","setBBoxAttribute","resizeActive","enlarge","factor","multiplyDimensions","abs","deselect","Keyboard","KeyCodes","BACKSPACE","DELETE","deleteActiveSelection","getType","deleteObj","deleteBBox","objPlacementConstants","cursorModeXPos","cursorModeYPos","transformManager","bboxManager","logManager","itemIdNumber","openBracket","closedBracket","createUIButtons","OPEN_BRACKET","CLOSED_BRACKET","isDown","uiContainer","Default","populateCursorModes","loadBackground","loadObject","cursorMode","debug","physics","default","scale","FIT","storySimulatorGame","GameBackgroundManager","renderBackgroundImage","backgroundAsset","entryTweenProps","exitTweenProps","pageBannerTextStyle","listBannerTextStyle","collectibleTitleStyle","collectibleDescStyle","defaultCollectibleProp","CollectibleConstants","backButtonYPos","pageYStartPos","pageYSpacing","pageTextXPos","listYStartPos","listYSpacing","listTextXPos","previewXPos","previewYPos","previewDim","descYOffset","arrowDownYPos","arrowXMidPos","arrowXScale","arrowYScale","itemsPerPage","CollectiblePage","GameCollectiblesManager","previewContainer","itemsContainer","pageChosenContainer","currActivePage","activePageNumber","getLayerManager","getPhaseManager","page","pageName","setPage","createItemsContainer","bannerPos","getPageOptPositions","chosenIdx","pg","bannerChosen","collectibleConstants","setPreview","createUIContainer","collectibleContainer","blackUnderlay","collectiblesBg","pageOptButtons","pageOptButtonPositions","createPageOpt","CollectibleMenu","arrowLeft","nextPage","setRotation","PI","arrowRight","previewSprite","previewTitle","previewDesc","currPageNum","newPageNum","MAX_SAFE_INTEGER","getItems","itemPositions","createItemButton","pageNum","itemList","Achievements","itemStartIdx","CommonRadioButton","defaultChoiceIdx","radioChoiceConfig","circleDim","checkedDim","outlineThickness","choiceTextConfig","bitmapTextStyle","activeChoice","activeChoiceIdx","getRadioButtons","renderRadioButtons","buttonPos","createRadioButton","Ellipse","setStrokeStyle","choiceText","optionChecked","getValueIdx","getChoices","getChosenChoice","optionTextStyle","optionHeaderTextStyle","applySettingsTextStyle","settingsConstants","optXSpace","optXPos","volUnderlineYPos","volTextXpos","volTextYPos","volOptYPos","volContainerOpts","escapeOptButtonStyle","volumeRadioOptTextStyle","optTextStyle","escapeConstants","textOriX","textOriY","buttonYPos","optTextXPos","optTextYPos","radioButtonsXSpace","volOptXPos","GameEscapeManager","volumeOptions","getSoundManager","getSaveManager","getInputManager","escapeMenuContainer","escapeMenuBg","volOpt","createVolOptContainer","getOptButtons","createEscapeOptButton","EscapeMenu","applySettings","activateUI","deactivateUI","volOptContainer","userVol","userVolIdx","volumeText","volumeVal","newUserSetting","GamePhaseManager","phaseMap","phaseStack","phaseTransitionCallback","None","prevPhase","executePhaseTransition","getCurrentPhase","newPhase","phase","SaveManagerType","GameSaveManager","version","achievements","Game","Settings","Simulator","prevGameState","gameStateManager","currentLocation","currentPhase","gameStateToJson","userSettingsToJson","getLoadedLocation","getLoadedPhase","magnifyingGlass","magnifyingGlassHighlight","magnifyingGlassChecked","GameModeExplore","exploreMenuContainer","explorePointerUp","explorePointerOver","explorePointerOut","setDefaultCursor","modeButtonStyle","modeBannerRect","modeMenuConstants","buttonYPosOffset","GameModeMenu","getLatestLocationModes","latestModesInLoc","modeMenuContainer","modeBanner","getModeButtons","createModeButton","moveButtonStyle","modeMoveConstants","buttonYSpace","buttonXPosOffset","previewFrameXPos","previewWidth","previewHeight","GameModeMove","setTexture","getLatestNavigations","moveMenuContainer","previewFrame","previewFill","navigations","getMoveButtons","createMoveButton","previewLoc","previewDefault","nav","GameModeSequence","talkButtonYSpace","talkButtonStyle","GameModeTalk","getLatestTalkTopics","talkMenuContainer","getTalkTopicButtons","createTalkTopicButton","checkedSprite","dialogueIds","GameManager","currentCheckpoint","escapeManager","collectibleManager","GameCharacterManager","GameDialogueManager","GameBBoxManager","initialiseManagers","escapeMenu","collectibleMenu","loadGameState","checkpointTransition","preloadLocationsAssets","bindKeyboardTriggers","initialiseForStaff","initialiseForGame","loadAssessments","startAction","gameLocation","bringUpUpdateNotif","fadeBlack","blackFade","renderLocation","ESC","I","roomDefaultCode","getRoomPreviewCode","accInfo","mission","progQn","getStudentRoomCode","mainMenuStyle","ALIGN_RIGHT","optionsText","studentRoom","collectible","optXOffset","textXOffset","bannerHide","bannerShow","onFocusOptTween","outFocusOptTween","roomCode","createOptionButton","tweenOnHover","tweenOffHover","optButton","studentCode","MyRoom","renderMyRoom","RoomPreview","preloadImageMap","preloadSoundMap","initialiseForSettings","remotePath","volumeRadioButtons","settingsSaveManager","renderOptions","settingBgImg","renderVolumeOptions","applySettingsButton","volumeBg","SourceAcademyGame","global","soundAssetMap","stopAllSounds","setAccountInfo","storySimulatorProps","getStorySimProps","sourceAcademyGame","createHeaders","gameStates","isResetThere","setIsResetThere","sessionLoaded","setSessionLoaded","resetData","GradingEditGradingCell","activeClassName","ACTIVE","ANNOTATION","GradingGradeCell","LEFT","GradingStatusCell","GradingUnsubmitCell","handleConfirmUnsubmit","handleUnsubmitSubmission","isAlertOpen","handleUnsubmitAlertClose","Admin","canEscapeKeyCancel","canOutsideClickCancel","cancelButtonText","onConfirm","onCancel","GradingEditor","validateGradesBeforeSave","handleSaving","gradeAdjustmentInput","xpAdjustmentInput","onClickSaveAndContinue","currentlySaving","handleGradingSaveAndContinue","discardChanges","confirm","onGradeAdjustmentInputChange","valueAsNumber","valueAsString","onXpAdjustmentInputChange","generateMarkdownPreview","markdown","selectedTab","discardButtonOpts","saveAndContinueButtonOpts","totalGrade","totalXp","gradePlaceholder","xpPlaceholder","onValueChange","buttonPosition","placeholder","onTabChange","minEditorHeight","maxEditorHeight","minPreviewHeight","getIcon","blueprintIconProvider","handleGradingSave","TRASH","UPDATED","blueprintIcon","mdeToBlueprintIconMapping","htmlTitle","HEADER","BOLD","ITALIC","STRIKETHROUGH","LINK","CITATION","MEDIA","UNGROUP_OBJECTS","NUMBERED_LIST","SQUARE","HELP","GradingEditorContainer","GradingWorkspace","gradingWorkspacePath","handleGradingFetch","storedSubmissionId","handleUpdateCurrentSubmissionId","GradingWorkspaceContainer","unsavedChanges","GradingXPCell","Grading","GradingStatus","GradingMarks","NotificationBadgeCell","GradingExp","updatePaginationState","newTotalPages","paginationGetTotalPages","newCurrPage","paginationGetCurrentPage","currPage","maxPages","rowCountString","formatRowCountString","paginationGetRowCount","isBackDisabled","isForwardDisabled","pageSize","totalRows","handleFilterChange","changeVal","filterValue","handleFilterKeypress","handleApplyFilter","setQuickFilter","handleGroupsFilter","groupFilterEnabled","handleFetchGradingOverviews","exportCSV","exportDataAsCsv","toISOString","columnKeys","changePaginationView","paginationGoToFirstPage","paginationGoToPreviousPage","paginationGoToNextPage","paginationGoToLastPage","sortSubmissionsByNotifications","cellRendererFramework","suppressMovable","suppressMenu","suppressSizeToFit","maxWidth","valueFormatter","cellStyle","backgroundColor","Colors","GREEN5","RED5","comparator","valueA","valueB","nodeA","nodeB","isInverted","cellRendererParams","padding","colId","hide","loadingDisplay","labelFor","inline","leftIcon","onKeyPress","onBlur","GIT_REPO","CHEVRON_BACKWARD","CHEVRON_LEFT","CHEVRON_RIGHT","CHEVRON_FORWARD","EXPORT","onPaginationChanged","pagination","paginationPageSize","suppressPaginationPanel","GradingContainer","DeleteCell","handleCloseDialog","dialogOpen","handleOpenDialog","handleDelete","handleDeleteAssessment","canOutsideClickClose","dropZoneStyle","flex","flexDirection","alignItems","justifyContent","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","MaterialDropzone","setFile","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useDropzone","onDrop","acceptedFiles","handleToggleOnChange","toggleDisplayConfirmation","toggleForceUpdate","handleConfirmForceUpdate","handleCancelForceUpdate","displayConfirmation","UPLOAD","handleUploadAssessment","checked","EditCell","maxDate","setFullYear","dateInput","formatDate","handleDateChange","parseDate","forOpenDate","timePrecision","closeOnSelection","toLocaleString","selectedDate","handleUpdate","handleAssessmentChangeDate","fieldName","prettyOpenAt","prettyCloseAt","PublishCell","handlePublishAssessment","isPublished","lowerCaseText","toggleButton","GroundControl","sortByCategoryAndDate","assessmentOverview","clone","formattedOpenAt","formattedCloseAt","Grid","GroundControlContainer","ControlBarAutorunButtons","toggleAutorunButton","handleToggleEditorAutorun","autoRunButton","AUTOMATIC_UPDATES","stopButton","STOP","debuggerResetButton","pauseButton","resumeButton","ControlBarExternalLibrarySelect","iExternals","ExternalSelectComponent","externalRenderer","modifiers","currentExternal","handleExternalSelect","SideContentEnvVisualizer","tryToLoad","element","loading","sourceDocsChapter3_2","rel","SideContentInspector","SideContentListVisualizer","sourceDocsChapter2_2","SourceRecorderControlBar","handleSeeked","stopPreviousPlaybackAndApplyFromStart","handleAudioLoaded","handleSetSourcecastDuration","applyDeltas","handleSetCodeDeltasToApply","currentDeltaRevision","applyPlaybackDataFromStart","currentRevision","currentTime","deltaWithTime","time","futureData","len","handleSetInputToApply","handlePlayerPausing","handleSetEditorReadonly","handleSetSourcecastStatus","stopCurrentPlayback","handlePlayerPlaying","playing","handlePlayerStopping","handleSetCurrentPlayerTime","currentPlayerProgress","updatePlayerTime","handlePlayerProgressBarChange","renderLabel","totalTime","sec","currentSourcecastItem","PlayerPlayButton","PlayerPauseButton","PAUSE","onEnded","onLoadedMetadata","onSeeked","onTimeUpdate","stepSize","labelRenderer","SourcecastEditor","onSelectionChange","handleEvaluate","isRecording","handleRecordInput","getTimerDuration","delta","editorCursorPositionToBeApplied","getRange","isBackwards","getDocument","applyDelta","setRange","readOnly","SourceRecorderDeleteCell","handleDeleteSourcecastEntry","SourceRecorderSelectCell","handleSetSourcecastData","SourcecastTable","onresize","valueGetter","getStandardDate","inserted_at","SourcastDeleteCell","handleFetchSourcecastIndex","SourcereelControlbar","recorder","updateTimerDuration","handleTruncatePlaybackData","truncatedInputs","handleResetInputs","handleRecorderPausing","handleTimerPause","updater","exportWAV","handleRecorderStarting","Recorder","handleRecordInit","handleTimerStart","handleRecorderResuming","handleTimerResume","handleRecorderResumingFromCurrent","handleRecorderStopping","handleTimerStop","fileDataBlob","handleRecorderResetting","handleTimerReset","handleRecorderSaving","handleSaveSourcecastData","saveTitle","saveDescription","handleSaveTitleInputChange","handleSaveDescriptionInputChange","getPermission","RecorderPauseButton","RecorderResumeButton","RecorderResumeFromCurrentButton","RecorderStartButton","RecorderStopButton","RecorderResetButton","REFRESH","RecorderSaveButton","popoverClassName","inheritDarkTheme","htmlFor","Sourcereel","autorunButtons","COMPASS","INTRODUCTION","introduction","listVisualizerTab","inspectorTab","envVisualizerTab","sourcecastControlbarProps","dataVisualiser","SEARCH","inspector","GLOBE","envVisualiser","SourcereelContainer","readonly","createAssetRequest","requestPath","headerConfig","requestDetails","s3AssetFolders","fetchAssetPaths","folders","folderName","fetchFolder","combinedList","newList","uploadAssets","fileList","types","uploadAsset","AssetFileUploader","setFileList","folder","setFolder","showfolderOverwrite","setShowFolderOverwrite","folderOverwrite","setFolderOverwrite","onChangeFolder","innerText","BOTTOM","multiple","loadedFiles","finalFolder","AssetViewer","displayAssetPath","crossOrigin","StorySimulatorAssetSelection","assetPaths","currentAsset","setCurrentAsset","assetTree","setAssetTree","assetPathsToTree","handleNodeClick","nodeData","treeMap","childNodes","isSelected","isExpanded","selectedPath","StorySimulatorAssetViewer","onNodeClick","deleteFile","filePath","deleteS3File","assetObj","parentFolders","secondaryLabel","SortableItem","SortableElement","SortableList","SortableContainer","SortableComponent","setItemList","useState","onSortEnd","oldIndex","arrayMove","loadFileLocally","storageName","txtFile","reader","FileReader","readAsText","onloadend","CheckpointTxtLoader","useDefaultChapter","textAssets","endsWith","setFilename","changeChosenFilename","innerHTML","uploadButton","chooseS3Txt","clearSessionStorage","StorySimulator","setAssetPaths","storySimState","StorySimulatorAssetFileUploader","AcademyDefaultChapterContainer","handleFetchChapter","handleUpdateChapter","AcademyNavigationBar","Alignment","BUTTON","LIGHTBULB","PREDICTIVE_ANALYSIS","Contest","COMPARISON","MANUAL","Staff","MOBILE_VIDEO","ENDORSED","CROWN","Academy","assessmentRenderFactory","routerProps","dynamicRedirect","clickedFrom","lastAcademy","redirectToGame","redirectTo404","handleFetchNotifications","component","exact","AcademyContainer","dot","ContributorsDetails","githubOrg","ignoreRepos","ignoreContributors","ContributorsList","repos","contributors","repo","link","contributors_url","fetchRepos","responses","endpoints","contributor","photo","avatar_url","githubPage","html_url","githubName","commits","contributions","fetchContributors","contributorList","array","arrayMapped","Contributors","LoginButton","LARGE","LOG_IN","playgroundButton","Login","handleFetchAuth","ELEVATION_4","LOCK","vertical","providers","handleLogin","LoginContainer","useDispatch","dispatchProps","capitalizeFirstLetter","retrieveLocalAssessment","retrieveLocalAssessmentOverview","storeLocalAssessment","storeLocalAssessmentOverview","makeAssessmentOverview","maxGradeVal","maxXpVal","task","CONTENT","TASK","rawOverview","$","kind","duedate","coverimage","number","startdate","READING","WEBSUMMARY","makeAssessment","questionArr","makeQuestions","globalDeployment","makeLibrary","DEPLOYMENT","graderDeployment","GRADERDEPLOYMENT","TEXT","deploymentArr","deployment","IMPORT","EXTERNAL","nameVal","symbolsVal","SYMBOL","globalsVal","GLOBAL","IDENTIFIER","VALUE","Function","interpreter","PROBLEMS","PROBLEM","problem","curId","localMaxXp","maxxp","maxgrade","makeProgramming","makeMCQ","choicesVal","SNIPPET","SOLUTION","solutionVal","CHOICE","TESTCASES","publicTestcases","PUBLIC","privateTestcases","PRIVATE","PREPEND","POSTPEND","TEMPLATE","makeTestcase","GRADER","graderTemplate","download","click","removeChild","exportLibrary","assessmentToXml","snippet","publicTests","privateTests","EditingOverviewCard","saveEditOverview","fieldValue","editingOverviewField","updateEditingOverview","handleEditOverview","toggleEditField","toggleOptionsOverlay","showOptionsOverlay","handleExportXml","assessmentStr","overviewStr","builder","Builder","xml","xmlStr","buildObject","exportXml","makeEditingOverviewTextarea","makeEditingOverviewCard","makeEditingOverviewCardTitle","createPlaceholder","makeOptionsButton","makeOverviewCardButton","makeExportButton","WRENCH","saveCategory","optionsOverlay","categorySelect","assessmentCategoriesArr","CategorySelectComponent","categoryRenderer","ControlBarToggleEditModeButton","editMode","editingMode","toggleEditMode","getValueFromPath","assignToPath","limitNumberRange","TextAreaContent","saveEditAssessment","isNumber","isNaN","originalVal","processResults","assessmentVal","isEditing","handleEditAssessment","makeEditingTextarea","fieldVal","isNumberVal","useRawValue","filler","AutograderTab","addTestcase","removeTestcase","splice","autograderCard","testcasePath","publicTestPath","privateTestPath","PLUS","DeploymentTab","deploymentTab","deploymentPath","pathToLibrary","symbol","textareaContent","MINUS","handleSymbolDelete","globalValueTextareaContent","handleGlobalDelete","resetLibrary","handleRefreshLibrary","symbolsFragment","externalSelect","handleNewSymbol","globalsFragment","borderSpacing","handleNewGlobal","removeSpaces","pathVal","handleGlobalValueUpdate","altEval","_e","handleSwitchDeployment","isEmptyLibrary","pathToCopy","isOptionalDeployment","GradingTab","gradingTab","ManageQuestionTab","manageQuestionTab","DOCUMENT","confirmSave","makeQuestion","deepCopy","deleteQuestion","CARET_UP","shiftQuestion","FONT","dir","template","modifyAssessment","showSaveOverlay","confirmSaveOverlay","arr","MCQQuestionTemplateTab","mcqTab","mcqButton","deleteButton","delOption","addOption","QuestionEditorSelect","questionEditors","CHEVRON_UP","CHEVRON_DOWN","ProgrammingQuestionTemplateTab","programmingTab","activeEditor","copyFromEditorButton","handleCopyFromEditor","copyToEditorButton","handleCopyToEditor","editorPanel","menuRenderer","currentEditor","handleChangeActiveEditor","templateFocused","templateValue","focusEditor","unFocusEditor","handleTemplateChange","handleUpdateWorkspace","EditingWorkspace","formatedQuestionId","originalMaxGrade","getMaxMarks","originalMaxXp","resetWorkspaceValues","uniq","handleSaveGradeAndXp","curGrade","changeGrade","curXp","changeXp","updateAssessmentOverview","updateEditAssessmentState","updateAndSaveAssessment","toggleEditingMode","toggle","qnType","questionTemplateTab","editorQuestionOverview","editorQuestionTemplate","HOME","editorLocalDeployment","editorLocalGraderDeployment","editorGrading","editorAutograder","editorBriefing","editorManageQuestion","editorGlobalDeployment","editorGlobalGraderDeployment","currentState","seen","hasOwnProperty","EditingWorkspaceContainer","MissionCreator","fileReader","handleFileRead","parseString","entireAssessment","assessmentArr","makeEntireAssessment","fileInputText","handleChangeFile","makeMission","bind","accept","NEW_OBJECT","MissionCreatorContainer","ownProps","MissionControl","editingOverview","editOverview","assessmentProps","missionEditingCard","MissionControlContainer","NotFound","ControlBarExecutionTime","handleChangeExecTime","stateToIntent","INACTIVE","SAVED","DIRTY","ControlBarPersistenceButtons","currentFile","isDirty","mainButton","CLOUD","openButton","DOCUMENT_OPEN","onClickOpen","saveButton","saveAsButton","SEND_TO","onClickSaveAs","logoutButton","loggedInAs","LOG_OUT","onClickLogOut","onOpening","onPopoverOpening","POPOVER_DISMISS","ControlBarSessionButtons","inviteInputElem","joinElemValue","handleChange","selectInviteInputText","inviteButton","GRAPH","onSessionCreated","createNewSession","sessionId","handleSetEditorSessionId","handleInitInvite","DUPLICATE","joinButton","onSubmit","handleInvalidEditorSessionId","preventDefault","KEY_ENTER","leaveButton","FEED","SOCIAL_MEDIA","RED3","GREEN3","focus","ControlBarShareButton","shareInputElem","selectShareInputText","isLoading","SHARE","SIZE_SMALL","handleShortenURL","handleGenerateLz","handleUpdateShortURL","currentTarget","SideContentFaceapiDisplay","_WIDTH","_HEIGHT","takePhotoA","video","takePhotoB","takePhotoC","resetPhotoA","resetPhotoB","resetPhotoC","autoPlay","CAMERA","RESET","SubstDefaultText","LESS_THAN","GREATER_THAN","substKeyMap","FIRST_STEP","LAST_STEP","SubstCodeDisplay","SideContentSubstVisualizer","getDiffMarkers","contIndex","pathified","redexed","redex","diffMarkers","mainprog","front","startR","startC","endR","endC","sliderShift","stepFirst","stepLast","lastStepValue","hasRunCode","substHandlers","keyMap","wrapEnabled","getText","explanation","SideContentVideoDisplay","$video","swapModes","handleSnapPicture","handleStartVideo","handleWidthChange","handleHeightChange","VD","deinit","handleCloseVideo","handleUpdateDimensions","m","videoIsActive","stillIsActive","VIDEO","HORIZONTAL_DISTRIBUTION","minorStepSize","majorStepSize","VERTICAL_DISTRIBUTION","MAIN_INTRODUCTION","sourceDocs","HOTKEYS_INTRODUCTION","aceHotkeys","sourceHotkeys","generateIntroductionText","sourceType","source_1","source_1_Wasm","source_1_Lazy","source_2","source_2_Lazy","source_3","source_3_Nondet","source_3_Concurrent","source_4","source_4_Gpu","generateSourceDocsLink","generateSourceIntroduction","videoDisplayTab","FaceapiDisplayTab","MUGSHOT","Playground","lastEdit","setLastEdit","isGreen","setIsGreen","setSelectedTab","hasBreakpoints","setHasBreakpoints","onEditorValueChange","handleUsingSubst","onChangeTabs","processStepperOutput","editorOutput","isStepperOutput","chapterSelectHandler","persistenceUser","handlePersistenceUpdateFile","persistenceIsDirty","persistenceButtons","handlePersistenceSaveFile","handlePersistenceOpenPicker","handlePersistenceLogOut","handlePersistenceInitialise","executionTime","sessionButtons","shareButton","playgroundIntroductionTab","FLOW_REVIEW","numberOfBreakpoints","arrayItem","PlaygroundContainer","s","Sourcecast","SourceRecorderEditor","SourceRecorderTable","SourcecastContainer","ProfileCard","isInvalidMission","isInvalidXP","missionDetail","animate","parseColour","getFrac","stripes","xpDetails","renderIcon","Profile","numClosed","userDetails","den","frac","PULSE","summaryCallouts","toFixed","USER","ProfileContainer","DropdownAbout","moduleDetails","DropdownHelp","techSVC","techSVCNumber","githubIssues","piazza","Dropdown","toggleAboutOpen","isAboutOpen","toggleHelpOpen","isHelpOpen","toggleProfileOpen","isProfileOpen","profile","titleCase","logout","handleLogOut","wrd","substr","NavigationBar","SYMBOL_DIAMOND","MUSIC","HEART","parseQuery","isArray","Application","redirectToPlayground","redirectToAcademy","parsePlayground","toAcademy","toIncubator","toLogin","qstr","search","parsePrgrm","parseChapter","currentPlaygroundChapter","parseVariant","currentPlaygroundVariant","parseExternalLibrary","currentExternalLibrary","parseExecTime","handleEnsureLibrariesLoaded","handleExternalLibrarySelect","handleSetExecTime","qsParsed","hash","lz","decompressFromEncodedURIComponent","variantQuery","matchingLang","language","ApplicationContainer","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Sentry","dsn","rootContainer","setBackendStaticURL","origin","contentType","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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CA,QACA,SACA,SACA,QACA,QACA,QACA,oBACA,QACA,YACA,SACA,aACA,QACA,SACA,qBACA,oBACA,mBACA,cACA,SACA,YACA,aACA,aACA,iBACA,SACA,QACA,SACA,OACA,SACA,OACA,SACA,QACA,YACA,SACA,WACA,eACA,UACA,aAGIC,GAAgB,CACpB,aACA,iBACA,iBACA,iCACA,oCACA,2BACA,wCACA,OACA,OACA,YACA,eACA,cACA,kBACA,eACA,2BACA,YACA,QAEA,mBACA,YACA,YACA,eACA,wBACA,WACA,eACA,kBACA,uBACA,MACA,SACA,0BACA,yBACA,oBACA,+BAGIC,GAAgB,CACpB,aACA,WACA,eACA,OACA,OACA,gBACA,iBACA,cACA,aACA,gBACA,2BACA,2BACA,yBACA,eACA,iBACA,iBACA,cACA,mBAEA,cACA,SACA,aAEA,OACA,gBACA,WACA,QACA,OACA,SACA,SAGIC,GAAqB,CACzB,kBACA,UACA,YACA,gBACA,QACA,cACA,gBAGIC,GAAe,CACnB,SACA,WACA,UACA,UACA,aACA,aACA,kBACA,iBACA,yBACA,gCACA,gBACA,kBACA,mBACA,eACA,gBAiBIC,GAAqD,CACzD,CAACN,GAAoBO,KAAM,IAC3B,CAACP,GAAoBQ,MAAOP,IAC5B,CAACD,GAAoBS,OAAQP,IAC7B,CAACF,GAAoBU,OAAQP,IAC7B,CAACH,GAAoBW,YAAaP,IAClC,CAACJ,GAAoBY,SAAUP,IAC/B,CAACL,GAAoBa,gBArBQ,CAC7B,cACA,oBACA,eACA,eACA,aACA,mBAgBA,CACEb,GAAoBc,IACpBb,GAAac,OAAOb,GAAeC,GAAeC,GAAoBC,MAI7DW,GAA2C,IAAIxG,IAAI8F,IC5GzD,IAAKW,GAMAC,I,SANAD,K,0BAAAA,E,wBAAAA,E,aAAAA,Q,cAMAC,K,kBAAAA,E,cAAAA,E,eAAAA,Q,KAeL,MAAMC,GAAoC,CAC/C,CAAE3N,QAAS,EAAGC,QAAS,WACvB,CAAED,QAAS,EAAGC,QAAS,QACvB,CAAED,QAAS,EAAGC,QAAS,QACvB,CAAED,QAAS,EAAGC,Q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","file":"static/js/main.7921364a.chunk.js","sourcesContent":["import { IconName } from '@blueprintjs/core';\n\nimport { DebuggerContext } from '../workspace/WorkspaceTypes';\n\nexport const NOTIFY_PROGRAM_EVALUATED = 'NOTIFY_PROGRAM_EVALUATED';\n\nexport enum SideContentType {\n  autograder = 'autograder',\n  briefing = 'briefing',\n  dataVisualiser = 'data_visualiser',\n  editorGrading = 'editor_grading',\n  editorAutograder = 'editor_autograder',\n  editorBriefing = 'editor_briefing',\n  editorGlobalDeployment = 'editor_global_deployment',\n  editorGlobalGraderDeployment = 'editor_global_grader_deployment',\n  editorLocalDeployment = 'editor_local_deployment',\n  editorLocalGraderDeployment = 'editor_local_grader_deployment',\n  editorManageQuestion = 'editor_manage_question',\n  editorQuestionOverview = 'editor_question_overview',\n  editorQuestionTemplate = 'editor_question_template',\n  envVisualiser = 'env_visualiser',\n  grading = 'grading',\n  introduction = 'introduction',\n  inspector = 'inspector',\n  questionOverview = 'question_overview',\n  sourcereel = 'sourcereel',\n  substVisualizer = 'subst_visualiser',\n  toneMatrix = 'tone_matrix'\n}\n\n/**\n * @property label A string that will appear as the tooltip.\n *\n * @property iconName BlueprintJS IconName element, used to render the\n *   icon which will be displayed over the SideContent panel.\n *\n * @property body The element to be rendered in the SideContent panel\n *  when the tab is selected.\n *\n * @property id A string/number that will be used as the tab ID and key.\n *  If id is undefined, id will be set to label by the renderTab function.\n *\n * @property disabled Set this property to true to disable a tab. The\n * corresponding tab label will still be rendered on hover, but the\n * tab will be greyed out and cannot be selected. Default value: false.\n */\nexport type SideContentTab = {\n  label: string;\n  iconName: IconName;\n  body: JSX.Element;\n  toSpawn: (context: DebuggerContext) => boolean;\n  id?: SideContentType;\n  disabled?: boolean;\n};\n","import { Context } from 'js-slang';\n\nimport { SourcecastWorkspaceState } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { SourcereelWorkspaceState } from '../../features/sourceRecorder/sourcereel/SourcereelTypes';\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { AutogradingResult, Testcase } from '../assessment/AssessmentTypes';\nimport { Position } from '../editor/EditorTypes';\nimport { SideContentType } from '../sideContent/SideContentTypes';\n\nexport const BEGIN_CLEAR_CONTEXT = 'BEGIN_CLEAR_CONTEXT';\nexport const BROWSE_REPL_HISTORY_DOWN = 'BROWSE_REPL_HISTORY_DOWN';\nexport const BROWSE_REPL_HISTORY_UP = 'BROWSE_REPL_HISTORY_UP';\nexport const CHANGE_EDITOR_HEIGHT = 'CHANGE_EDITOR_HEIGHT';\nexport const CHANGE_EDITOR_WIDTH = 'CHANGE_EDITOR_WIDTH';\nexport const CHANGE_EXEC_TIME = 'CHANGE_EXEC_TIME';\nexport const CHANGE_EXTERNAL_LIBRARY = 'CHANGE_EXTERNAL_LIBRARY';\nexport const CHANGE_SIDE_CONTENT_HEIGHT = 'CHANGE_SIDE_CONTENT_HEIGHT';\nexport const CHAPTER_SELECT = 'CHAPTER_SELECT';\nexport const CLEAR_REPL_INPUT = 'CLEAR_REPL_INPUT';\nexport const CLEAR_REPL_OUTPUT = 'CLEAR_REPL_OUTPUT';\nexport const CLEAR_REPL_OUTPUT_LAST = 'CLEAR_REPL_OUTPUT_LAST';\nexport const END_CLEAR_CONTEXT = 'END_CLEAR_CONTEXT';\nexport const ENSURE_LIBRARIES_LOADED = 'ENSURE_LIBRARIES_LOADED';\nexport const EVAL_EDITOR = 'EVAL_EDITOR';\nexport const EVAL_REPL = 'EVAL_REPL';\nexport const PROMPT_AUTOCOMPLETE = 'PROMPT_AUTOCOMPLETE';\nexport const EVAL_SILENT = 'EVAL_SILENT';\nexport const EVAL_TESTCASE = 'EVAL_TESTCASE';\nexport const MOVE_CURSOR = 'MOVE_CURSOR';\nexport const NAV_DECLARATION = 'NAV_DECLARATION';\nexport const PLAYGROUND_EXTERNAL_SELECT = 'PLAYGROUND_EXTERNAL_SELECT ';\nexport const RESET_TESTCASE = 'RESET_TESTCASE';\nexport const RESET_WORKSPACE = 'RESET_WORKSPACE';\nexport const SEND_REPL_INPUT_TO_OUTPUT = 'SEND_REPL_INPUT_TO_OUTPUT';\nexport const TOGGLE_EDITOR_AUTORUN = 'TOGGLE_EDITOR_AUTORUN';\nexport const UPDATE_ACTIVE_TAB = 'UPDATE_ACTIVE_TAB';\nexport const UPDATE_CURRENT_ASSESSMENT_ID = 'UPDATE_CURRENT_ASSESSMENT_ID';\nexport const UPDATE_CURRENT_SUBMISSION_ID = 'UPDATE_CURRENT_SUBMISSION_ID';\nexport const UPDATE_EDITOR_VALUE = 'UPDATE_EDITOR_VALUE';\nexport const UPDATE_EDITOR_BREAKPOINTS = 'UPDATE_EDITOR_BREAKPOINTS';\nexport const UPDATE_HAS_UNSAVED_CHANGES = 'UPDATE_HAS_UNSAVED_CHANGES';\nexport const UPDATE_REPL_VALUE = 'UPDATE_REPL_VALUE';\nexport const UPDATE_WORKSPACE = 'UPDATE_WORKSPACE';\nexport const FETCH_CHAPTER = 'FETCH_CHAPTER';\nexport const UPDATE_CHAPTER = 'UPDATE_CHAPTER';\nexport const CHANGE_CHAPTER = 'CHANGE_CHAPTER';\n\nexport type WorkspaceLocation = keyof WorkspaceManagerState;\n\ntype AssessmentWorkspaceAttr = {\n  readonly currentAssessment?: number;\n  readonly currentQuestion?: number;\n  readonly hasUnsavedChanges: boolean;\n};\ntype AssessmentWorkspaceState = AssessmentWorkspaceAttr & WorkspaceState;\n\ntype GradingWorkspaceAttr = {\n  readonly currentSubmission?: number;\n  readonly currentQuestion?: number;\n  readonly hasUnsavedChanges: boolean;\n};\ntype GradingWorkspaceState = GradingWorkspaceAttr & WorkspaceState;\n\ntype PlaygroundWorkspaceAttr = {\n  readonly usingSubst: boolean;\n};\nexport type PlaygroundWorkspaceState = PlaygroundWorkspaceAttr & WorkspaceState;\n\nexport type WorkspaceManagerState = {\n  readonly assessment: AssessmentWorkspaceState;\n  readonly grading: GradingWorkspaceState;\n  readonly playground: PlaygroundWorkspaceState;\n  readonly sourcecast: SourcecastWorkspaceState;\n  readonly sourcereel: SourcereelWorkspaceState;\n};\n\nexport type WorkspaceState = {\n  readonly autogradingResults: AutogradingResult[];\n  readonly breakpoints: string[];\n  readonly context: Context;\n  readonly editorPrepend: string;\n  readonly editorReadonly: boolean;\n  readonly editorSessionId: string;\n  readonly editorValue: string | null;\n  readonly editorPostpend: string;\n  readonly editorTestcases: Testcase[];\n  readonly editorHeight: number;\n  readonly editorWidth: string;\n  readonly execTime: number;\n  readonly highlightedLines: number[][];\n  readonly newCursorPosition?: Position;\n  readonly isRunning: boolean;\n  readonly isDebugging: boolean;\n  readonly enableDebugging: boolean;\n  readonly isEditorAutorun: boolean;\n  readonly output: InterpreterOutput[];\n  readonly externalLibrary: ExternalLibraryName;\n  readonly replHistory: ReplHistory;\n  readonly replValue: string;\n  readonly sharedbAceInitValue: string;\n  readonly sharedbAceIsInviting: boolean;\n  readonly sideContentActiveTab: SideContentType;\n  readonly sideContentHeight?: number;\n  readonly websocketStatus: number;\n  readonly globals: Array<[string, any]>;\n  readonly debuggerContext: DebuggerContext;\n};\n\ntype ReplHistory = {\n  browseIndex: null | number; // [0, 49] if browsing, else null\n  records: string[];\n  originalValue: string;\n};\n\nexport type DebuggerContext = {\n  result: any;\n  lastDebuggerResult: any;\n  code: string;\n  context: Context;\n  workspaceLocation?: WorkspaceLocation;\n};\n","import { Context } from 'js-slang';\nimport { Variant } from 'js-slang/dist/types';\nimport { action } from 'typesafe-actions';\n\nimport { SET_EDITOR_READONLY } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { HIGHLIGHT_LINE } from '../application/types/InterpreterTypes';\nimport { Library } from '../assessment/AssessmentTypes';\nimport { Position } from '../editor/EditorTypes';\nimport { NOTIFY_PROGRAM_EVALUATED, SideContentType } from '../sideContent/SideContentTypes';\nimport {\n  BEGIN_CLEAR_CONTEXT,\n  BROWSE_REPL_HISTORY_DOWN,\n  BROWSE_REPL_HISTORY_UP,\n  CHANGE_CHAPTER,\n  CHANGE_EDITOR_HEIGHT,\n  CHANGE_EDITOR_WIDTH,\n  CHANGE_EXEC_TIME,\n  CHANGE_EXTERNAL_LIBRARY,\n  CHANGE_SIDE_CONTENT_HEIGHT,\n  CHAPTER_SELECT,\n  CLEAR_REPL_INPUT,\n  CLEAR_REPL_OUTPUT,\n  CLEAR_REPL_OUTPUT_LAST,\n  END_CLEAR_CONTEXT,\n  ENSURE_LIBRARIES_LOADED,\n  EVAL_EDITOR,\n  EVAL_REPL,\n  EVAL_TESTCASE,\n  FETCH_CHAPTER,\n  MOVE_CURSOR,\n  NAV_DECLARATION,\n  PLAYGROUND_EXTERNAL_SELECT,\n  PROMPT_AUTOCOMPLETE,\n  RESET_TESTCASE,\n  RESET_WORKSPACE,\n  SEND_REPL_INPUT_TO_OUTPUT,\n  TOGGLE_EDITOR_AUTORUN,\n  UPDATE_ACTIVE_TAB,\n  UPDATE_CHAPTER,\n  UPDATE_CURRENT_ASSESSMENT_ID,\n  UPDATE_CURRENT_SUBMISSION_ID,\n  UPDATE_EDITOR_BREAKPOINTS,\n  UPDATE_EDITOR_VALUE,\n  UPDATE_HAS_UNSAVED_CHANGES,\n  UPDATE_REPL_VALUE,\n  UPDATE_WORKSPACE,\n  WorkspaceLocation,\n  WorkspaceState\n} from './WorkspaceTypes';\n\nexport const browseReplHistoryDown = (workspaceLocation: WorkspaceLocation) =>\n  action(BROWSE_REPL_HISTORY_DOWN, { workspaceLocation });\n\nexport const browseReplHistoryUp = (workspaceLocation: WorkspaceLocation) =>\n  action(BROWSE_REPL_HISTORY_UP, { workspaceLocation });\n\nexport const changeExternalLibrary = (newExternal: string, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_EXTERNAL_LIBRARY, { newExternal, workspaceLocation });\n\nexport const changeEditorHeight = (height: number, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_EDITOR_HEIGHT, { height, workspaceLocation });\n\nexport const changeEditorWidth = (widthChange: string, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_EDITOR_WIDTH, { widthChange, workspaceLocation });\n\nexport const changeExecTime = (execTime: string, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_EXEC_TIME, { execTime, workspaceLocation });\n\nexport const changeSideContentHeight = (height: number, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_SIDE_CONTENT_HEIGHT, { height, workspaceLocation });\n\nexport const chapterSelect = (\n  chapter: number,\n  variant: Variant,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(CHAPTER_SELECT, {\n    chapter,\n    variant,\n    workspaceLocation\n  });\n\nexport const externalLibrarySelect = (\n  externalLibraryName: ExternalLibraryName,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(PLAYGROUND_EXTERNAL_SELECT, {\n    externalLibraryName,\n    workspaceLocation\n  });\n\nexport const toggleEditorAutorun = (workspaceLocation: WorkspaceLocation) =>\n  action(TOGGLE_EDITOR_AUTORUN, { workspaceLocation });\n\nexport const updateActiveTab = (activeTab: SideContentType, workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_ACTIVE_TAB, { activeTab, workspaceLocation });\n\n/**\n * Starts the process to clear the js-slang Context\n * at a specified workspace location.\n *\n * This action is to be handled by saga, in order to\n * call upon side effects such as loading libraries in\n * the global scope.\n *\n * @param library the Library that the context shall be using\n * @param workspaceLocation the location of the workspace\n *\n * @see Library in assessmentShape.ts\n */\nexport const beginClearContext = (library: Library, workspaceLocation: WorkspaceLocation) =>\n  action(BEGIN_CLEAR_CONTEXT, {\n    library,\n    workspaceLocation\n  });\n\nexport const clearReplInput = (workspaceLocation: WorkspaceLocation) =>\n  action(CLEAR_REPL_INPUT, { workspaceLocation });\n\nexport const clearReplOutput = (workspaceLocation: WorkspaceLocation) =>\n  action(CLEAR_REPL_OUTPUT, { workspaceLocation });\n\nexport const clearReplOutputLast = (workspaceLocation: WorkspaceLocation) =>\n  action(CLEAR_REPL_OUTPUT_LAST, { workspaceLocation });\n\n/**\n * Finishes the process to clear the js-slang Context\n * at a specified workspace location.\n *\n * This action is to be handled in the reducer, to call the reset on the\n * Context in the state.\n *\n * @param library the Library that the context shall be using\n * @param workspaceLocation the location of the workspace\n *\n * @see Library in assessmentShape.ts\n */\nexport const endClearContext = (library: Library, workspaceLocation: WorkspaceLocation) =>\n  action(END_CLEAR_CONTEXT, {\n    library,\n    workspaceLocation\n  });\n\nexport const ensureLibrariesLoaded = () => action(ENSURE_LIBRARIES_LOADED);\n\nexport const evalEditor = (workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_EDITOR, { workspaceLocation });\n\nexport const evalRepl = (workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_REPL, { workspaceLocation });\n\nexport const evalTestcase = (workspaceLocation: WorkspaceLocation, testcaseId: number) =>\n  action(EVAL_TESTCASE, { workspaceLocation, testcaseId });\n\nexport const updateEditorValue = (newEditorValue: string, workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_EDITOR_VALUE, { newEditorValue, workspaceLocation });\n\nexport const setEditorBreakpoint = (breakpoints: string[], workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_EDITOR_BREAKPOINTS, { breakpoints, workspaceLocation });\n\nexport const highlightEditorLine = (\n  highlightedLines: number[],\n  workspaceLocation: WorkspaceLocation\n) => action(HIGHLIGHT_LINE, { highlightedLines, workspaceLocation });\n\nexport const updateReplValue = (newReplValue: string, workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_REPL_VALUE, { newReplValue, workspaceLocation });\n\nexport const sendReplInputToOutput = (newOutput: string, workspaceLocation: WorkspaceLocation) =>\n  action(SEND_REPL_INPUT_TO_OUTPUT, {\n    type: 'code',\n    workspaceLocation,\n    value: newOutput\n  });\n\nexport const resetTestcase = (workspaceLocation: WorkspaceLocation, index: number) =>\n  action(RESET_TESTCASE, { workspaceLocation, index });\n\nexport const navigateToDeclaration = (\n  workspaceLocation: WorkspaceLocation,\n  cursorPosition: Position\n) => action(NAV_DECLARATION, { workspaceLocation, cursorPosition });\n\nexport const moveCursor = (workspaceLocation: WorkspaceLocation, cursorPosition: Position) =>\n  action(MOVE_CURSOR, { workspaceLocation, cursorPosition });\n\n/**\n * Resets a workspace to its default properties.\n *\n * @param workspaceLocation the workspace to be reset\n * @param workspaceOptions an object with any number of properties\n *   in IWorkspaceState, that will take precedence over the default\n *   values. For example, one can use this to specify a particular\n *   editorValue.\n */\nexport const resetWorkspace = (\n  workspaceLocation: WorkspaceLocation,\n  workspaceOptions?: Partial<WorkspaceState>\n) =>\n  action(RESET_WORKSPACE, {\n    workspaceLocation,\n    workspaceOptions\n  });\n\nexport const updateWorkspace = (\n  workspaceLocation: WorkspaceLocation,\n  workspaceOptions?: Partial<WorkspaceState>\n) =>\n  action(UPDATE_WORKSPACE, {\n    workspaceLocation,\n    workspaceOptions\n  });\n\nexport const setEditorReadonly = (workspaceLocation: WorkspaceLocation, editorReadonly: boolean) =>\n  action(SET_EDITOR_READONLY, {\n    workspaceLocation,\n    editorReadonly\n  });\n\nexport const updateCurrentAssessmentId = (assessmentId: number, questionId: number) =>\n  action(UPDATE_CURRENT_ASSESSMENT_ID, {\n    assessmentId,\n    questionId\n  });\n\nexport const updateCurrentSubmissionId = (submissionId: number, questionId: number) =>\n  action(UPDATE_CURRENT_SUBMISSION_ID, {\n    submissionId,\n    questionId\n  });\n\nexport const updateHasUnsavedChanges = (\n  workspaceLocation: WorkspaceLocation,\n  hasUnsavedChanges: boolean\n) =>\n  action(UPDATE_HAS_UNSAVED_CHANGES, {\n    workspaceLocation,\n    hasUnsavedChanges\n  });\n\nexport const fetchChapter = () => action(FETCH_CHAPTER);\n\nexport const changeChapter = (chapter: number, variant: Variant) =>\n  action(CHANGE_CHAPTER, { chapter, variant });\n\nexport const updateChapter = (chapter: number, variant: Variant) =>\n  action(UPDATE_CHAPTER, { chapter, variant });\n\nexport const promptAutocomplete = (\n  workspaceLocation: WorkspaceLocation,\n  row: number,\n  column: number,\n  callback: any // TODO: define a type for this\n) =>\n  action(PROMPT_AUTOCOMPLETE, {\n    workspaceLocation,\n    row,\n    column,\n    callback\n  });\n\nexport const notifyProgramEvaluated = (\n  result: any,\n  lastDebuggerResult: any,\n  code: string,\n  context: Context,\n  workspaceLocation?: WorkspaceLocation\n) =>\n  action(NOTIFY_PROGRAM_EVALUATED, {\n    result,\n    lastDebuggerResult,\n    code,\n    context,\n    workspaceLocation\n  });\n","export const BEGIN_INTERRUPT_EXECUTION = 'BEGIN_INTERRUPT_EXECUTION';\nexport const END_INTERRUPT_EXECUTION = 'END_INTERRUPT_EXECUTION';\nexport const EVAL_INTERPRETER_ERROR = 'EVAL_INTERPRETER_ERROR';\nexport const EVAL_INTERPRETER_SUCCESS = 'EVAL_INTERPRETER_SUCCESS';\nexport const EVAL_TESTCASE_FAILURE = 'EVAL_TESTCASE_FAILURE';\nexport const EVAL_TESTCASE_SUCCESS = 'EVAL_TESTCASE_SUCCESS';\nexport const HANDLE_CONSOLE_LOG = 'HANDLE_CONSOLE_LOG';\nexport const BEGIN_DEBUG_PAUSE = 'BEGIN_DEBUG_PAUSE';\nexport const END_DEBUG_PAUSE = 'END_DEBUG_PAUSE';\nexport const DEBUG_RESUME = 'DEBUG_RESUME';\nexport const DEBUG_RESET = 'DEBUG_RESET';\nexport const HIGHLIGHT_LINE = 'HIGHLIGHT_LINE';\n","import { WorkspaceState } from '../../../commons/workspace/WorkspaceTypes';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SourcecastData\n} from '../SourceRecorderTypes';\n\nexport const FETCH_SOURCECAST_INDEX = 'FETCH_SOURCECAST_INDEX';\nexport const SET_EDITOR_READONLY = 'SET_EDITOR_READONLY';\nexport const UPDATE_SOURCECAST_INDEX = 'UPDATE_SOURCECAST_INDEX';\n\ntype SourcecastWorkspaceAttr = {\n  readonly audioUrl: string;\n  readonly codeDeltasToApply: CodeDelta[] | null;\n  readonly currentPlayerTime: number;\n  readonly description: string | null;\n  readonly inputToApply: Input | null;\n  readonly playbackData: PlaybackData;\n  readonly playbackDuration: number;\n  readonly playbackStatus: PlaybackStatus;\n  readonly sourcecastIndex: SourcecastData[] | null;\n  readonly title: string | null;\n};\nexport type SourcecastWorkspaceState = SourcecastWorkspaceAttr & WorkspaceState;\n","import { action } from 'typesafe-actions'; // EDITED\n\nimport { LOG_OUT } from '../types/CommonsTypes';\n\nexport const logOut = () => action(LOG_OUT);\n","export const LOG_OUT = 'LOG_OUT';\n","// game Dev Action Types\nexport const FETCH_TEST_STORIES = 'FETCH_TEST_STORIES';\nexport const SAVE_USER_STATE = 'SAVE_USER_STATE';\nexport const SET_GAME_STATE = 'SET_GAME_STATE';\n","import { action } from 'typesafe-actions'; // EDITED\n\nimport { Grading, GradingOverview } from '../../../features/grading/GradingTypes';\nimport { Assessment, AssessmentOverview } from '../../assessment/AssessmentTypes';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../../notificationBadge/NotificationBadgeTypes';\nimport { GameState, Role, Story } from '../ApplicationTypes';\nimport * as actionTypes from '../types/ActionTypes';\nimport {\n  ACKNOWLEDGE_NOTIFICATIONS,\n  FETCH_ASSESSMENT,\n  FETCH_ASSESSMENT_OVERVIEWS,\n  FETCH_AUTH,\n  FETCH_GRADING,\n  FETCH_GRADING_OVERVIEWS,\n  FETCH_NOTIFICATIONS,\n  LOGIN,\n  LOGOUT_GOOGLE,\n  SET_GOOGLE_USER,\n  SET_TOKENS,\n  SET_USER,\n  SUBMIT_ANSWER,\n  SUBMIT_ASSESSMENT,\n  SUBMIT_GRADING,\n  SUBMIT_GRADING_AND_CONTINUE,\n  UNSUBMIT_SUBMISSION,\n  UPDATE_ASSESSMENT,\n  UPDATE_ASSESSMENT_OVERVIEWS,\n  UPDATE_GRADING,\n  UPDATE_GRADING_OVERVIEWS,\n  UPDATE_HISTORY_HELPERS,\n  UPDATE_NOTIFICATIONS\n} from '../types/SessionTypes';\n\nexport const fetchAuth = (code: string, providerId?: string) =>\n  action(FETCH_AUTH, { code, providerId });\n\nexport const fetchAssessment = (id: number) => action(FETCH_ASSESSMENT, id);\n\nexport const fetchAssessmentOverviews = () => action(FETCH_ASSESSMENT_OVERVIEWS);\n\nexport const fetchGrading = (submissionId: number) => action(FETCH_GRADING, submissionId);\n\n/**\n * @param filterToGroup - param when set to true, only shows submissions under the group\n * of the grader\n */\nexport const fetchGradingOverviews = (filterToGroup = true) =>\n  action(FETCH_GRADING_OVERVIEWS, filterToGroup);\n\nexport const login = (providerId: string) => action(LOGIN, providerId);\n\nexport const logoutGoogle = () => action(LOGOUT_GOOGLE);\n\nexport const setGameState = (gameState: GameState) => action(actionTypes.SET_GAME_STATE, gameState);\n\nexport const setTokens = ({\n  accessToken,\n  refreshToken\n}: {\n  accessToken: string;\n  refreshToken: string;\n}) =>\n  action(SET_TOKENS, {\n    accessToken,\n    refreshToken\n  });\n\nexport const setUser = (user: {\n  name: string;\n  role: Role;\n  group: string | null;\n  grade: number;\n  story?: Story;\n  gameState?: GameState;\n}) => action(SET_USER, user);\n\nexport const setGoogleUser = (user?: string) => action(SET_GOOGLE_USER, user);\n\nexport const submitAnswer = (id: number, answer: string | number) =>\n  action(SUBMIT_ANSWER, {\n    id,\n    answer\n  });\n\nexport const submitAssessment = (id: number) => action(SUBMIT_ASSESSMENT, id);\n\nexport const submitGrading = (\n  submissionId: number,\n  questionId: number,\n  gradeAdjustment: number = 0,\n  xpAdjustment: number = 0,\n  comments?: string\n) =>\n  action(SUBMIT_GRADING, {\n    submissionId,\n    questionId,\n    gradeAdjustment,\n    xpAdjustment,\n    comments\n  });\n\nexport const submitGradingAndContinue = (\n  submissionId: number,\n  questionId: number,\n  gradeAdjustment: number = 0,\n  xpAdjustment: number = 0,\n  comments?: string\n) =>\n  action(SUBMIT_GRADING_AND_CONTINUE, {\n    submissionId,\n    questionId,\n    gradeAdjustment,\n    xpAdjustment,\n    comments\n  });\n\nexport const updateHistoryHelpers = (loc: string) => action(UPDATE_HISTORY_HELPERS, loc);\n\nexport const updateAssessmentOverviews = (overviews: AssessmentOverview[]) =>\n  action(UPDATE_ASSESSMENT_OVERVIEWS, overviews);\n\nexport const updateAssessment = (assessment: Assessment) => action(UPDATE_ASSESSMENT, assessment);\n\nexport const updateGradingOverviews = (overviews: GradingOverview[]) =>\n  action(UPDATE_GRADING_OVERVIEWS, overviews);\n\n/**\n * An extra id parameter is included here because of\n * no id for Grading.\n */\nexport const updateGrading = (submissionId: number, grading: Grading) =>\n  action(UPDATE_GRADING, {\n    submissionId,\n    grading\n  });\n\nexport const unsubmitSubmission = (submissionId: number) =>\n  action(UNSUBMIT_SUBMISSION, {\n    submissionId\n  });\n\n/**\n * Notification actions\n */\n\nexport const fetchNotifications = () => action(FETCH_NOTIFICATIONS);\n\nexport const acknowledgeNotifications = (withFilter?: NotificationFilterFunction) =>\n  action(ACKNOWLEDGE_NOTIFICATIONS, {\n    withFilter\n  });\n\nexport const updateNotifications = (notifications: Notification[]) =>\n  action(UPDATE_NOTIFICATIONS, notifications);\n","import { Grading, GradingOverview } from '../../../features/grading/GradingTypes';\nimport { Assessment, AssessmentOverview } from '../../assessment/AssessmentTypes';\nimport { Notification } from '../../notificationBadge/NotificationBadgeTypes';\nimport { HistoryHelper } from '../../utils/HistoryHelper';\nimport { GameState, Role, Story } from '../ApplicationTypes';\n\nexport const FETCH_AUTH = 'FETCH_AUTH';\nexport const FETCH_ASSESSMENT = 'FETCH_ASSESSMENT';\nexport const FETCH_ASSESSMENT_OVERVIEWS = 'FETCH_ASSESSMENT_OVERVIEWS';\nexport const FETCH_GRADING = 'FETCH_GRADING';\nexport const FETCH_GRADING_OVERVIEWS = 'FETCH_GRADING_OVERVIEWS';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT_GOOGLE = 'LOGOUT_GOOGLE';\nexport const SET_TOKENS = 'SET_TOKENS';\nexport const SET_USER = 'SET_USER';\nexport const SET_GOOGLE_USER = 'SET_GOOGLE_USER';\nexport const SUBMIT_ANSWER = 'SUBMIT_ANSWER';\nexport const SUBMIT_ASSESSMENT = 'SUBMIT_ASSESSMENT';\nexport const SUBMIT_GRADING = 'SUBMIT_GRADING';\nexport const SUBMIT_GRADING_AND_CONTINUE = 'SUBMIT_GRADING_AND_CONTINUE';\nexport const UNSUBMIT_SUBMISSION = 'UNSUBMIT_SUBMISSION';\nexport const UPDATE_HISTORY_HELPERS = 'UPDATE_HISTORY_HELPERS';\nexport const UPDATE_ASSESSMENT_OVERVIEWS = 'UPDATE_ASSESSMENT_OVERVIEWS';\nexport const UPDATE_ASSESSMENT = 'UPDATE_ASSESSMENT';\nexport const UPDATE_GRADING_OVERVIEWS = 'UPDATE_GRADING_OVERVIEWS';\nexport const UPDATE_GRADING = 'UPDATE_GRADING';\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS';\nexport const ACKNOWLEDGE_NOTIFICATIONS = 'ACKNOWLEDGE_NOTIFICATIONS';\nexport const UPDATE_NOTIFICATIONS = 'UPDATE_NOTIFICATIONS';\n\nexport type SessionState = {\n  readonly accessToken?: string;\n  readonly assessmentOverviews?: AssessmentOverview[];\n  readonly assessments: Map<number, Assessment>;\n  readonly grade: number;\n  readonly gradingOverviews?: GradingOverview[];\n  readonly gradings: Map<number, Grading>;\n  readonly group: string | null;\n  readonly historyHelper: HistoryHelper;\n  readonly maxGrade: number;\n  readonly maxXp: number;\n  readonly refreshToken?: string;\n  readonly role?: Role;\n  readonly story: Story;\n  readonly gameState: GameState;\n  readonly name?: string;\n  readonly xp: number;\n  readonly notifications: Notification[];\n  readonly googleUser?: string;\n};\n","import { Ace } from 'ace-builds/ace';\n\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport { SideContentType } from '../../commons/sideContent/SideContentTypes';\n\nexport const SAVE_SOURCECAST_DATA = 'SAVE_SOURCECAST_DATA';\nexport const SET_CURRENT_PLAYER_TIME = 'SET_CURRENT_PLAYER_TIME';\nexport const SET_CODE_DELTAS_TO_APPLY = 'SET_CODE_DELTAS_TO_APPLY';\nexport const SET_INPUT_TO_APPLY = 'SET_INPUT_TO_APPLY';\nexport const SET_SOURCECAST_DATA = 'SET_SOURCECAST_DATA';\nexport const SET_SOURCECAST_PLAYBACK_DURATION = 'SET_SOURCECAST_PLAYBACK_DURATION';\nexport const SET_SOURCECAST_PLAYBACK_STATUS = 'SET_SOURCECAST_PLAYBACK_STATUS';\n\nexport type InputTypeShape = {\n  activeTabChange: SideContentType;\n  chapterSelect: number;\n  cursorPositionChange: Position;\n  codeDelta: CodeDelta;\n  externalLibrarySelect: ExternalLibraryName;\n  keyboardCommand: KeyboardCommand;\n  selectionRangeData: SelectionData;\n};\n\nexport enum KeyboardCommand {\n  run = 'run'\n}\n\nexport enum PlaybackStatus {\n  playing = 'playing',\n  paused = 'paused'\n}\n\nexport type CodeDelta = Ace.Delta;\n\nexport type SelectionRange = Ace.Range;\n\nexport type SelectionData = {\n  range: SelectionRange;\n  isBackwards: boolean;\n};\n\n// Refer: https://stackoverflow.com/questions/55758713/match-pair-for-keyof-and-valueof-an-interface\nexport type Input = keyof InputTypeShape extends infer K\n  ? K extends keyof InputTypeShape\n    ? { time: number; type: K; data: InputTypeShape[K] }\n    : never\n  : never;\n\nexport type PlaybackData = {\n  init: {\n    chapter: number;\n    externalLibrary: ExternalLibraryName;\n    editorValue: string;\n  };\n  inputs: Input[];\n};\n\nexport type SourcecastData = {\n  title: string;\n  description: string;\n  inserted_at: string;\n  updated_at: string;\n  playbackData: string;\n  id: number;\n  uploader: {\n    id: number;\n    name: string;\n  };\n  url: string;\n};\n\nexport enum RecordingStatus {\n  notStarted = 'notStarted',\n  recording = 'recording',\n  paused = 'paused',\n  finished = 'finished'\n}\n","function isTrue(value?: string): boolean {\n  return typeof value === 'string' && value.toUpperCase() === 'TRUE';\n}\n\nconst isTest = process.env.NODE_ENV === 'test';\n\nconst sourceAcademyVersion = process.env.REACT_APP_VERSION;\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\nconst useBackend = !isTest && isTrue(process.env.REACT_APP_USE_BACKEND);\nconst defaultSourceChapter = 4;\nconst defaultSourceVariant = 'default';\nconst defaultQuestionId = 0;\nconst maxBrowseIndex = 50;\nconst urlShortener = process.env.REACT_APP_URL_SHORTENER_DOMAIN;\nconst urlShortenerSignature = process.env.REACT_APP_URL_SHORTENER_SIGNATURE;\nconst moduleBackendUrl = process.env.REACT_APP_MODULE_BACKEND_URL || 'modules';\nconst playgroundOnly = !isTest && isTrue(process.env.REACT_APP_PLAYGROUND_ONLY);\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN;\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst googleApiKey = process.env.REACT_APP_GOOGLE_API_KEY;\nconst googleAppId = process.env.REACT_APP_GOOGLE_APP_ID;\n\nconst authProviders: Map<\n  string,\n  { name: string; endpoint: string; isDefault: boolean }\n> = new Map();\n\nfor (let i = 1; ; ++i) {\n  const id = process.env[`REACT_APP_OAUTH2_PROVIDER${i}`];\n  if (!id) {\n    break;\n  }\n\n  const name = process.env[`REACT_APP_OAUTH2_PROVIDER${i}_NAME`] || 'Unnamed provider';\n  const endpoint = process.env[`REACT_APP_OAUTH2_PROVIDER${i}_ENDPOINT`] || '';\n\n  authProviders.set(id, { name, endpoint, isDefault: i === 1 });\n}\n\nexport enum Links {\n  githubIssues = 'https://github.com/source-academy/cadet-frontend/issues',\n  githubOrg = 'https://github.com/source-academy',\n\n  moduleDetails = 'https://www.comp.nus.edu.sg/~cs1101s',\n  luminus = 'https://luminus.nus.edu.sg/modules/41d42e9a-5880-43b5-8ee6-75f5a41355e3/announcements/active',\n  piazza = 'https://piazza.com/class/kas136yscf8605',\n  shareDBServer = 'api2.sourceacademy.nus.edu.sg/',\n  sourceDocs = 'https://source-academy.github.io/source/',\n  sourceDocsChapter2_2 = 'https://source-academy.github.io/sicp/chapters/2.2.html',\n  sourceDocsChapter3_2 = 'https://source-academy.github.io/sicp/chapters/3.2.html',\n  techSVC = 'mailto:techsvc@comp.nus.edu.sg',\n  techSVCNumber = '6516 2736',\n  textbook = 'https://source-academy.github.io/sicp/',\n\n  aceHotkeys = 'https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts',\n  sourceHotkeys = 'https://github.com/source-academy/cadet-frontend/wiki/Source-Academy-Keyboard-Shortcuts',\n\n  source_1 = 'https://source-academy.github.io/source/source_1/',\n  source_1_Lazy = 'https://source-academy.github.io/source/source_1_lazy/',\n  source_1_Wasm = 'https://source-academy.github.io/source/source_1_wasm/',\n  source_2 = 'https://source-academy.github.io/source/source_2/',\n  source_2_Lazy = 'https://source-academy.github.io/source/source_2_lazy/',\n  source_3 = 'https://source-academy.github.io/source/source_1/',\n  source_3_Concurrent = 'https://source-academy.github.io/source/source_3_concurrent/',\n  source_3_Nondet = 'https://source-academy.github.io/source/source_3_non-det/',\n  source_4 = 'https://source-academy.github.io/source/source_4/',\n  source_4_Gpu = 'https://source-academy.github.io/source/source_4_gpu/'\n}\n\nconst Constants = {\n  sourceAcademyVersion,\n  backendUrl,\n  useBackend,\n  defaultSourceChapter,\n  defaultSourceVariant,\n  defaultQuestionId,\n  maxBrowseIndex,\n  urlShortener,\n  urlShortenerSignature,\n  moduleBackendUrl,\n  authProviders,\n  playgroundOnly,\n  sentryDsn,\n  googleClientId,\n  googleApiKey,\n  googleAppId\n};\n\nexport default Constants;\n","import { SourceError, Value } from 'js-slang/dist/types';\nimport { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../workspace/WorkspaceTypes';\nimport {\n  BEGIN_DEBUG_PAUSE,\n  BEGIN_INTERRUPT_EXECUTION,\n  DEBUG_RESET,\n  DEBUG_RESUME,\n  END_DEBUG_PAUSE,\n  END_INTERRUPT_EXECUTION,\n  EVAL_INTERPRETER_ERROR,\n  EVAL_INTERPRETER_SUCCESS,\n  EVAL_TESTCASE_FAILURE,\n  EVAL_TESTCASE_SUCCESS,\n  HANDLE_CONSOLE_LOG\n} from '../types/InterpreterTypes';\n\nexport const handleConsoleLog = (logString: string, workspaceLocation: WorkspaceLocation) =>\n  action(HANDLE_CONSOLE_LOG, { logString, workspaceLocation });\n\nexport const evalInterpreterSuccess = (value: Value, workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_INTERPRETER_SUCCESS, { type: 'result', value, workspaceLocation });\n\nexport const evalTestcaseSuccess = (\n  value: Value,\n  workspaceLocation: WorkspaceLocation,\n  index: number\n) => action(EVAL_TESTCASE_SUCCESS, { type: 'result', value, workspaceLocation, index });\n\nexport const evalTestcaseFailure = (\n  value: Value,\n  workspaceLocation: WorkspaceLocation,\n  index: number\n) => action(EVAL_TESTCASE_FAILURE, { type: 'errors', value, workspaceLocation, index });\n\nexport const evalInterpreterError = (errors: SourceError[], workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_INTERPRETER_ERROR, { type: 'errors', errors, workspaceLocation });\n\nexport const beginInterruptExecution = (workspaceLocation: WorkspaceLocation) =>\n  action(BEGIN_INTERRUPT_EXECUTION, { workspaceLocation });\n\nexport const endInterruptExecution = (workspaceLocation: WorkspaceLocation) =>\n  action(END_INTERRUPT_EXECUTION, { workspaceLocation });\n\nexport const beginDebuggerPause = (workspaceLocation: WorkspaceLocation) =>\n  action(BEGIN_DEBUG_PAUSE, { workspaceLocation });\n\nexport const endDebuggerPause = (workspaceLocation: WorkspaceLocation) =>\n  action(END_DEBUG_PAUSE, { workspaceLocation });\n\nexport const debuggerResume = (workspaceLocation: WorkspaceLocation) =>\n  action(DEBUG_RESUME, { workspaceLocation });\n\nexport const debuggerReset = (workspaceLocation: WorkspaceLocation) =>\n  action(DEBUG_RESET, { workspaceLocation });\n","/* tslint:disable: ban-types*/\nimport createSlangContext, { defineBuiltin, importBuiltins } from 'js-slang/dist/createContext';\nimport { Context, CustomBuiltIns, Value, Variant } from 'js-slang/dist/types';\nimport { stringify } from 'js-slang/dist/utils/stringify';\nimport { difference, keys } from 'lodash';\n\nimport { handleConsoleLog } from '../application/actions/InterpreterActions';\n\n/**\n * This file contains wrappers for certain functions\n * in the @source-academy/slang module.\n *\n * Use this file especially when attempting to create a slang Context.\n */\n\n/**\n * Function that takes a value and displays it in the interpreter.\n * It uses the js-slang stringify to convert values into a \"nicer\"\n * output. e.g. [1, 2, 3] displays as [1, 2, 3].\n * An action is dispatched using the redux store reference\n * within the global window object.\n *\n * @param value the value to be displayed\n * @param workspaceLocation used to determine\n *   which REPL the value shows up in.\n */\nfunction display(value: Value, str: string, workspaceLocation: any) {\n  display((str === undefined ? '' : str + ' ') + stringify(value), '', workspaceLocation);\n  return value;\n}\n\n/**\n * Function that takes a value and displays it in the interpreter.\n * The value is displayed however native JS would convert it to a string.\n * e.g. [1, 2, 3] would be displayed as 1,2,3.\n * An action is dispatched using the redux store reference\n * within the global window object.\n *\n * @param value the value to be displayed\n * @param workspaceLocation used to determine\n *   which REPL the value shows up in.\n */\nfunction rawDisplay(value: Value, str: string, workspaceLocation: any) {\n  const output = (str === undefined ? '' : str + ' ') + String(value);\n  // TODO in 2019: fix this hack\n  if (typeof (window as any).__REDUX_STORE__ !== 'undefined') {\n    (window as any).__REDUX_STORE__.dispatch(handleConsoleLog(output, workspaceLocation));\n  }\n  return value;\n}\n\n/**\n * A function to prompt the user using a popup.\n * The function is not called 'prompt' to prevent shadowing.\n *\n * @param value the value to be displayed as a prompt\n */\nfunction cadetPrompt(value: any) {\n  return prompt(value);\n}\n\n/**\n * A function to alert the user using the browser's alert()\n * function.\n *\n * @param value the value to alert the user with\n */\nfunction cadetAlert(value: any) {\n  alert(stringify(value));\n}\n\n/**\n * A dummy function to pass into createContext.\n * An actual implementation will have to be added\n * with the list visualiser implementation. See #187\n *\n * @param list the list to be visualised.\n */\nfunction visualiseList(list: any) {\n  if ((window as any).ListVisualizer) {\n    (window as any).ListVisualizer.draw(list);\n    return list;\n  } else {\n    throw new Error('List visualizer is not enabled');\n  }\n}\n\nexport function visualiseEnv(context: Context) {\n  if ((window as any).EnvVisualizer) {\n    (window as any).EnvVisualizer.draw_env({ context });\n  } else {\n    throw new Error('Env visualizer is not enabled');\n  }\n}\n\nexport function highlightLine(line: number | undefined) {\n  if ((window as any).Inspector) {\n    (window as any).Inspector.highlightClean();\n    // if number is undefined it just clears the highlighting.\n    (window as any).Inspector.highlightLine(line);\n  } else {\n    throw new Error('Inspector not loaded');\n  }\n}\n\nexport function inspectorUpdate(context: Context | undefined) {\n  if ((window as any).Inspector) {\n    (window as any).Inspector.updateContext(context, stringify);\n  } else {\n    throw new Error('Inspector not loaded');\n  }\n}\n\nexport const externalBuiltIns = {\n  display,\n  rawDisplay,\n  prompt: cadetPrompt,\n  alert: cadetAlert,\n  visualiseList\n};\n\n/**\n * A wrapper around js-slang's createContext. This\n * provides the original function with the required\n * externalBuiltIns, such as display and prompt.\n */\nexport function createContext<T>(\n  chapter: number,\n  externals: string[],\n  externalContext: T,\n  variant: Variant = 'default',\n  moduleParams?: any\n) {\n  return createSlangContext<T>(\n    chapter,\n    variant,\n    externals,\n    externalContext,\n    externalBuiltIns,\n    moduleParams\n  );\n}\n\n// Assumes that the grader doesn't need additional external libraries apart from the standard\n// libraries (lists, streams).\nfunction loadStandardLibraries(proxyContext: Context, customBuiltIns: CustomBuiltIns) {\n  importBuiltins(proxyContext, customBuiltIns);\n  defineBuiltin(proxyContext, 'makeUndefinedErrorFunction', (fname: string) => () => {\n    throw new Error(`Name ${fname} not declared.`);\n  });\n}\n\n// Given a Context, returns a privileged Context that when referenced,\n// intercepts reads from the underlying Context and returns desired values\nexport function makeElevatedContext(context: Context) {\n  function ProxyFrame() {}\n  ProxyFrame.prototype = context.runtime.environments[0].head;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  const fakeFrame: { [key: string]: any } = new ProxyFrame();\n  // Explanation: Proxy doesn't work for defineProperty in use-strict.\n  // The js-slang will defineProperty on loadStandardLibraries\n  // Creating a raw JS object and setting prototype will allow defineProperty on the child\n  // while reflection should work on parent.\n\n  const proxyGlobalEnv = new Proxy(context.runtime.environments[0], {\n    get(target, prop: string | number, receiver) {\n      if (prop === 'head') {\n        return fakeFrame;\n      }\n      return target[prop];\n    }\n  });\n\n  const proxyEnvs = new Proxy(context.runtime.environments, {\n    get(target, prop, receiver) {\n      if (prop === '0') {\n        return proxyGlobalEnv;\n      }\n      return target[prop];\n    }\n  });\n\n  const proxyRuntime = new Proxy(context.runtime, {\n    get(target, prop, receiver) {\n      if (prop === 'environments') {\n        return proxyEnvs;\n      }\n      return target[prop];\n    }\n  });\n\n  const elevatedContext = new Proxy(context, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'chapter':\n          return 4;\n        case 'runtime':\n          return proxyRuntime;\n        default:\n          return target[prop];\n      }\n    }\n  });\n\n  loadStandardLibraries(elevatedContext, externalBuiltIns);\n  return elevatedContext;\n}\n\nexport function getDifferenceInMethods(elevatedContext: Context, context: Context) {\n  const eFrame = elevatedContext.runtime.environments[0].head;\n  const frame = context.runtime.environments[0].head;\n  return difference(keys(eFrame), keys(frame));\n}\n\nexport function getStoreExtraMethodsString(toRemove: string[], unblockKey: string) {\n  return `const _____${unblockKey} = [${toRemove.join(', ')}];`;\n}\n\nexport function getRestoreExtraMethodsString(removed: string[], unblockKey: string) {\n  const store = `_____${unblockKey}`;\n  return removed\n    .map((x, key) => (x === 'makeUndefinedErrorFunction' ? '' : `const ${x} = ${store}[${key}];`))\n    .join('\\n');\n}\n\nexport function getBlockExtraMethodsString(toRemove: string[]) {\n  return toRemove\n    .map(x =>\n      x === 'makeUndefinedErrorFunction' ? '' : `const ${x} = makeUndefinedErrorFunction('${x}');`\n    )\n    .join('\\n');\n}\n","/**\n * Defined for displaying an external library.\n * @see Library the definition of a Library at AssessmentTypes.ts in an assessment.\n */\nexport type External = {\n  key: number;\n  name: ExternalLibraryName;\n  symbols: string[];\n};\n\nexport enum ExternalLibraryName {\n  NONE = 'NONE',\n  RUNES = 'RUNES',\n  CURVES = 'CURVES',\n  SOUNDS = 'SOUNDS',\n  BINARYTREES = 'BINARYTREES',\n  PIXNFLIX = 'PIX&FLIX',\n  MACHINELEARNING = 'MACHINELEARNING',\n  ALL = 'ALL'\n}\n\nexport type ExternalLibrary = {\n  name: ExternalLibraryName;\n  symbols: string[];\n};\n\nconst runesLibrary = [\n  'show',\n  'color',\n  'random_color',\n  'red',\n  'pink',\n  'purple',\n  'indigo',\n  'blue',\n  'green',\n  'yellow',\n  'orange',\n  'brown',\n  'black',\n  'white',\n  'scale_independent',\n  'scale',\n  'translate',\n  'rotate',\n  'stack_frac',\n  'stack',\n  'stackn',\n  'quarter_turn_right',\n  'quarter_turn_left',\n  'turn_upside_down',\n  'beside_frac',\n  'beside',\n  'flip_vert',\n  'flip_horiz',\n  'make_cross',\n  'repeat_pattern',\n  'square',\n  'blank',\n  'rcross',\n  'sail',\n  'corner',\n  'nova',\n  'circle',\n  'heart',\n  'pentagram',\n  'ribbon',\n  'anaglyph',\n  'overlay_frac',\n  'overlay',\n  'hollusion' // currently not documented; animation not working\n];\n\nconst curvesLibrary = [\n  'make_point',\n  'draw_points_on',\n  'draw_connected',\n  'draw_points_squeezed_to_window',\n  'draw_connected_squeezed_to_window',\n  'draw_connected_full_view',\n  'draw_connected_full_view_proportional',\n  'x_of',\n  'y_of',\n  'unit_line',\n  'unit_line_at',\n  'unit_circle',\n  'connect_rigidly',\n  'connect_ends',\n  'put_in_standard_position',\n  'translate',\n  'scale',\n  /** Contest functions */\n  'rotate_pi_over_2',\n  'scale_x_y',\n  'gosperize',\n  'gosper_curve',\n  'show_connected_gosper',\n  'repeated',\n  'param_gosper',\n  'param_gosperize',\n  'rotate_around_origin',\n  'arc', // used in GOSPERIZE\n  'invert', // used in DRAGONIZE\n  'alternative_unit_circle', // undocumented\n  'full_view_proportional', // undocumented\n  'squeeze_full_view', // undocumented\n  'squeeze_rectangular_portion' // undocumented\n];\n\nconst soundsLibrary = [\n  'make_sound',\n  'get_wave',\n  'get_duration',\n  'play',\n  'stop',\n  'consecutively',\n  'simultaneously',\n  'noise_sound',\n  'sine_sound',\n  'silence_sound',\n  'letter_name_to_midi_note',\n  'letter_name_to_frequency',\n  'midi_note_to_frequency',\n  'square_sound',\n  'triangle_sound',\n  'sawtooth_sound',\n  'play_unsafe',\n  'display_waveform',\n  /** Microphone Sounds */\n  'init_record',\n  'record',\n  'record_for',\n  /** Contest functions */\n  'adsr',\n  'stacking_adsr',\n  'trombone',\n  'piano',\n  'bell',\n  'violin',\n  'cello'\n];\n\nconst binaryTreesLibrary = [\n  'make_empty_tree',\n  'is_tree',\n  'make_tree',\n  'is_empty_tree',\n  'entry',\n  'left_branch',\n  'right_branch'\n];\n\nconst videoLibrary = [\n  'red_of',\n  'green_of',\n  'blue_of',\n  'set_rgb',\n  'copy_pixel',\n  'copy_image',\n  'constrain_color',\n  'compose_filter',\n  'make_distortion_filter',\n  'make_static_distortion_filter',\n  'pixel_similar',\n  'get_video_width',\n  'get_video_height',\n  'apply_filter',\n  'reset_filter'\n];\n\nconst machineLearningLibrary = [\n  'init_webcam',\n  'train_recognition',\n  'load_faceapi',\n  'change_label',\n  'array_push',\n  'normalise_data'\n];\n\n/**\n * Defines which external libraries are available for usage, and what\n * external symbols (exposed functions) are under them.\n */\n\nconst libEntries: Array<[ExternalLibraryName, string[]]> = [\n  [ExternalLibraryName.NONE, []],\n  [ExternalLibraryName.RUNES, runesLibrary],\n  [ExternalLibraryName.CURVES, curvesLibrary],\n  [ExternalLibraryName.SOUNDS, soundsLibrary],\n  [ExternalLibraryName.BINARYTREES, binaryTreesLibrary],\n  [ExternalLibraryName.PIXNFLIX, videoLibrary],\n  [ExternalLibraryName.MACHINELEARNING, machineLearningLibrary],\n  [\n    ExternalLibraryName.ALL,\n    runesLibrary.concat(curvesLibrary, soundsLibrary, binaryTreesLibrary, videoLibrary)\n  ]\n];\n\nexport const externalLibraries: Map<string, string[]> = new Map(libEntries);\n","import { SourceError, Variant } from 'js-slang/dist/types';\n\nimport { AcademyState } from '../../features/academy/AcademyTypes';\nimport { DashboardState } from '../../features/dashboard/DashboardTypes';\nimport { Grading } from '../../features/grading/GradingTypes';\nimport { PlaygroundState } from '../../features/playground/PlaygroundTypes';\nimport { PlaybackStatus, RecordingStatus } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport { SideContentType } from '../sideContent/SideContentTypes';\nimport Constants from '../utils/Constants';\nimport { createContext } from '../utils/JsSlangHelper';\nimport {\n  DebuggerContext,\n  WorkspaceLocation,\n  WorkspaceManagerState,\n  WorkspaceState\n} from '../workspace/WorkspaceTypes';\nimport { ExternalLibraryName } from './types/ExternalTypes';\nimport { SessionState } from './types/SessionTypes';\n\nexport type OverallState = {\n  readonly academy: AcademyState;\n  readonly application: ApplicationState;\n  readonly playground: PlaygroundState;\n  readonly session: SessionState;\n  readonly workspaces: WorkspaceManagerState;\n  readonly dashboard: DashboardState;\n};\n\nexport type ApplicationState = {\n  readonly title: string;\n  readonly environment: ApplicationEnvironment;\n};\n\nexport type Story = {\n  story: string;\n  playStory: boolean;\n};\n\nexport type GameState = {\n  collectibles: { [id: string]: string };\n  completed_quests: string[];\n};\n\n/**\n * An output while the program is still being run in the interpreter. As a\n * result, there are no return values or SourceErrors yet. However, there could\n * have been calls to display (console.log) that need to be printed out.\n */\nexport type RunningOutput = {\n  type: 'running';\n  consoleLogs: string[];\n};\n\n/**\n * An output which reflects the program which the user had entered. Not a true\n * Output from the interpreter, but simply there to let he user know what had\n * been entered.\n */\nexport type CodeOutput = {\n  type: 'code';\n  value: string;\n};\n\n/**\n * An output which represents a program being run successfully, i.e. with a\n * return value at the end. A program can have either a return value, or errors,\n * but not both.\n */\nexport type ResultOutput = {\n  type: 'result';\n  value: any;\n  consoleLogs: string[];\n  runtime?: number;\n  isProgram?: boolean;\n};\n\n/**\n * An output which represents a program being run unsuccessfully, i.e. with\n * errors at the end. A program can have either a return value, or errors, but\n * not both.\n */\nexport type ErrorOutput = {\n  type: 'errors';\n  errors: SourceError[];\n  consoleLogs: string[];\n};\n\nexport type InterpreterOutput = RunningOutput | CodeOutput | ResultOutput | ErrorOutput;\n\nexport enum ApplicationEnvironment {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport enum Role {\n  Student = 'student',\n  Staff = 'staff',\n  Admin = 'admin'\n}\n\n/**\n * Defines what chapters are available for usage.\n * For external libraries, see ExternalLibrariesTypes.ts\n */\nexport type SourceLanguage = {\n  chapter: number;\n  variant: Variant;\n};\n\nexport const sourceLanguages: SourceLanguage[] = [\n  { chapter: 1, variant: 'default' },\n  { chapter: 1, variant: 'wasm' },\n  { chapter: 1, variant: 'lazy' },\n  { chapter: 2, variant: 'default' },\n  { chapter: 2, variant: 'lazy' },\n  { chapter: 3, variant: 'default' },\n  { chapter: 3, variant: 'concurrent' },\n  { chapter: 3, variant: 'non-det' },\n  { chapter: 4, variant: 'default' },\n  { chapter: 4, variant: 'gpu' }\n];\n\nconst variantDisplay: Map<Variant, string> = new Map([\n  ['wasm', 'WebAssembly'],\n  ['non-det', 'Non-Det'],\n  ['concurrent', 'Concurrent'],\n  ['lazy', 'Lazy'],\n  ['gpu', 'GPU']\n]);\n\nexport const styliseChapter = (chap: number, variant: Variant = 'default') => {\n  let res = `Source \\xa7${chap}`;\n  if (variantDisplay.has(variant)) {\n    res += ' ' + variantDisplay.get(variant);\n  }\n  return res;\n};\n\nconst currentEnvironment = (): ApplicationEnvironment => {\n  switch (process.env.NODE_ENV) {\n    case 'development':\n      return ApplicationEnvironment.Development;\n    case 'production':\n      return ApplicationEnvironment.Production;\n    default:\n      return ApplicationEnvironment.Test;\n  }\n};\n\nexport const defaultAcademy: AcademyState = {\n  gameCanvas: undefined\n};\n\nexport const defaultApplication: ApplicationState = {\n  title: 'Cadet',\n  environment: currentEnvironment()\n};\n\nexport const defaultDashboard: DashboardState = {\n  gradingSummary: []\n};\n\nexport const defaultPlayground: PlaygroundState = {\n  usingSubst: false\n};\n\nexport const defaultEditorValue = '// Type your program in here!';\n\n/**\n * Create a default IWorkspaceState for 'resetting' a workspace.\n * Takes in parameters to set the js-slang library and chapter.\n *\n * @param workspaceLocation the location of the workspace, used for context\n */\nexport const createDefaultWorkspace = (workspaceLocation: WorkspaceLocation): WorkspaceState => ({\n  autogradingResults: [],\n  breakpoints: [],\n  context: createContext<WorkspaceLocation>(\n    Constants.defaultSourceChapter,\n    [],\n    workspaceLocation,\n    Constants.defaultSourceVariant as Variant\n  ),\n  editorPrepend: '',\n  editorSessionId: '',\n  editorValue: workspaceLocation === 'playground' || 'sourcecast' ? defaultEditorValue : '',\n  editorPostpend: '',\n  editorReadonly: false,\n  editorTestcases: [],\n  editorHeight: 150,\n  editorWidth: '50%',\n  externalLibrary: ExternalLibraryName.NONE,\n  execTime: 1000,\n  highlightedLines: [],\n  output: [],\n  replHistory: {\n    browseIndex: null,\n    records: [],\n    originalValue: ''\n  },\n  replValue: '',\n  sharedbAceInitValue: '',\n  sharedbAceIsInviting: false,\n  sideContentActiveTab: SideContentType.questionOverview,\n  websocketStatus: 0,\n  globals: [],\n  isEditorAutorun: false,\n  isRunning: false,\n  isDebugging: false,\n  enableDebugging: true,\n  debuggerContext: {} as DebuggerContext\n});\n\nexport const defaultRoomId = null;\n\nexport const defaultWorkspaceManager: WorkspaceManagerState = {\n  assessment: {\n    ...createDefaultWorkspace('assessment'),\n    currentAssessment: undefined,\n    currentQuestion: undefined,\n    hasUnsavedChanges: false\n  },\n  grading: {\n    ...createDefaultWorkspace('grading'),\n    currentSubmission: undefined,\n    currentQuestion: undefined,\n    hasUnsavedChanges: false\n  },\n  playground: {\n    ...createDefaultWorkspace('playground'),\n    usingSubst: false\n  },\n  sourcecast: {\n    ...createDefaultWorkspace('sourcecast'),\n    audioUrl: '',\n    codeDeltasToApply: null,\n    currentPlayerTime: 0,\n    description: null,\n    inputToApply: null,\n    playbackData: {\n      init: { editorValue: '', chapter: 1, externalLibrary: ExternalLibraryName.NONE },\n      inputs: []\n    },\n    playbackDuration: 0,\n    playbackStatus: PlaybackStatus.paused,\n    sourcecastIndex: null,\n    title: null\n  },\n  sourcereel: {\n    ...createDefaultWorkspace('sourcereel'),\n    playbackData: {\n      init: { editorValue: '', chapter: 1, externalLibrary: ExternalLibraryName.NONE },\n      inputs: []\n    },\n    recordingStatus: RecordingStatus.notStarted,\n    timeElapsedBeforePause: 0,\n    timeResumed: 0\n  }\n};\n\nexport const defaultSession: SessionState = {\n  accessToken: undefined,\n  assessments: new Map<number, Assessment>(),\n  assessmentOverviews: undefined,\n  grade: 0,\n  gradingOverviews: undefined,\n  gradings: new Map<number, Grading>(),\n  group: null,\n  historyHelper: {\n    lastAcademyLocations: [null, null],\n    lastGeneralLocations: [null, null]\n  },\n  maxGrade: 0,\n  maxXp: 0,\n  refreshToken: undefined,\n  role: undefined,\n  name: undefined,\n  story: {\n    story: '',\n    playStory: false\n  },\n  gameState: {\n    completed_quests: [],\n    collectibles: {}\n  },\n  xp: 0,\n  notifications: []\n};\n\nexport const defaultState: OverallState = {\n  academy: defaultAcademy,\n  application: defaultApplication,\n  dashboard: defaultDashboard,\n  playground: defaultPlayground,\n  session: defaultSession,\n  workspaces: defaultWorkspaceManager\n};\n","import { Reducer } from 'redux';\n\nimport { SourceActionType } from '../../utils/ActionsHelper';\nimport { defaultSession } from '../ApplicationTypes';\nimport { SET_GAME_STATE } from '../types/ActionTypes';\nimport { LOG_OUT } from '../types/CommonsTypes';\nimport {\n  SessionState,\n  SET_GOOGLE_USER,\n  SET_TOKENS,\n  SET_USER,\n  UPDATE_ASSESSMENT,\n  UPDATE_ASSESSMENT_OVERVIEWS,\n  UPDATE_GRADING,\n  UPDATE_GRADING_OVERVIEWS,\n  UPDATE_HISTORY_HELPERS,\n  UPDATE_NOTIFICATIONS\n} from '../types/SessionTypes';\n\nexport const SessionsReducer: Reducer<SessionState> = (\n  state = defaultSession,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case LOG_OUT:\n      return defaultSession;\n    case SET_TOKENS:\n      return {\n        ...state,\n        accessToken: action.payload.accessToken,\n        refreshToken: action.payload.refreshToken\n      };\n    case SET_USER:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_GOOGLE_USER:\n      return {\n        ...state,\n        googleUser: action.payload\n      };\n    case UPDATE_HISTORY_HELPERS:\n      const helper = state.historyHelper;\n      const isAcademy = isAcademyRe.exec(action.payload) != null;\n      const newAcademyLocations = isAcademy\n        ? [helper.lastAcademyLocations[1], action.payload]\n        : [...helper.lastAcademyLocations];\n      const newGeneralLocations = [helper.lastGeneralLocations[1], action.payload];\n      return {\n        ...state,\n        historyHelper: {\n          lastAcademyLocations: newAcademyLocations,\n          lastGeneralLocations: newGeneralLocations\n        }\n      };\n    case UPDATE_ASSESSMENT:\n      const newAssessments = new Map(state.assessments);\n      newAssessments.set(action.payload.id, action.payload);\n      return {\n        ...state,\n        assessments: newAssessments\n      };\n    case UPDATE_ASSESSMENT_OVERVIEWS:\n      return {\n        ...state,\n        assessmentOverviews: action.payload\n      };\n    case UPDATE_GRADING:\n      const newGradings = new Map(state.gradings);\n      newGradings.set(action.payload.submissionId, action.payload.grading);\n      return {\n        ...state,\n        gradings: newGradings\n      };\n    case UPDATE_GRADING_OVERVIEWS:\n      return {\n        ...state,\n        gradingOverviews: action.payload\n      };\n    case UPDATE_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: action.payload\n      };\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        gameState: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const isAcademyRe = new RegExp('^/academy.*', 'i');\n","import { SourceError, Variant } from 'js-slang/dist/types';\n\nimport { ExternalLibrary, ExternalLibraryName } from '../application/types/ExternalTypes';\n\nexport const FETCH_ASSESSMENT_OVERVIEWS = 'FETCH_ASSESSMENT_OVERVIEWS';\nexport const SUBMIT_ASSESSMENT = 'SUBMIT_ASSESSMENT';\n\nexport enum AssessmentStatuses {\n  attempting = 'attempting',\n  attempted = 'attempted',\n  not_attempted = 'not_attempted',\n  submitted = 'submitted'\n}\nexport type AssessmentStatus = keyof typeof AssessmentStatuses;\n\nexport type AssessmentWorkspaceParams = {\n  assessmentId?: string;\n  questionId?: string;\n};\n\nexport enum GradingStatuses {\n  excluded = 'excluded',\n  graded = 'graded',\n  grading = 'grading',\n  none = 'none'\n}\nexport type GradingStatus = keyof typeof GradingStatuses;\n\nexport enum AssessmentCategories {\n  Contest = 'Contest',\n  Mission = 'Mission',\n  Path = 'Path',\n  Sidequest = 'Sidequest',\n  Practical = 'Practical'\n}\nexport type AssessmentCategory = keyof typeof AssessmentCategories;\n\nexport enum TestcaseTypes {\n  // These are rendered in full by the Mission Autograder\n  public = 'public',\n  // These are rendered with a placeholder by the Autograder\n  hidden = 'hidden',\n  // These should only exist in the grading workspace for submissions\n  private = 'private'\n}\nexport type TestcaseType = keyof typeof TestcaseTypes;\n\nexport enum QuestionTypes {\n  programming = 'programming',\n  mcq = 'mcq'\n}\nexport type QuestionType = keyof typeof QuestionTypes;\n\n/*\nW* Used to display information regarding an assessment in the UI.\n*\n * @property closeAt an ISO 8601 compliant date string specifiying when\n *   the assessment closes\n * @property openAt an ISO 8601 compliant date string specifiying when\n *   the assessment opens\n */\nexport type AssessmentOverview = {\n  category: AssessmentCategory;\n  closeAt: string;\n  coverImage: string;\n  fileName?: string; // For mission control\n  grade: number;\n  gradingStatus: GradingStatus;\n  id: number;\n  isPublished?: boolean;\n  maxGrade: number;\n  maxXp: number;\n  number?: string; // For mission control\n  openAt: string;\n  private?: boolean;\n  reading?: string; // For mission control\n  shortSummary: string;\n  status: AssessmentStatus;\n  story: string | null;\n  title: string;\n  xp: number;\n};\n\n/*\n * Used when an assessment is being actively attempted/graded.\n */\nexport type Assessment = {\n  category: AssessmentCategory;\n  globalDeployment?: Library; // For mission control\n  graderDeployment?: Library; // For mission control\n  id: number;\n  longSummary: string;\n  missionPDF: string;\n  title: string;\n  questions: Question[];\n};\n\nexport interface IProgrammingQuestion extends BaseQuestion {\n  answer: string | null;\n  autogradingResults: AutogradingResult[];\n  graderTemplate?: string;\n  prepend: string;\n  postpend: string;\n  solutionTemplate: string;\n  testcases: Testcase[];\n  testcasesPrivate?: Testcase[]; // For mission control\n  type: 'programming';\n}\n\nexport interface IMCQQuestion extends BaseQuestion {\n  answer: number | null;\n  choices: MCQChoice[];\n  solution: number | null;\n  type: 'mcq';\n}\n\nexport type BaseQuestion = {\n  answer: string | number | null;\n  comments?: string;\n  content: string;\n  editorValue?: string | null;\n  grade: number;\n  gradedAt?: string;\n  grader?: {\n    name: string;\n    id: number;\n  };\n  graderLibrary?: Library; // For mission control\n  id: number;\n  library: Library;\n  maxGrade: number;\n  maxXp: number;\n  roomId: string | null;\n  type: QuestionType;\n  xp: number;\n};\n\nexport type Question = IProgrammingQuestion | IMCQQuestion;\n\nexport type Library = {\n  chapter: number;\n  variant?: Variant;\n  external: ExternalLibrary;\n  globals: Array<{\n    0: string;\n    1: any;\n    2?: string; // For mission control\n  }>;\n  moduleParams?: any;\n};\n\nexport type Testcase = {\n  answer: string; // the correct answer to the testcase\n  errors?: SourceError[]; // errors raised by interpreter during execution\n  program: string; // the program to be appended to the student's code\n  result?: any; // the result from the execution of the testcase\n  score: number;\n  type: TestcaseType;\n};\n\nexport type MCQChoice = {\n  content: string;\n  hint: string | null;\n};\n\nexport type AutogradingResult = {\n  resultType: string;\n  expected?: string; // the correct answer for the testcase\n  actual?: string; // the received answer from the student's code\n  errors?: AutogradingError[];\n};\n\nexport type AutogradingError = {\n  errorType: string;\n  line?: number;\n  location?: string;\n  errorLine?: string;\n  errorExplanation?: string;\n};\n\nexport const emptyLibrary = (): Library => {\n  return {\n    chapter: -1,\n    external: {\n      name: 'NONE' as ExternalLibraryName,\n      symbols: []\n    },\n    globals: []\n  };\n};\n\nexport const normalLibrary = (): Library => {\n  return {\n    chapter: 1,\n    external: {\n      name: 'NONE' as ExternalLibraryName,\n      symbols: []\n    },\n    globals: []\n  };\n};\n\nexport const overviewTemplate = (): AssessmentOverview => {\n  return {\n    category: AssessmentCategories.Mission,\n    closeAt: '2100-12-01T00:00+08',\n    coverImage: 'https://fakeimg.pl/300/',\n    grade: 1,\n    id: -1,\n    maxGrade: 0,\n    maxXp: 0,\n    openAt: '2000-01-01T00:00+08',\n    title: 'Insert title here',\n    reading: '',\n    shortSummary: 'Insert short summary here',\n    status: AssessmentStatuses.not_attempted,\n    story: 'mission',\n    xp: 0,\n    gradingStatus: 'none'\n  };\n};\n\nexport const programmingTemplate = (): IProgrammingQuestion => {\n  return {\n    autogradingResults: [],\n    answer: '// [Marking Scheme]\\n// 1 mark for correct answer',\n    roomId: '19422043',\n    content: 'Enter content here',\n    id: 0,\n    library: emptyLibrary(),\n    graderLibrary: emptyLibrary(),\n    prepend: '',\n    solutionTemplate: '//This is a mock solution template',\n    postpend: '',\n    testcases: [],\n    testcasesPrivate: [],\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 0,\n    maxXp: 0\n  };\n};\n\nexport const testcaseTemplate = (): Testcase => {\n  return {\n    type: TestcaseTypes.public,\n    answer: '',\n    score: 0,\n    program: ''\n  };\n};\n\nexport const mcqTemplate = (): IMCQQuestion => {\n  return {\n    answer: 3,\n    roomId: null,\n    content: 'This is a mock MCQ question',\n    choices: [\n      {\n        content: 'A',\n        hint: null\n      },\n      {\n        content: 'B',\n        hint: null\n      },\n      {\n        content: 'C',\n        hint: null\n      },\n      {\n        content: 'D',\n        hint: null\n      }\n    ],\n    id: 2,\n    library: emptyLibrary(),\n    graderLibrary: emptyLibrary(),\n    type: 'mcq',\n    solution: 0,\n    xp: 0,\n    grade: 0,\n    maxGrade: 0,\n    maxXp: 0\n  };\n};\n\nexport const assessmentTemplate = (): Assessment => {\n  return {\n    category: 'Mission',\n    globalDeployment: normalLibrary(),\n    graderDeployment: emptyLibrary(),\n    id: -1,\n    longSummary: 'Insert mission briefing here',\n    missionPDF: 'www.google.com',\n    questions: [programmingTemplate()],\n    title: 'Insert title here'\n  };\n};\n","import { Button, Classes, Menu, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemListRenderer, ItemRenderer, Select } from '@blueprintjs/select';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\n\nimport { SourceLanguage, sourceLanguages, styliseChapter } from '../application/ApplicationTypes';\nimport { Chapter } from '../application/types/ChapterTypes';\n\ntype ControlBarChapterSelectProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChapterSelect?: (i: Chapter, e?: React.SyntheticEvent<HTMLElement>) => void;\n};\n\ntype StateProps = {\n  sourceChapter: number;\n  sourceVariant: Variant;\n  disabled?: boolean;\n  key: string;\n};\n\nexport function ControlBarChapterSelect(props: ControlBarChapterSelectProps) {\n  const chapters = sourceLanguages.map((lang: SourceLanguage) => {\n    return {\n      chapter: lang.chapter,\n      variant: lang.variant,\n      displayName: styliseChapter(lang.chapter, lang.variant)\n    };\n  });\n\n  const chapterListRenderer: ItemListRenderer<Chapter> = ({\n    items,\n    itemsParentRef,\n    query,\n    renderItem\n  }) => {\n    const defaultLangs = items.filter(item => item.variant === 'default').map(renderItem);\n    const variantLangs = items.filter(item => item.variant !== 'default').map(renderItem);\n    return (\n      <Menu ulRef={itemsParentRef}>\n        {defaultLangs}\n        <MenuItem active={false} key=\"variant-menu\" text=\"Variant\" icon=\"cog\">\n          {variantLangs}\n        </MenuItem>\n      </Menu>\n    );\n  };\n\n  const chapterRenderer: ItemRenderer<Chapter> = (lang, { handleClick }) => (\n    <MenuItem\n      active={false}\n      key={lang.chapter + lang.variant}\n      onClick={handleClick}\n      text={lang.displayName}\n    />\n  );\n  const ChapterSelectComponent = Select.ofType<Chapter>();\n\n  const chapterSelector = (currentChap: number, currentVariant: Variant, disabled: boolean) => {\n    return (\n      <div>\n        <Button\n          className={Classes.MINIMAL}\n          text={styliseChapter(currentChap, currentVariant)}\n          rightIcon={disabled ? null : IconNames.DOUBLE_CARET_VERTICAL}\n          disabled={disabled || false}\n        />\n      </div>\n    );\n  };\n\n  const chapSelect = (\n    currentChap: number,\n    currentVariant: Variant,\n    handleSelect = (i: Chapter, e?: React.SyntheticEvent<HTMLElement>) => {},\n    disabled: boolean\n  ) => (\n    <ChapterSelectComponent\n      className={Classes.MINIMAL}\n      items={chapters}\n      onItemSelect={handleSelect}\n      itemRenderer={chapterRenderer}\n      itemListRenderer={chapterListRenderer}\n      filterable={false}\n      disabled={disabled || false}\n    >\n      {chapterSelector(currentChap, currentVariant, disabled)}\n    </ChapterSelectComponent>\n  );\n\n  return chapSelect(\n    props.sourceChapter,\n    props.sourceVariant,\n    props.handleChapterSelect,\n    props.disabled || false\n  );\n}\n","import { Button, IButtonProps, Icon, IconName, Intent } from '@blueprintjs/core';\nimport * as React from 'react';\n\ntype controlButtonOptionals = {\n  className?: string;\n  fullWidth?: boolean;\n  iconColor?: string;\n  iconOnRight?: boolean;\n  intent?: Intent;\n  minimal?: boolean;\n  type?: 'submit' | 'reset' | 'button';\n};\n\nconst defaultOptions = {\n  className: '',\n  fullWidth: false,\n  iconOnRight: false,\n  intent: Intent.NONE,\n  minimal: true\n};\n\nconst controlButton = (\n  label: string,\n  icon: IconName | null,\n  onClick: (() => void) | null = null,\n  options: controlButtonOptionals = {},\n  disabled: boolean = false\n) => {\n  const opts: controlButtonOptionals = { ...defaultOptions, ...options };\n  const props: IButtonProps = { disabled };\n\n  props.fill = opts.fullWidth !== undefined && opts.fullWidth;\n  props.intent = opts.intent === undefined ? Intent.NONE : opts.intent;\n  props.minimal = opts.minimal !== undefined && opts.minimal;\n  props.className = opts.className;\n  props.type = opts.type;\n\n  if (icon) {\n    const ic: JSX.Element = (\n      <Icon icon={icon} color={opts.iconColor ? opts.iconColor : undefined} />\n    );\n    opts.iconOnRight ? (props.rightIcon = ic) : (props.icon = ic);\n  }\n\n  if (onClick) {\n    props.onClick = onClick;\n  }\n\n  return <Button {...props}>{label}</Button>;\n};\n\nexport default controlButton;\n","import { IconNames } from '@blueprintjs/icons';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarClearButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleReplOutputClear: () => void;\n};\n\ntype StateProps = {\n  key: string;\n};\n\nexport function ControlBarClearButton(props: ControlBarClearButtonProps) {\n  return controlButton('Clear', IconNames.REMOVE, props.handleReplOutputClear);\n}\n","import { Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarEvalButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleReplEval: () => void;\n};\n\ntype StateProps = {\n  isRunning: boolean;\n  key: string;\n};\n\nexport function ControlBarEvalButton(props: ControlBarEvalButtonProps) {\n  return props.isRunning ? null : (\n    <Tooltip content=\"...or press shift-enter in the REPL\">\n      {controlButton('Eval', IconNames.CODE, props.handleReplEval)}\n    </Tooltip>\n  );\n}\n","import { IconNames } from '@blueprintjs/icons';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarReturnToAcademyButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClick?(): any;\n};\n\ntype StateProps = {\n  key: string;\n};\n\nexport function ControlBarReturnToAcademyButton(props: ControlBarReturnToAcademyButtonProps) {\n  return controlButton('Return to Academy', IconNames.ARROW_RIGHT, props.onClick, {\n    iconOnRight: true\n  });\n}\n","import { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../ControlButton';\nimport { ControlBarReturnToAcademyButton } from './ControlBarReturnToAcademyButton';\n\ntype ControlBarNextButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClickNext?(): any;\n  onClickReturn?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  questionProgress: [number, number] | null;\n};\n\nexport function ControlBarNextButton(props: ControlBarNextButtonProps) {\n  return props.questionProgress![0] === props.questionProgress![1] ? (\n    <ControlBarReturnToAcademyButton onClick={props.onClickReturn} key=\"return_to_academy\" />\n  ) : (\n    controlButton('Next', IconNames.ARROW_RIGHT, props.onClickNext, { iconOnRight: true })\n  );\n}\n","import { IconNames } from '@blueprintjs/icons';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarPreviousButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClick?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  questionProgress: [number, number] | null;\n};\n\nexport function ControlBarPreviousButton(props: ControlBarPreviousButtonProps) {\n  return props.questionProgress![0] <= 1\n    ? null\n    : controlButton('Previous', IconNames.ARROW_LEFT, props.onClick);\n}\n","import controlButton from '../ControlButton';\n\n/**\n * @prop questionProgress a tuple of (current question number, question length) where\n *   the current question number is 1-based.\n */\ntype ControlBarQuestionViewButtonProps = StateProps;\n\ntype StateProps = {\n  questionProgress: [number, number] | null;\n  key: string;\n};\n\nexport function ControlBarQuestionViewButton(props: ControlBarQuestionViewButtonProps) {\n  return controlButton(\n    `Question ${props.questionProgress![0]} of ${props.questionProgress![1]}  `,\n    null,\n    null,\n    {},\n    true\n  );\n}\n","import { IconNames } from '@blueprintjs/icons';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarResetButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClick?(): any;\n};\n\ntype StateProps = {\n  key: string;\n};\n\nexport function ControlBarResetButton(props: ControlBarResetButtonProps) {\n  return controlButton('Reset', IconNames.REPEAT, props.onClick);\n}\n","import { Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../ControlButton';\n\ntype ControlButtonRunButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleEditorEval: () => void;\n};\n\ntype StateProps = {\n  key: string;\n};\n\nexport function ControlBarRunButton(props: ControlButtonRunButtonProps) {\n  return (\n    <Tooltip content=\"...or press shift-enter in the editor\">\n      {controlButton('Run', IconNames.PLAY, props.handleEditorEval)}\n    </Tooltip>\n  );\n}\n","import { Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarSaveButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClickSave?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  hasUnsavedChanges?: boolean;\n};\n\nexport function ControlButtonSaveButton(props: ControlBarSaveButtonProps) {\n  const saveButtonOpts = props.hasUnsavedChanges ? { intent: Intent.WARNING, minimal: false } : {};\n\n  return controlButton('Save', IconNames.FLOPPY_DISK, props.onClickSave, saveButtonOpts);\n}\n","import { Classes } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Converter } from 'showdown';\n\ntype MarkdownProps = {\n  className?: string;\n  content: string;\n  openLinksInNewWindow?: boolean;\n  simplifiedAutoLink?: boolean;\n  strikethrough?: boolean;\n  tasklists?: boolean;\n};\n\nconst Markdown: React.FC<MarkdownProps> = props => {\n  const converter = new Converter({\n    tables: true,\n    simplifiedAutoLink: props.simplifiedAutoLink,\n    strikethrough: props.strikethrough,\n    tasklists: props.tasklists,\n    openLinksInNewWindow: props.openLinksInNewWindow\n  });\n\n  return (\n    <div\n      className={classNames(props.className ? props.className : 'md', Classes.RUNNING_TEXT)}\n      dangerouslySetInnerHTML={{ __html: converter.makeHtml(props.content) }}\n    />\n  );\n};\n\nexport default React.memo(Markdown);\n","import * as React from 'react';\n\ntype SideContentCanvasOutputProps = StateProps;\n\ntype StateProps = {\n  canvas: HTMLCanvasElement;\n};\n\n/**\n * Takes the output of the rendered graphics (in a hidden canvas tag under <body>)\n * and makes it into a new <canvas> output for viewing.\n */\nclass SideContentCanvasOutput extends React.Component<SideContentCanvasOutputProps, {}> {\n  private $parent: HTMLElement | null = null;\n\n  public componentDidMount() {\n    this.$parent!.appendChild(this.props.canvas);\n    this.props.canvas.hidden = false;\n  }\n\n  public render() {\n    return <div ref={r => (this.$parent = r)} className=\"canvas-container\" />;\n  }\n}\n\nexport default SideContentCanvasOutput;\n","import { Card, Classes, Elevation, Pre } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport { parseError } from 'js-slang';\nimport { stringify } from 'js-slang/dist/utils/stringify';\nimport * as React from 'react';\n\nimport { Testcase, TestcaseTypes } from '../assessment/AssessmentTypes';\nimport SideContentCanvasOutput from './SideContentCanvasOutput';\n\ntype SideContentAutograderCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  testcase: Testcase;\n  index: number;\n};\n\nconst renderResult = (value: any) => {\n  /** A class which is the output of the show() function */\n  const ShapeDrawn = (window as any).ShapeDrawn;\n  if (typeof ShapeDrawn !== 'undefined' && value instanceof ShapeDrawn) {\n    return <SideContentCanvasOutput canvas={value.$canvas} />;\n  } else {\n    return stringify(value);\n  }\n};\n\nclass SideContentAutograderCard extends React.Component<SideContentAutograderCardProps, {}> {\n  public render() {\n    const isEvaluated = this.props.testcase.result !== undefined || this.props.testcase.errors;\n    const isEqual = stringify(this.props.testcase.result) === this.props.testcase.answer;\n\n    const extraClasses = {\n      correct: isEvaluated && isEqual,\n      wrong: isEvaluated && !isEqual,\n      private: this.props.testcase.type === TestcaseTypes.private\n    };\n\n    // Render a placeholder cell in place of the actual testcase data for hidden testcases\n    if (this.props.testcase.type === TestcaseTypes.hidden) {\n      return (\n        <div className={classNames('AutograderCard', extraClasses)}>\n          <Card className=\"bp3-interactive\" elevation={Elevation.ONE} onClick={this.evalSelf}>\n            <Pre className=\"testcase-placeholder\">Hidden testcase</Pre>\n          </Card>\n        </div>\n      );\n    }\n\n    return (\n      <div className={classNames('AutograderCard', extraClasses)}>\n        <Card className={Classes.INTERACTIVE} elevation={Elevation.ONE} onClick={this.evalSelf}>\n          <Pre className=\"testcase-program\">{this.props.testcase.program}</Pre>\n          <Pre className=\"testcase-expected\">{this.props.testcase.answer}</Pre>\n          <Pre className=\"testcase-actual\">\n            {this.props.testcase.errors\n              ? parseError(this.props.testcase.errors)\n              : this.props.testcase.result !== undefined\n              ? renderResult(this.props.testcase.result)\n              : 'No Answer'}\n          </Pre>\n        </Card>\n      </div>\n    );\n  }\n\n  // Enable clicks on the card to run the testcase\n  private evalSelf = () => {\n    this.props.handleTestcaseEval(this.props.index);\n  };\n}\n\nexport default SideContentAutograderCard;\n","import { Card, Elevation, Pre } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { AutogradingError, AutogradingResult } from '../assessment/AssessmentTypes';\n\ntype SideContentResultCardProps = StateProps;\n\ntype StateProps = {\n  index: number;\n  result: AutogradingResult;\n};\n\nclass SideContentResultCard extends React.Component<SideContentResultCardProps, {}> {\n  public render() {\n    const buildErrorString = (errors: AutogradingError[]) => {\n      return errors\n        .map(error =>\n          error.errorType === 'timeout'\n            ? 'Timeout: Submission exceeded time limit for this test case.'\n            : `Line ${error.line}: Error: ${error.errorExplanation}`\n        )\n        .join('\\n');\n    };\n\n    const isCorrect = this.props.result.resultType === 'pass' ? ' correct' : ' wrong';\n\n    return (\n      <div className={'ResultCard' + isCorrect}>\n        <Card elevation={Elevation.ONE}>\n          <div className=\"result-data\">\n            <div className=\"result-idx\">{this.props.index + 1}</div>\n            <div className=\"result-status\">{this.props.result.resultType.toUpperCase()}</div>\n          </div>\n          <Pre className=\"result-expected\">{this.props.result.expected!}</Pre>\n          <Pre className=\"result-actual\">\n            {this.props.result.resultType === 'error'\n              ? buildErrorString(this.props.result.errors!)\n              : this.props.result.actual!}\n          </Pre>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default SideContentResultCard;\n","import { Collapse, Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { AutogradingResult, Testcase } from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport SideContentAutograderCard from './SideContentAutograderCard';\nimport SideContentResultCard from './SideContentResultCard';\n\nexport type SideContentAutograderProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  autogradingResults: AutogradingResult[];\n  testcases: Testcase[];\n};\n\ntype State = {\n  showTestcases: boolean;\n  showResults: boolean;\n};\n\nclass SideContentAutograder extends React.Component<SideContentAutograderProps, State> {\n  public constructor(props: SideContentAutograderProps) {\n    super(props);\n\n    this.state = {\n      showTestcases: true,\n      showResults: true\n    };\n  }\n\n  public render() {\n    const testcasesHeader = (\n      <div className=\"testcases-header\">\n        <div className=\"header-fn\">\n          <Icon icon={IconNames.CARET_DOWN} />\n          Testcase (click to run)\n        </div>\n        <div className=\"header-expected\">\n          <Icon icon={IconNames.CARET_DOWN} />\n          Expected result\n        </div>\n        <div className=\"header-actual\">\n          <Icon icon={IconNames.CARET_DOWN} />\n          Actual result\n        </div>\n      </div>\n    );\n\n    const resultsHeader = (\n      <div className=\"results-header\">\n        <div className=\"header-data\">\n          <div className=\"header-sn\">\n            <Icon icon={IconNames.CARET_DOWN} />\n            S/N\n          </div>\n          <div className=\"header-status\">\n            <Icon icon={IconNames.CARET_DOWN} />\n            Testcase status\n          </div>\n        </div>\n        <div className=\"header-expected\">\n          <Icon icon={IconNames.CARET_DOWN} />\n          Expected result\n        </div>\n        <div className=\"header-actual\">\n          <Icon icon={IconNames.CARET_DOWN} />\n          Actual result\n        </div>\n      </div>\n    );\n\n    const testcases =\n      this.props.testcases.length > 0 ? (\n        <div>\n          {testcasesHeader}\n          {this.props.testcases.map((testcase, index) => (\n            <SideContentAutograderCard\n              key={index}\n              index={index}\n              testcase={testcase}\n              handleTestcaseEval={this.props.handleTestcaseEval}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"noResults\">There are no testcases provided for this question.</div>\n      );\n\n    const results =\n      this.props.autogradingResults.length > 0 ? (\n        <div>\n          {resultsHeader}\n          {this.props.autogradingResults.map((result, index) => (\n            <SideContentResultCard key={index} index={index} result={result} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"noResults\">There are no results to show.</div>\n      );\n\n    const collapseButton = (label: string, isOpen: boolean, toggleFunc: () => void) =>\n      controlButton(label, isOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT, toggleFunc, {\n        minimal: true,\n        className: 'collapse-button'\n      });\n\n    return (\n      <div className=\"Autograder\">\n        {collapseButton('Testcases', this.state.showTestcases, this.toggleTestcases)}\n        <Collapse isOpen={this.state.showTestcases}>{testcases}</Collapse>\n        {collapseButton('Autograder Results', this.state.showResults, this.toggleResults)}\n        <Collapse isOpen={this.state.showResults}>{results}</Collapse>\n      </div>\n    );\n  }\n\n  private toggleTestcases = () =>\n    this.setState({\n      ...this.state,\n      showTestcases: !this.state.showTestcases\n    });\n\n  private toggleResults = () =>\n    this.setState({\n      ...this.state,\n      showResults: !this.state.showResults\n    });\n}\n\nexport default SideContentAutograder;\n","import { Button, Classes } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nclass SideContentToneMatrix extends React.Component<{}, {}> {\n  private $container: HTMLElement | null = null;\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentDidMount() {\n    if ((window as any).ToneMatrix) {\n      (window as any).ToneMatrix.initialise_matrix(this.$container!);\n    }\n  }\n\n  public handleClear() {\n    (window as any).ToneMatrix.clear_matrix();\n  }\n\n  public handleRandomise() {\n    (window as any).ToneMatrix.randomise_matrix();\n  }\n\n  public render() {\n    return (\n      <div className=\"sa-tone-matrix\">\n        <div className=\"row\">\n          <div className={classNames('controls', 'col-xs-12', Classes.DARK, Classes.BUTTON_GROUP)}>\n            <Button id=\"clear-matrix\" onClick={this.handleClear}>\n              Clear\n            </Button>\n            <Button id=\"randomise-matrix\" onClick={this.handleRandomise}>\n              Randomise\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12\" ref={r => (this.$container = r)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideContentToneMatrix;\n","import moment from 'moment';\n\n/**\n * Checks if a date is before or at the current time.\n *\n * @param {string} d an ISO 8601 compliant date string\n *   e.g 2018-07-06T10:20:09.961Z\n * @returns {boolean} true if the date specified by the paramter\n *   is before the time of execution of this function.\n */\nexport const beforeNow = (dateString: string): boolean => {\n  const date = moment(dateString);\n  const now = moment();\n  return date.isBefore(now);\n};\n\n/**\n * Return a string representation of a date that is\n * nice to look at. To be used for displaying the date,\n * e.g when showing the assessment overview.\n *\n * @param {string} d an ISO 8601 compliant date string\n *   e.g 2018-07-06T10:20:09.961Z\n * @returns {string} A user-friendly readable date string,\n *   e.g 7th June, 20:09\n */\nexport const getPrettyDate = (dateString: string): string => {\n  const date = moment(dateString);\n  const prettyDate = date.format('Do MMMM, HH:mm');\n  return prettyDate;\n};\n\nexport const getStandardDateTime = (dateString: string): string => {\n  const date = moment(dateString);\n  const prettyDate = date.format('MMMM Do YYYY, HH:mm');\n  return prettyDate;\n};\n\nexport const getStandardDate = (dateString: string): string => {\n  const date = moment(dateString);\n  const prettyDate = date.format('MMMM Do YYYY');\n  return prettyDate;\n};\n","/** history is created and exported here instead of in src/index.tsx as jest\n * would otherwise throw an error. See: https://stackoverflow.com/a/42611909/6910451\n */\nimport { createBrowserHistory } from 'history';\n\n/**\n * HistoryHelper is a slice of the session property of the application redux\n * store. It keeps track of the last visited location in general, and the last\n * visited location under /academy. This allows us to implement different routes\n * for the 'SOURCE ACADEMY' button depending on the current location of the\n * user.\n */\nexport type HistoryHelper = {\n  lastAcademyLocations: lastLocation[];\n  lastGeneralLocations: lastLocation[];\n};\n\ntype lastLocation = string | null;\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n","import { Intent, IToastProps, Position, Toaster } from '@blueprintjs/core';\n\nconst notification = Toaster.create({\n  position: Position.TOP\n});\n\nexport const showSuccessMessage = (\n  message: string | JSX.Element,\n  timeout: number = 2000,\n  key?: string\n) =>\n  notification.show(\n    {\n      intent: Intent.SUCCESS,\n      message,\n      timeout\n    },\n    key\n  );\n\nexport const showWarningMessage = (\n  message: string | JSX.Element,\n  timeout: number = 2000,\n  key?: string\n) =>\n  notification.show(\n    {\n      intent: Intent.WARNING,\n      message,\n      timeout\n    },\n    key\n  );\n\nexport const showMessage = (props: IToastProps, key?: string) => notification.show(props, key);\n\nexport const dismiss = (key: string) => notification.dismiss(key);\n","import { AssessmentCategories, AssessmentCategory } from '../assessment/AssessmentTypes';\n\n/**\n * Converts an AssessmentCategory into a string for use in URLs.\n *\n * Note that there is an exception to the usual logic, for sidequests.\n * Sidequests show up on the frontend as 'Quests' (#295) and the URLs\n * must be represented as such.\n *\n * @param {AssessmentCategory} cat - Any AssessmentCategory, usually\n *   retrieved from the AssessmentCategories enum\n */\nexport const assessmentCategoryLink = (cat: AssessmentCategory): string =>\n  cat === AssessmentCategories.Sidequest ? 'quests' : cat.toLowerCase().concat('s');\n\n/** Converts an optinal string\n *  parameter into an integer or null value.\n *\n *  @param {string} str - An optional string to be\n *    converted to an integer.\n */\nexport const stringParamToInt = (str?: string): number | null => {\n  if (str === undefined) {\n    return null;\n  }\n  const num = parseInt(str, 10);\n  return Number.isInteger(num) ? num : null;\n};\n","import { Classes } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport type ControlBarProps = OwnProps;\n\ntype OwnProps = {\n  editorButtons: Array<JSX.Element | null>;\n  flowButtons?: Array<JSX.Element | null>;\n  replButtons: Array<JSX.Element | null>;\n};\n\nfunction ControlBar(props: ControlBarProps) {\n  const editorControl = () => {\n    return (\n      <div className={classNames('ControlBar_editor', Classes.BUTTON_GROUP)}>\n        {props.editorButtons}\n      </div>\n    );\n  };\n\n  const flowControl = () => {\n    return (\n      props.flowButtons && (\n        <div className={classNames('ControlBar_flow', Classes.BUTTON_GROUP)}>\n          {props.flowButtons}\n        </div>\n      )\n    );\n  };\n\n  const replControl = () => {\n    return (\n      <div className={classNames('ControlBar_repl', Classes.BUTTON_GROUP)}>{props.replButtons}</div>\n    );\n  };\n\n  return (\n    <div className=\"ControlBar\">\n      {editorControl()}\n      {flowControl()}\n      {replControl()}\n    </div>\n  );\n}\n\nexport default ControlBar;\n","export const INIT_INVITE = 'INIT_INVITE';\nexport const INVALID_EDITOR_SESSION_ID = 'INVALID_EDITOR_SESSION_ID';\nexport const FINISH_INVITE = 'FINISH_INVITE';\nexport const SET_EDITOR_SESSION_ID = 'SET_EDITOR_SESSION_ID';\nexport const SET_WEBSOCKET_STATUS = 'SET_WEBSOCKET_STATUS';\n\nexport enum XMLHttpReadyState {\n  UNSENT = 0,\n  OPENED = 1,\n  HEADERS_RECEIVED = 2,\n  LOADING = 3,\n  DONE = 4\n}\n\nexport enum XMLHttpStatus {\n  OK = 200,\n  PAGE_NOT_FOUND = 404\n}\n","import { Links } from '../utils/Constants';\nimport { XMLHttpReadyState, XMLHttpStatus } from './CollabEditingTypes';\n\nexport function checkSessionIdExists(\n  editorSessionId: string,\n  handleConnectionOK: () => void,\n  handleSessionIdNotFound: () => void,\n  handleCannotReachServer: () => void\n) {\n  const xmlhttp = new XMLHttpRequest();\n  xmlhttp.onreadystatechange = () => {\n    if (xmlhttp.readyState !== XMLHttpReadyState.DONE) {\n      return;\n    }\n    if (xmlhttp.status !== XMLHttpStatus.OK) {\n      handleCannotReachServer();\n      return;\n    }\n    const sessionIdExists: boolean = JSON.parse(xmlhttp.responseText).state;\n    if (!sessionIdExists) {\n      handleSessionIdNotFound();\n      return;\n    }\n    handleConnectionOK();\n  };\n  xmlhttp.open('GET', 'https://' + Links.shareDBServer + 'gists/' + editorSessionId, true);\n  xmlhttp.send();\n}\n\nexport function createNewSession(onSessionCreated: (sessionId: string) => void) {\n  const xmlhttp: XMLHttpRequest = new XMLHttpRequest();\n  xmlhttp.onreadystatechange = () => {\n    if (xmlhttp.readyState === XMLHttpReadyState.DONE && xmlhttp.status === XMLHttpStatus.OK) {\n      const id: string = JSON.parse(xmlhttp.responseText).id;\n      onSessionCreated(id);\n    }\n  };\n  xmlhttp.open('GET', 'https://' + Links.shareDBServer + 'gists/latest/', true);\n  xmlhttp.send();\n}\n","import { SourceDocumentation } from 'js-slang';\n\nimport { externalLibraries } from '../application/types/ExternalTypes';\n\nconst externalLibrariesDocumentation = {};\n\nconst MAX_CAPTION_LENGTH = 25;\n\nfunction shortenCaption(name: string): string {\n  if (name.length <= MAX_CAPTION_LENGTH) {\n    return name;\n  }\n\n  return (name = name.substring(0, MAX_CAPTION_LENGTH - 3) + '...');\n}\n\nfor (const [lib, names] of externalLibraries) {\n  const libDocs = names.map((name: string) => {\n    if (name in SourceDocumentation.ext_lib) {\n      return {\n        caption: shortenCaption(name),\n        value: name,\n        meta: SourceDocumentation.ext_lib[name].meta,\n        docHTML: SourceDocumentation.ext_lib[name].description\n      };\n    } else {\n      return {\n        caption: shortenCaption(name),\n        value: name,\n        meta: 'const'\n      };\n    }\n  });\n\n  externalLibrariesDocumentation[lib] = libDocs;\n}\n\nconst builtinDocumentation = {};\n\nObject.entries(SourceDocumentation.builtins).forEach((chapterDoc: any) => {\n  const [chapter, docs] = chapterDoc;\n  builtinDocumentation[chapter] = Object.entries(docs).map((entry: any) => {\n    const [name, info] = entry;\n    return {\n      caption: shortenCaption(name),\n      value: name,\n      meta: info.meta,\n      docHTML: info.description\n    };\n  });\n});\n\nexport const Documentation = {\n  builtins: builtinDocumentation,\n  externalLibraries: externalLibrariesDocumentation\n};\n","/***\n * We need access to the Range class in the Ace Editor to create our own ranges, and\n * this is the only way to do it.\n */\nconst ace = (() => {\n  return (window as any).ace;\n})() as any;\nconst { Range } = ace.acequire('ace/range');\nexport default Range;\n","/* eslint-disable simple-import-sort/sort */\nimport { require as acequire } from 'ace-builds';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport 'js-slang/dist/editors/ace/theme/source';\n\nimport {\n  createContext,\n  getAllOccurrencesInScope,\n  getScope,\n  getTypeInformation,\n  hasDeclaration\n} from 'js-slang';\nimport { HighlightRulesSelector, ModeSelector } from 'js-slang/dist/editors/ace/modes/source';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\nimport AceEditor, { IAceEditorProps } from 'react-ace';\nimport { HotKeys } from 'react-hotkeys';\nimport sharedbAce from 'sharedb-ace';\n\nimport { checkSessionIdExists } from '../collabEditing/CollabEditingHelper';\nimport { Documentation } from '../documentation/Documentation';\nimport { Links } from '../utils/Constants';\nimport AceRange from './EditorAceRange';\nimport { Position } from './EditorTypes';\n\n/**\n * @property editorValue - The string content of the react-ace editor\n * @property handleEditorChange  - A callback function\n *           for the react-ace editor's `onChange`\n * @property handleEvalEditor  - A callback function for evaluation\n *           of the editor's content, using `slang`\n */\nexport type EditorProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (newCode: string) => void;\n  handleReplValueChange?: (newCode: string) => void;\n  handleReplEval?: () => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleFinishInvite?: () => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n  handleSendReplInputToOutput?: (newOutput: string) => void;\n  handleSetWebsocketStatus?: (websocketStatus: number) => void;\n  handleUpdateHasUnsavedChanges?: (hasUnsavedChanges: boolean) => void;\n};\n\ntype StateProps = {\n  breakpoints: string[];\n  editorSessionId: string;\n  editorValue: string;\n  highlightedLines: number[][];\n  isEditorAutorun: boolean;\n  newCursorPosition?: Position;\n  sharedbAceInitValue?: string;\n  sharedbAceIsInviting?: boolean;\n  sourceChapter?: number;\n  externalLibraryName?: string;\n  sourceVariant?: Variant;\n};\n\nclass Editor extends React.PureComponent<EditorProps, {}> {\n  public ShareAce: any;\n  public AceEditor: React.RefObject<AceEditor>;\n  private markerIds: number[];\n  private onChangeMethod: (newCode: string) => void;\n  private completer: {};\n\n  constructor(props: EditorProps) {\n    super(props);\n    this.AceEditor = React.createRef();\n    this.ShareAce = null;\n    this.markerIds = [];\n    this.onChangeMethod = (newCode: string) => {\n      if (this.props.handleUpdateHasUnsavedChanges) {\n        this.props.handleUpdateHasUnsavedChanges(true);\n      }\n      this.props.handleEditorValueChange(newCode);\n      this.handleVariableHighlighting();\n      const annotations = this.AceEditor.current!.editor.getSession().getAnnotations();\n      if (this.props.isEditorAutorun && annotations.length === 0) {\n        this.props.handleEditorEval();\n      }\n    };\n\n    this.completer = {\n      getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: any) => {\n        // Don't prompt if prefix starts with number\n        if (prefix && /\\d/.test(prefix.charAt(0))) {\n          callback();\n          return;\n        }\n        // console.log(pos); // Cursor col is insertion location i.e. last char col + 1\n        this.props.handlePromptAutocomplete(pos.row + 1, pos.column, callback);\n      }\n    };\n  }\n\n  public getBreakpoints() {\n    return this.AceEditor.current!.editor.session.getBreakpoints().filter(x => x != null);\n  }\n\n  public componentDidMount() {\n    if (!this.AceEditor.current) {\n      return;\n    }\n    const editor = this.AceEditor.current!.editor;\n    const session = editor.getSession();\n\n    // TODO: Removal\n    /* disable error threshold incrementer\n\n    const jshintOptions = {\n      // undef: true,\n      // unused: true,\n      esnext: true,\n      moz: true,\n      devel: true,\n      browser: true,\n      node: true,\n      laxcomma: true,\n      laxbreak: true,\n      lastsemic: true,\n      onevar: false,\n      passfail: false,\n      maxerr: 1000,\n      expr: true,\n      multistr: true,\n      globalstrict: true\n    };\n    session.$worker.send('setOptions', [jshintOptions]);\n\n    */\n\n    // NOTE: the two `any`s below are because the Ace editor typedefs are\n    // hopelessly incomplete\n    editor.on('gutterclick' as any, this.handleGutterClick);\n\n    // Change all info annotations to error annotations\n    session.on('changeAnnotation' as any, this.handleAnnotationChange(session));\n\n    // Start autocompletion\n    acequire('ace/ext/language_tools').setCompleters([this.completer]);\n\n    // Has session ID\n    if (this.props.editorSessionId !== '') {\n      this.handleStartCollabEditing(editor);\n    }\n\n    this.handleVariableHighlighting();\n  }\n\n  public componentWillUnmount() {\n    if (this.ShareAce !== null) {\n      // Umounting, closing websocket\n      this.ShareAce.WS.close();\n    }\n    this.ShareAce = null;\n  }\n\n  public componentDidUpdate(prevProps: EditorProps) {\n    const newCursorPosition = this.props.newCursorPosition;\n    if (newCursorPosition && newCursorPosition !== prevProps.newCursorPosition) {\n      this.moveCursor(newCursorPosition);\n    }\n  }\n\n  public getMarkers = () => {\n    const markerProps: IAceEditorProps['markers'] = [];\n    for (const lineNum of this.props.highlightedLines) {\n      markerProps.push({\n        startRow: lineNum[0],\n        startCol: 0,\n        endRow: lineNum[1],\n        endCol: 1,\n        className: 'myMarker',\n        type: 'fullLine'\n      });\n    }\n    return markerProps;\n  };\n\n  // chapter selector used to choose the correct source mode\n  public chapterNo = () => {\n    let chapter = this.props.sourceChapter;\n    let variant = this.props.sourceVariant;\n    let external = this.props.externalLibraryName;\n    if (chapter === undefined) {\n      chapter = 1;\n    }\n    if (variant === undefined) {\n      variant = 'default';\n    }\n    if (external === undefined) {\n      external = 'NONE';\n    }\n\n    HighlightRulesSelector(chapter, variant, external, Documentation.externalLibraries[external]);\n    ModeSelector(chapter, variant, external);\n    return 'source' + chapter.toString() + variant + external;\n  };\n\n  public render() {\n    return (\n      <HotKeys className=\"Editor\" handlers={handlers}>\n        <div className=\"row editor-react-ace\">\n          <AceEditor\n            className=\"react-ace\"\n            commands={[\n              {\n                name: 'evaluate',\n                bindKey: {\n                  win: 'Shift-Enter',\n                  mac: 'Shift-Enter'\n                },\n                exec: this.props.handleEditorEval\n              },\n              {\n                name: 'navigate',\n                bindKey: {\n                  win: 'Ctrl-B',\n                  mac: 'Command-B'\n                },\n                exec: this.handleNavigate\n              },\n              {\n                name: 'refactor',\n                bindKey: {\n                  win: 'Ctrl-M',\n                  mac: 'Command-M'\n                },\n                exec: this.handleRefactor\n              },\n              {\n                name: 'highlightScope',\n                bindKey: {\n                  win: 'Ctrl-Shift-H',\n                  mac: 'Command-Shift-H'\n                },\n                exec: this.handleHighlightScope\n              },\n              {\n                name: 'TypeInferenceDisplay',\n                bindKey: {\n                  win: 'Ctrl-Shift-M',\n                  mac: 'Command-Shift-M'\n                },\n                exec: this.handleTypeInferenceDisplay\n              }\n            ]}\n            editorProps={{\n              $blockScrolling: Infinity\n            }}\n            ref={this.AceEditor}\n            markers={this.getMarkers()}\n            fontSize={17}\n            height=\"100%\"\n            highlightActiveLine={false}\n            mode={this.chapterNo()} // select according to props.sourceChapter\n            onChange={this.onChangeMethod}\n            onCursorChange={this.handleVariableHighlighting}\n            theme=\"source\"\n            value={this.props.editorValue}\n            width=\"100%\"\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              fontFamily: \"'Inconsolata', 'Consolas', monospace\"\n            }}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  // Used in navigating from occurence to navigation\n  private moveCursor = (position: Position) => {\n    this.AceEditor.current!.editor.selection.clearSelection();\n    this.AceEditor.current!.editor.moveCursorToPosition(position);\n    this.AceEditor.current!.editor.renderer.showCursor();\n    this.AceEditor.current!.editor.renderer.scrollCursorIntoView(position, 0.5);\n  };\n\n  private handleNavigate = () => {\n    const chapter = this.props.sourceChapter;\n    const variantString =\n      this.props.sourceVariant === 'default' ? '' : `_${this.props.sourceVariant}`;\n    const pos = this.AceEditor.current!.editor.selection.getCursor();\n    const token = this.AceEditor.current!.editor.session.getTokenAt(pos.row, pos.column);\n    const url = Links.textbook;\n\n    const external =\n      this.props.externalLibraryName === undefined ? 'NONE' : this.props.externalLibraryName;\n    const externalUrl =\n      this.props.externalLibraryName === 'ALL' ? `External%20libraries` : external;\n    const ext = Documentation.externalLibraries[external];\n\n    this.props.handleDeclarationNavigate(this.AceEditor.current!.editor.getCursorPosition());\n\n    const newPos = this.AceEditor.current!.editor.selection.getCursor();\n    if (newPos.row !== pos.row || newPos.column !== pos.column) {\n      return;\n    }\n\n    if (\n      hasDeclaration(this.props.editorValue, createContext(chapter), {\n        line: newPos.row + 1, // getCursorPosition returns 0-indexed row, function here takes in 1-indexed row\n        column: newPos.column\n      })\n    ) {\n      return;\n    }\n\n    if (ext.some((node: { caption: string }) => node.caption === (token && token.value))) {\n      if (\n        token !== null &&\n        (/\\bsupport.function\\b/.test(token.type) || /\\bbuiltinConsts\\b/.test(token.type))\n      ) {\n        window.open(`${url}source/${externalUrl}/global.html#${token.value}`); // opens external library link\n      }\n    } else if (\n      token !== null &&\n      (/\\bsupport.function\\b/.test(token.type) || /\\bbuiltinconsts\\b/.test(token.type))\n    ) {\n      window.open(`${url}source/source_${chapter}${variantString}/global.html#${token.value}`); // opens builtn library link\n    }\n    if (token !== null && /\\bstorage.type\\b/.test(token.type)) {\n      window.open(`${url}source/source_${chapter}.pdf`);\n    }\n  };\n\n  private handleRefactor = () => {\n    const editor = (this.AceEditor.current as any).editor;\n\n    if (!editor) {\n      return;\n    }\n    const code = this.props.editorValue;\n    const chapter = this.props.sourceChapter;\n    const position = editor.getCursorPosition();\n\n    const sourceLocations = getAllOccurrencesInScope(code, createContext(chapter), {\n      line: position.row + 1, // getCursorPosition returns 0-indexed row, function here takes in 1-indexed row\n      column: position.column\n    });\n\n    const selection = editor.getSelection();\n    const ranges = sourceLocations.map(\n      loc => new AceRange(loc.start.line - 1, loc.start.column, loc.end.line - 1, loc.end.column)\n    );\n    ranges.forEach(range => selection.addRange(range));\n  };\n\n  private handleHighlightScope = () => {\n    const editor = this.AceEditor.current!.editor;\n    if (!editor) {\n      return;\n    }\n    const code = this.props.editorValue;\n    const chapter = this.props.sourceChapter;\n    const position = editor.getCursorPosition();\n\n    const ranges = getScope(code, createContext(chapter), {\n      line: position.row + 1,\n      column: position.column\n    });\n\n    if (ranges.length !== 0) {\n      ranges.forEach(range => {\n        // Highlight the scope ranges\n        this.markerIds.push(\n          editor.session.addMarker(\n            new AceRange(\n              range.start.line - 1,\n              range.start.column,\n              range.end.line - 1,\n              range.end.column\n            ),\n            'ace_selection',\n            'text'\n          )\n        );\n      });\n    }\n  };\n\n  private handleVariableHighlighting = () => {\n    // using Ace Editor's way of highlighting as seen here: https://github.com/ajaxorg/ace/blob/master/lib/ace/editor.js#L497\n    // We use async blocks so we don't block the browser during editing\n\n    setTimeout(() => {\n      if (!this.AceEditor || !this.AceEditor.current || !this.AceEditor.current.editor) {\n        return;\n      }\n      const editor = (this.AceEditor.current as any).editor;\n      const session = editor.session;\n      const code = this.props.editorValue;\n      const chapterNumber = this.props.sourceChapter;\n      const position = editor.getCursorPosition();\n      if (!session || !session.bgTokenizer) {\n        return;\n      }\n      this.markerIds.forEach(id => {\n        session.removeMarker(id);\n      });\n      const ranges = getAllOccurrencesInScope(code, createContext(chapterNumber), {\n        line: position.row + 1,\n        column: position.column\n      }).map(\n        loc => new AceRange(loc.start.line - 1, loc.start.column, loc.end.line - 1, loc.end.column)\n      );\n\n      const markerType = 'ace_variable_highlighting';\n      const markerIds = ranges.map(range => {\n        // returns the marker ID for removal later\n        return session.addMarker(range, markerType, 'text');\n      });\n      this.markerIds = markerIds;\n    }, 10);\n  };\n\n  private handleTypeInferenceDisplay = (): void => {\n    const chapter = this.props.sourceChapter;\n    const code = this.props.editorValue;\n    const editor = this.AceEditor.current!.editor;\n    const pos = editor.getCursorPosition();\n    const token = editor.session.getTokenAt(pos.row, pos.column);\n\n    // comment out everyline of the inference string returned by getTypeInformation\n    const commentEveryLine = (str: string) => {\n      const arr = str.split('\\n');\n      return arr\n        .filter(st => st !== '')\n        .map(st => '// ' + st)\n        .join('\\n');\n    };\n\n    let output;\n\n    // display the information\n    if (this.props.handleSendReplInputToOutput) {\n      if (pos && token) {\n        // if the token is a comment, ignore it\n        if (token.type === 'comment') {\n          return;\n        }\n        const str = getTypeInformation(\n          code,\n          createContext(chapter),\n          { line: pos.row + 1, column: pos.column },\n          token.value\n        );\n        output = commentEveryLine(str);\n        if (str.length === 0) {\n          output = '// type information not found';\n        }\n      } else {\n        output = '// invalid token. Please put cursor on an identifier.';\n      }\n      this.props.handleSendReplInputToOutput(output);\n    }\n  };\n\n  private handleGutterClick = (e: any) => {\n    const target = e.domEvent.target;\n    if (\n      target.className.indexOf('ace_gutter-cell') === -1 ||\n      !e.editor.isFocused() ||\n      e.clientX > 35 + target.getBoundingClientRect().left\n    ) {\n      return;\n    }\n\n    const row = e.getDocumentPosition().row;\n    const content = e.editor.session.getLine(row);\n    const breakpoints = e.editor.session.getBreakpoints(row, 0);\n    if (\n      breakpoints[row] === undefined &&\n      content.length !== 0 &&\n      !content.includes('//') &&\n      !content.includes('debugger;')\n    ) {\n      e.editor.session.setBreakpoint(row);\n    } else {\n      e.editor.session.clearBreakpoint(row);\n    }\n    e.stop();\n    this.props.handleEditorUpdateBreakpoints(e.editor.session.$breakpoints);\n  };\n\n  private handleAnnotationChange = (session: any) => () => {\n    const annotations = session.getAnnotations();\n    let count = 0;\n    for (const anno of annotations) {\n      if (anno.type === 'info') {\n        anno.type = 'error';\n        anno.className = 'ace_error';\n        count++;\n      }\n    }\n    if (count !== 0) {\n      session.setAnnotations(annotations);\n    }\n  };\n\n  private handleStartCollabEditing = (editor: any) => {\n    const ShareAce = new sharedbAce(this.props.editorSessionId!, {\n      WsUrl: 'wss://' + Links.shareDBServer + 'ws/',\n      pluginWsUrl: null,\n      namespace: 'codepad'\n    });\n    this.ShareAce = ShareAce;\n    ShareAce.on('ready', () => {\n      ShareAce.add(\n        editor,\n        ['code'],\n        [\n          // TODO: Removal\n          // SharedbAceRWControl,\n          // SharedbAceMultipleCursors\n        ]\n      );\n      if (this.props.sharedbAceIsInviting) {\n        this.props.handleEditorValueChange(this.props.sharedbAceInitValue!);\n        this.props.handleFinishInvite!();\n      }\n    });\n\n    // WebSocket connection status detection logic\n    const WS = ShareAce.WS;\n    const sessionIdNotFound = () => {\n      clearInterval(interval);\n      WS.close();\n    };\n    const cannotReachServer = () => {\n      WS.reconnect();\n    };\n    const checkStatus = () => {\n      if (this.ShareAce === null) {\n        return;\n      }\n      checkSessionIdExists(\n        this.props.editorSessionId,\n        () => {},\n        sessionIdNotFound,\n        cannotReachServer\n      );\n    };\n    // Checks connection status every 5sec\n    const interval = setInterval(checkStatus, 5000);\n\n    WS.addEventListener('open', (event: Event) => {\n      this.props.handleSetWebsocketStatus!(1);\n    });\n    WS.addEventListener('close', (event: Event) => {\n      this.props.handleSetWebsocketStatus!(0);\n    });\n  };\n}\n\n/* Override handler, so does not trigger when focus is in editor */\nconst handlers = {\n  goGreen: () => {}\n};\n\n// TODO: Removal\n// This interface is actually unused but ace poorly documents this feature so\n// we leave this here for reference.\nexport interface IAutocompletionResult {\n  caption: string;\n  value: string;\n  meta?: string;\n  docHTML?: string;\n  score?: number;\n}\n\nexport default Editor;\n","import { Button, Card, Intent } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { IMCQQuestion } from '../assessment/AssessmentTypes';\nimport Markdown from '../Markdown';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\n\nexport type McqChooserProps = {\n  mcq: IMCQQuestion;\n  handleMCQSubmit: (choiceId: number) => void;\n};\n\ntype State = {\n  mcqOption: number | null;\n};\n\nclass McqChooser extends React.PureComponent<McqChooserProps, State> {\n  constructor(props: McqChooserProps) {\n    super(props);\n    this.state = {\n      mcqOption: props.mcq.answer\n    };\n  }\n  public render() {\n    const options = this.props.mcq.choices.map((choice, i) => (\n      <Button\n        key={i}\n        className=\"mcq-option col-xs-12\"\n        active={i === this.state.mcqOption}\n        intent={this.getButtonIntent(i, this.state.mcqOption, this.props.mcq.solution)}\n        onClick={this.onButtonClickFactory(i)}\n        minimal={true}\n      >\n        <Markdown content={choice.content} />\n      </Button>\n    ));\n    return (\n      <div className=\"MCQChooser row\">\n        <Card className=\"mcq-content-parent col-xs-12 middle-xs\">\n          <div className=\"row mcq-options-parent between-xs\">{options}</div>\n        </Card>\n      </div>\n    );\n  }\n\n  /**\n   * A function to generate an onClick function that causes\n   * and mcq submission with a given answer id.\n   *\n   * Post-condition: the local state will be updated to store the\n   * mcq option selected, and a notification will be displayed with\n   * a hint, if the question is ungraded.\n   *\n   * @param i the id of the answer\n   */\n  private onButtonClickFactory = (i: number) => (e: any) => {\n    if (i !== this.state.mcqOption) {\n      this.props.handleMCQSubmit(i);\n      this.setState({\n        mcqOption: i\n      });\n    }\n    const shouldDisplayMessage = this.props.mcq.solution !== null && this.props.mcq.choices[i].hint;\n    if (shouldDisplayMessage) {\n      const hintElement = (\n        <Markdown className=\"markdown-notification\" content={this.props.mcq.choices[i].hint!} />\n      );\n      if (i === this.props.mcq.solution) {\n        showSuccessMessage(hintElement, 4000);\n      } else {\n        showWarningMessage(hintElement, 4000);\n      }\n    }\n  };\n\n  /**\n   * Handles the logic for what intent an MCQ option should show up as.\n   * This is dependent on the presence of an actual solution (for ungraded assessments),\n   * the current selection, and whether the selected option is active.\n   *\n   * @param currentOption the current button key, corresponding to a choice ID\n   * @param chosenOption the mcq option that is chosen in the state, i.e what should show up as \"selected\"\n   * @param solution the solution to the mcq, if any\n   */\n  private getButtonIntent = (\n    currentOption: number,\n    chosenOption: number | null,\n    solution: number | null\n  ): Intent => {\n    const active = currentOption === chosenOption;\n    const correctOptionSelected = active && solution !== null && currentOption === solution;\n    if (solution === null) {\n      return Intent.NONE;\n    } else if (active && correctOptionSelected) {\n      return Intent.SUCCESS;\n    } else if (active && !correctOptionSelected) {\n      return Intent.DANGER;\n    } else {\n      return Intent.NONE;\n    }\n  };\n}\n\nexport default McqChooser;\n","import * as React from 'react';\nimport AceEditor from 'react-ace';\n// source mode and chapter imported in Editor.tsx\n\nexport type ReplInputProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleReplValueChange: (newCode: string) => void;\n  handleReplEval: () => void;\n};\n\ntype StateProps = {\n  replValue: string;\n  sourceChapter: number;\n};\n\nclass ReplInput extends React.PureComponent<ReplInputProps, {}> {\n  private replInputBottom?: HTMLDivElement;\n  private execBrowseHistoryDown: () => void;\n  private execBrowseHistoryUp: () => void;\n  private execEvaluate: () => void;\n\n  constructor(props: ReplInputProps) {\n    super(props);\n    this.execBrowseHistoryDown = props.handleBrowseHistoryDown;\n    this.execBrowseHistoryUp = props.handleBrowseHistoryUp;\n    this.execEvaluate = () => {\n      if (!this.replInputBottom) {\n        return;\n      }\n      this.replInputBottom.scrollIntoView();\n      this.props.handleReplEval();\n    };\n  }\n\n  public componentDidUpdate() {\n    if (!this.replInputBottom) {\n      return;\n    }\n    if (this.replInputBottom.clientWidth >= window.innerWidth - 50) {\n      /* There is a bug where\n       *   if the workspace has been resized via re-resizable such that the\n       *   has disappeared off the screen, width 63\n       * then\n       *   calling scrollIntoView would cause the Repl to suddenly take up 100%\n       *   of the screen width. This pushes the editor off-screen so that the\n       *   user can no longer resize the workspace at all\n       * Fix: the if condition is true when the Repl has dissapeared off-screen.\n       *   (-15 to account for the scrollbar */\n    } else {\n      this.replInputBottom.scrollIntoView();\n    }\n  }\n\n  public render() {\n    return (\n      <>\n        <AceEditor\n          className=\"repl-react-ace react-ace\"\n          mode={`source${this.props.sourceChapter || 1}defaultNONE`}\n          theme=\"source\"\n          height=\"1px\"\n          width=\"100%\"\n          value={this.props.replValue}\n          onChange={this.props.handleReplValueChange}\n          commands={[\n            {\n              name: 'browseHistoryDown',\n              bindKey: {\n                win: 'Down',\n                mac: 'Down'\n              },\n              exec: this.execBrowseHistoryDown\n            },\n            {\n              name: 'browseHistoryUp',\n              bindKey: {\n                win: 'Up',\n                mac: 'Up'\n              },\n              exec: this.execBrowseHistoryUp\n            },\n            {\n              name: 'evaluate',\n              bindKey: {\n                win: 'Shift-Enter',\n                mac: 'Shift-Enter'\n              },\n              exec: this.execEvaluate\n            }\n          ]}\n          minLines={1}\n          maxLines={20}\n          fontSize={17}\n          highlightActiveLine={false}\n          showGutter={false}\n          showPrintMargin={false}\n          setOptions={{\n            fontFamily: \"'Inconsolata', 'Consolas', monospace\"\n          }}\n        />\n        <div className=\"replInputBottom\" ref={e => (this.replInputBottom = e!)} />\n      </>\n    );\n  }\n}\n\nexport default ReplInput;\n","import { Card, Classes, Pre } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport { parseError } from 'js-slang';\nimport { Variant } from 'js-slang/dist/types';\nimport { stringify } from 'js-slang/dist/utils/stringify';\nimport * as React from 'react';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport SideContentCanvasOutput from '../sideContent/SideContentCanvasOutput';\nimport ReplInput, { ReplInputProps } from './ReplInput';\nimport { OutputProps } from './ReplTypes';\n\nexport type ReplProps = DispatchProps & StateProps;\n\ntype StateProps = {\n  output: InterpreterOutput[];\n  replValue: string;\n  hidden?: boolean;\n  usingSubst?: boolean;\n  sourceChapter?: number;\n  sourceVariant?: Variant;\n};\n\ntype DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleReplEval: () => void;\n  handleReplValueChange: (newCode: string) => void;\n};\n\nclass Repl extends React.PureComponent<ReplProps, {}> {\n  public constructor(props: ReplProps) {\n    super(props);\n  }\n\n  public render() {\n    const cards = this.props.output.map((slice, index) => (\n      <Output output={slice} key={index} usingSubst={this.props.usingSubst || false} />\n    ));\n    const inputProps: ReplInputProps = this.props as ReplInputProps;\n    return (\n      <div className=\"Repl\" style={{ display: this.props.hidden ? 'none' : undefined }}>\n        <div className=\"repl-output-parent\">\n          {cards}\n          <HotKeys\n            className={classNames('repl-input-parent', 'row', Classes.CARD, Classes.ELEVATION_0)}\n            handlers={handlers}\n          >\n            {this.props.sourceVariant !== 'concurrent' ? <ReplInput {...inputProps} /> : null}\n          </HotKeys>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Output: React.SFC<OutputProps> = (props: OutputProps) => {\n  switch (props.output.type) {\n    case 'code':\n      return (\n        <Card>\n          <Pre className=\"codeOutput\">{props.output.value}</Pre>\n        </Card>\n      );\n    case 'running':\n      return (\n        <Card>\n          <Pre className=\"logOutput\">{props.output.consoleLogs.join('\\n')}</Pre>\n        </Card>\n      );\n    case 'result':\n      // We check if we are using Stepper, so we can process the REPL results properly\n      if (props.usingSubst && props.output.value instanceof Array) {\n        return (\n          <Card>\n            <Pre className=\"logOutput\">Check out the substituter tab!</Pre>\n          </Card>\n        );\n      } else if (props.output.consoleLogs.length === 0) {\n        return (\n          <Card>\n            <Pre className=\"resultOutput\">{renderResult(props.output.value)}</Pre>\n          </Card>\n        );\n      } else {\n        return (\n          <Card>\n            <Pre className=\"logOutput\">{props.output.consoleLogs.join('\\n')}</Pre>\n            <Pre className=\"resultOutput\">{renderResult(props.output.value)}</Pre>\n          </Card>\n        );\n      }\n    case 'errors':\n      if (props.output.consoleLogs.length === 0) {\n        return (\n          <Card>\n            <Pre className=\"errorOutput\">{parseError(props.output.errors)}</Pre>\n          </Card>\n        );\n      } else {\n        return (\n          <Card>\n            <Pre className=\"logOutput\">{props.output.consoleLogs.join('\\n')}</Pre>\n            <br />\n            <Pre className=\"errorOutput\">{parseError(props.output.errors)}</Pre>\n          </Card>\n        );\n      }\n    default:\n      return <Card>''</Card>;\n  }\n};\n\nconst renderResult = (value: any) => {\n  /** A class which is the output of the show() function */\n  const ShapeDrawn = (window as any).ShapeDrawn;\n  if (typeof ShapeDrawn !== 'undefined' && value instanceof ShapeDrawn) {\n    return <SideContentCanvasOutput canvas={value.$canvas} />;\n  } else {\n    return stringify(value);\n  }\n};\n\n/* Override handler, so does not trigger when focus is in editor */\nconst handlers = {\n  goGreen: () => {}\n};\n\nexport default Repl;\n","import { DebuggerContext, WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { SideContentTab } from './SideContentTypes';\n\nconst potentialTabs: SideContentTab[] = [];\n\nconst currentlyActiveTabsLabel: Map<WorkspaceLocation, string[]> = new Map<\n  WorkspaceLocation,\n  string[]\n>();\n\nexport const getDynamicTabs = (debuggerContext: DebuggerContext): SideContentTab[] => {\n  const spawnedTabs = potentialTabs.filter(tab => tab.toSpawn(debuggerContext));\n\n  if (debuggerContext.workspaceLocation) {\n    currentlyActiveTabsLabel.set(\n      debuggerContext.workspaceLocation,\n      spawnedTabs.map(tab => tab.label)\n    );\n  }\n\n  return spawnedTabs;\n};\n\nexport const getCurrentlyActiveTabs = (\n  workspaceLocation?: WorkspaceLocation\n): string[] | undefined => {\n  if (workspaceLocation) {\n    return currentlyActiveTabsLabel.get(workspaceLocation);\n  }\n  return undefined;\n};\n\nexport const isCurrentlyActive = (\n  label: string,\n  workspaceLocation?: WorkspaceLocation\n): boolean => {\n  const activeTabs = getCurrentlyActiveTabs(workspaceLocation);\n  return activeTabs\n    ? activeTabs.findIndex((activeTabLabel: string) => activeTabLabel === label) !== -1\n    : false;\n};\n\nexport const isEmptyDebuggerContext = (debuggerContext: DebuggerContext): boolean => {\n  return Object.keys(debuggerContext).length === 0;\n};\n","import { Card, Icon, Tab, TabId, Tabs, Tooltip } from '@blueprintjs/core';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { OverallState } from '../application/ApplicationTypes';\nimport { DebuggerContext, WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { getDynamicTabs } from './SideContentHelper';\nimport { SideContentTab, SideContentType } from './SideContentTypes';\n\n/**\n * @property animate Set this to false to disable the movement\n * of the selected tab indicator. Default value: true.\n *\n * @property defaultSelectedTabId The id of a SideContentTab to be\n *  selected initially when the SideContent component is mounted.\n *\n * @property handleActiveTabChange A dispatch bound to the\n * UPDATE_ACTIVE_TAB action creator; updates the Redux store with\n * the id of the active side content tab in the current workspace.\n *\n * @property onChange A function that is called whenever the\n * active tab is changed by the user.\n *\n * @property tabs An array of SideContentTabs.\n *  The tabs will be rendered in order of the array.\n *  If this array is empty, no tabs will be rendered.\n *\n * @property renderActiveTabPanelOnly Set this property to\n * true to enable unmounting of tab panels whenever tabs are\n * switched. If it is left undefined, the value will default\n * to false, and the tab panels will all be loaded with the\n * mounting of the SideContent component. Switching tabs\n * will merely hide them from view.\n */\nexport type SideContentProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleActiveTabChange: (activeTab: SideContentType) => void;\n  onChange?: (\n    newTabId: SideContentType,\n    prevTabId: SideContentType,\n    event: React.MouseEvent<HTMLElement>\n  ) => void;\n};\n\ntype StateProps = {\n  animate?: boolean;\n  selectedTabId?: SideContentType;\n  defaultSelectedTabId?: SideContentType;\n  renderActiveTabPanelOnly?: boolean;\n  tabs: SideContentTab[];\n  workspaceLocation?: WorkspaceLocation;\n};\n\nconst SideContent = (props: SideContentProps) => {\n  const { tabs, handleActiveTabChange, defaultSelectedTabId } = props;\n  const [dynamicTabs, setDynamicTabs] = React.useState(tabs);\n  const workspaces = useSelector((state: OverallState) => state.workspaces);\n\n  // Fetch debuggerContext from store\n  let debuggerContext: DebuggerContext;\n  if (props.workspaceLocation) {\n    debuggerContext = workspaces[props.workspaceLocation].debuggerContext;\n  } else {\n    debuggerContext = {} as DebuggerContext;\n  }\n\n  React.useEffect(() => {\n    const allActiveTabs = tabs.concat(getDynamicTabs(debuggerContext));\n    setDynamicTabs(allActiveTabs);\n  }, [tabs, debuggerContext]);\n\n  /**\n   * Remove the 'side-content-tab-alert' class that causes tabs flash.\n   * To be run when tabs are changed.\n   * Currently this style is only used for the \"Inspector\" and \"Env Visualizer\" tabs.\n   */\n  const resetAlert = (prevTabId: TabId) => {\n    const iconId = generateIconId(prevTabId);\n    const icon = document.getElementById(iconId);\n\n    // The new selected tab will still have the \"side-content-tab-alert\" class, but the CSS hides it\n    if (icon) {\n      icon.classList.remove('side-content-tab-alert');\n    }\n  };\n\n  /**\n   * Generate an icon id given a TabId.\n   * Used to set and remove the 'side-content-tab-alert' style to the tabs.\n   */\n  const generateIconId = (tabId: TabId) => {\n    return `${tabId}-icon`;\n  };\n\n  const renderTab = (tab: SideContentTab, workspaceLocation?: WorkspaceLocation) => {\n    const iconSize = 20;\n    const tabId = tab.id === undefined ? tab.label : tab.id;\n    const tabTitle: JSX.Element = (\n      <Tooltip content={tab.label}>\n        <div className=\"side-content-tooltip\" id={generateIconId(tabId)}>\n          <Icon icon={tab.iconName} iconSize={iconSize} />\n        </div>\n      </Tooltip>\n    );\n\n    const tabBody: JSX.Element = workspaceLocation\n      ? {\n          ...tab.body,\n          props: {\n            ...tab.body.props,\n            workspaceLocation\n          }\n        }\n      : tab.body;\n    const tabPanel: JSX.Element = <div className=\"side-content-text\">{tabBody}</div>;\n\n    return (\n      <Tab\n        key={tabId}\n        id={tabId}\n        title={tabTitle}\n        panel={tabPanel}\n        disabled={tab.disabled}\n        className=\"side-content-tab\"\n      />\n    );\n  };\n\n  const renderedTabs = dynamicTabs.map(tab => renderTab(tab, props.workspaceLocation));\n\n  const changeTabsCallback = (\n    newTabId: SideContentType,\n    prevTabId: SideContentType,\n    event: React.MouseEvent<HTMLElement>\n  ): void => {\n    props.handleActiveTabChange(newTabId);\n    if (props.onChange === undefined) {\n      resetAlert(prevTabId);\n    } else {\n      props.onChange(newTabId, prevTabId, event);\n      resetAlert(prevTabId);\n    }\n  };\n\n  React.useEffect(() => {\n    // Set initial sideContentActiveTab for this workspace\n    handleActiveTabChange(defaultSelectedTabId ? defaultSelectedTabId : tabs[0].id!);\n  }, [defaultSelectedTabId, handleActiveTabChange, tabs]);\n\n  return (\n    <div className=\"side-content\">\n      <Card>\n        <div className=\"side-content-tabs\">\n          <Tabs\n            id=\"side-content-tabs\"\n            onChange={changeTabsCallback}\n            defaultSelectedTabId={props.defaultSelectedTabId}\n            renderActiveTabPanelOnly={props.renderActiveTabPanelOnly}\n            selectedTabId={props.selectedTabId}\n          >\n            {renderedTabs}\n          </Tabs>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContent;\n","import { Resizable, ResizableProps, ResizeCallback } from 're-resizable';\nimport * as React from 'react';\nimport { Prompt } from 'react-router';\n\nimport ControlBar, { ControlBarProps } from '../controlBar/ControlBar';\nimport Editor, { EditorProps } from '../editor/Editor';\nimport McqChooser, { McqChooserProps } from '../mcqChooser/McqChooser';\nimport Repl, { ReplProps } from '../repl/Repl';\nimport SideContent, { SideContentProps } from '../sideContent/SideContent';\n\nexport type WorkspaceProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleSideContentHeightChange: (height: number) => void;\n};\n\ntype StateProps = {\n  // Either editorProps or mcqProps must be provided\n  controlBarProps: ControlBarProps;\n  customEditor?: JSX.Element;\n  editorProps?: EditorProps;\n  editorHeight?: string | number;\n  editorWidth: string;\n  hasUnsavedChanges?: boolean;\n  mcqProps?: McqChooserProps;\n  replProps: ReplProps;\n  sideContentHeight?: number;\n  sideContentProps: SideContentProps;\n  sideContentIsResizeable?: boolean;\n};\n\nclass Workspace extends React.Component<WorkspaceProps, {}> {\n  private editorDividerDiv?: HTMLDivElement = undefined;\n  private leftParentResizable?: Resizable = undefined;\n  private maxDividerHeight?: number = undefined;\n  private sideDividerDiv?: HTMLDivElement = undefined;\n  private editorRef: React.RefObject<Editor>;\n\n  public constructor(props: WorkspaceProps) {\n    super(props);\n    this.editorRef = React.createRef();\n  }\n\n  public componentDidMount() {\n    this.maxDividerHeight = this.sideDividerDiv!.clientHeight;\n  }\n\n  /**\n   * side-content-divider gives the side content a bottom margin. I use a div\n   * element instead of CSS so that when the user resizes the side-content all\n   * the way up in order to hide it, there won't be a padding there to stop the\n   * REPL from being flush with the top of the editor\n   */\n  public render() {\n    const sideContent = <SideContent {...this.props.sideContentProps} />;\n    const resizableSideContent = (\n      <Resizable {...this.sideContentResizableProps()}>\n        {sideContent}\n        <div className=\"side-content-divider\" ref={e => (this.sideDividerDiv = e!)} />\n      </Resizable>\n    );\n\n    return (\n      <div className=\"workspace\">\n        {this.props.hasUnsavedChanges ? (\n          <Prompt\n            message={'You have changes that may not be saved. Are you sure you want to leave?'}\n          />\n        ) : null}\n        <ControlBar {...this.controlBarProps()} />\n        <div className=\"row workspace-parent\">\n          <div className=\"editor-divider\" ref={e => (this.editorDividerDiv = e!)} />\n          <Resizable {...this.editorResizableProps()}>\n            {this.createWorkspaceInput(this.props)}\n          </Resizable>\n          <div className=\"right-parent\">\n            {this.props.sideContentIsResizeable === undefined || this.props.sideContentIsResizeable\n              ? resizableSideContent\n              : sideContent}\n            <Repl {...this.props.replProps} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private controlBarProps() {\n    return { ...this.props.controlBarProps };\n  }\n\n  private editorResizableProps() {\n    const onResizeStop: ResizeCallback = (_a, _b, _c, diff) =>\n      this.props.handleEditorWidthChange((diff.width * 100) / window.innerWidth);\n    const ref = (e: Resizable) => (this.leftParentResizable = e as Resizable);\n    return {\n      className: 'resize-editor left-parent',\n      enable: rightResizeOnly,\n      minWidth: 0,\n      onResize: this.toggleEditorDividerDisplay,\n      onResizeStop,\n      ref,\n      size: { width: this.props.editorWidth, height: '100%' },\n      as: undefined as any // re-resizable bug - wrong typedef\n    } as ResizableProps;\n  }\n\n  private sideContentResizableProps() {\n    const onResizeStop: ResizeCallback = (_a, _b, ref, _c) =>\n      this.props.handleSideContentHeightChange(ref.clientHeight);\n    return {\n      bounds: 'parent',\n      className: 'resize-side-content',\n      enable: bottomResizeOnly,\n      onResize: this.toggleDividerDisplay,\n      onResizeStop,\n      size:\n        /* It will always be undefined...\n          Default workspace state does not have sideContentHeight...\n        */\n        this.props.sideContentHeight === undefined\n          ? undefined\n          : {\n              height: this.props.sideContentHeight,\n              width: '100%'\n            }\n    } as ResizableProps;\n  }\n\n  /**\n   * Snaps the left-parent resizable to 100% or 0% when percentage width goes\n   * above 95% or below 5% respectively. Also changes the editor divider width\n   * in the case of < 5%.\n   */\n  private toggleEditorDividerDisplay: ResizeCallback = (_a, _b, ref) => {\n    const leftThreshold = 2;\n    const rightThreshold = 95;\n    const editorWidthPercentage = ((ref as HTMLDivElement).clientWidth / window.innerWidth) * 100;\n    // update resizable size\n    if (editorWidthPercentage > rightThreshold) {\n      this.leftParentResizable!.updateSize({ width: '100%', height: '100%' });\n    } else if (editorWidthPercentage < leftThreshold) {\n      this.leftParentResizable!.updateSize({ width: '0%', height: '100%' });\n    }\n    // Update divider margin\n    if (editorWidthPercentage < leftThreshold) {\n      this.editorDividerDiv!.style.marginRight = '0.6rem';\n    } else {\n      this.editorDividerDiv!.style.marginRight = '0';\n    }\n  };\n\n  /**\n   * Hides the side-content-divider div when side-content is resized downwards\n   * so that it's bottom border snaps flush with editor's bottom border\n   */\n  private toggleDividerDisplay: ResizeCallback = (_a, _b, ref) => {\n    /* This is actually broken... */\n    this.maxDividerHeight =\n      this.sideDividerDiv!.clientHeight > this.maxDividerHeight!\n        ? this.sideDividerDiv!.clientHeight\n        : this.maxDividerHeight;\n    const resizableHeight = (ref as HTMLDivElement).clientHeight;\n    const rightParentHeight = (ref.parentNode as HTMLDivElement).clientHeight;\n    if (resizableHeight + this.maxDividerHeight! + 2 > rightParentHeight) {\n      this.sideDividerDiv!.style.display = 'none';\n    } else {\n      this.sideDividerDiv!.style.display = 'initial';\n    }\n  };\n\n  /**\n   * Pre-condition: `this.props.editorProps`\n   * XOR `this.props.mcq` are defined.\n   */\n  private createWorkspaceInput = (props: WorkspaceProps) => {\n    if (props.customEditor) {\n      return props.customEditor;\n    } else if (props.editorProps) {\n      return (\n        <Editor\n          {...props.editorProps}\n          key={props.editorProps.editorSessionId}\n          ref={this.editorRef}\n        />\n      );\n    } else {\n      return <McqChooser {...props.mcqProps!} />;\n    }\n  };\n}\n\nconst rightResizeOnly = {\n  top: false,\n  right: true,\n  bottom: false,\n  left: false,\n  topRight: false,\n  bottomRight: false,\n  bottomLeft: false,\n  topLeft: false\n};\n\nconst bottomResizeOnly = {\n  top: false,\n  right: false,\n  bottom: true,\n  left: false,\n  topRight: false,\n  bottomRight: false,\n  bottomLeft: false,\n  topLeft: false\n};\n\nexport default Workspace;\n","import { Divider, HTMLTable, Text } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport Markdown from '../Markdown';\nimport { getPrettyDate } from '../utils/DateHelper';\n\ntype AssessmentWorkspaceGradingResultProps = StateProps;\n\ntype StateProps = {\n  graderName: string;\n  gradedAt: string;\n  xp: number;\n  grade: number;\n  maxGrade: number;\n  maxXp: number;\n  comments?: string;\n};\n\nclass AssessmentWorkspaceGradingResult extends React.Component<\n  AssessmentWorkspaceGradingResultProps,\n  {}\n> {\n  public render() {\n    return (\n      <div className=\"GradingResult\">\n        <div className=\"grading-result-table\">\n          <HTMLTable>\n            <tbody>\n              <tr>\n                <th>Grade:</th>\n                <td>\n                  <Text>\n                    {this.props.grade} / {this.props.maxGrade}\n                  </Text>\n                </td>\n              </tr>\n\n              <tr>\n                <th>XP:</th>\n                <td>\n                  <Text>\n                    {this.props.xp} / {this.props.maxXp}\n                  </Text>\n                </td>\n              </tr>\n\n              <tr>\n                <th>Comments:</th>\n                <td>{!this.props.comments && <Text>None</Text>}</td>\n              </tr>\n            </tbody>\n          </HTMLTable>\n\n          {this.props.comments && (\n            <HTMLTable>\n              <tbody>\n                <tr>\n                  <td>\n                    <Divider />\n                    <Markdown\n                      content={this.props.comments}\n                      simplifiedAutoLink={true}\n                      strikethrough={true}\n                      tasklists={true}\n                      openLinksInNewWindow={true}\n                    />\n                    <Divider />\n                  </td>\n                </tr>\n              </tbody>\n            </HTMLTable>\n          )}\n\n          <br />\n\n          <div className=\"grading-result-info\">\n            <Text>\n              Graded by <b>{this.props.graderName}</b> on {getPrettyDate(this.props.gradedAt)}\n            </Text>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssessmentWorkspaceGradingResult;\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  Dialog,\n  Intent,\n  NonIdealState,\n  Spinner\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport { Variant } from 'js-slang/dist/types';\nimport { stringify } from 'js-slang/dist/utils/stringify';\nimport * as React from 'react';\n\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport {\n  Assessment,\n  AssessmentCategories,\n  AutogradingResult,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  Question,\n  QuestionTypes,\n  Testcase\n} from '../assessment/AssessmentTypes';\nimport { ControlBarProps } from '../controlBar/ControlBar';\nimport { ControlBarChapterSelect } from '../controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../controlBar/ControlBarQuestionViewButton';\nimport { ControlBarResetButton } from '../controlBar/ControlBarResetButton';\nimport { ControlBarRunButton } from '../controlBar/ControlBarRunButton';\nimport { ControlButtonSaveButton } from '../controlBar/ControlBarSaveButton';\nimport controlButton from '../ControlButton';\nimport { Position } from '../editor/EditorTypes';\nimport Markdown from '../Markdown';\nimport { SideContentProps } from '../sideContent/SideContent';\nimport SideContentAutograder from '../sideContent/SideContentAutograder';\nimport SideContentToneMatrix from '../sideContent/SideContentToneMatrix';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport Constants from '../utils/Constants';\nimport { beforeNow } from '../utils/DateHelper';\nimport { history } from '../utils/HistoryHelper';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\nimport { assessmentCategoryLink } from '../utils/ParamParseHelper';\nimport Workspace, { WorkspaceProps } from '../workspace/Workspace';\nimport { WorkspaceState } from '../workspace/WorkspaceTypes';\nimport AssessmentWorkspaceGradingResult from './AssessmentWorkspaceGradingResult';\n\nexport type AssessmentWorkspaceProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleActiveTabChange: (activeTab: SideContentType) => void;\n  handleAssessmentFetch: (assessmentId: number) => void;\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChapterSelect: (chapter: any, changeEvent: any) => void;\n  handleClearContext: (library: Library) => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleInterruptEval: () => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleResetWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleSave: (id: number, answer: number | string) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  handleUpdateCurrentAssessmentId: (assessmentId: number, questionId: number) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\nexport type OwnProps = {\n  assessmentId: number;\n  questionId: number;\n  notAttempted: boolean;\n  closeDate: string;\n};\n\nexport type StateProps = {\n  assessment?: Assessment;\n  autogradingResults: AutogradingResult[];\n  editorPrepend: string;\n  editorValue: string | null;\n  editorPostpend: string;\n  editorTestcases: Testcase[];\n  editorHeight?: number;\n  editorWidth: string;\n  breakpoints: string[];\n  highlightedLines: number[][];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  newCursorPosition?: Position;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  storedAssessmentId?: number;\n  storedQuestionId?: number;\n};\n\nclass AssessmentWorkspace extends React.Component<\n  AssessmentWorkspaceProps,\n  { showOverlay: boolean; showResetTemplateOverlay: boolean }\n> {\n  public constructor(props: AssessmentWorkspaceProps) {\n    super(props);\n    this.state = {\n      showOverlay: false,\n      showResetTemplateOverlay: false\n    };\n    this.props.handleEditorValueChange('');\n  }\n\n  /**\n   * After mounting (either an older copy of the assessment\n   * or a loading screen), try to fetch a newer assessment,\n   * and show the briefing.\n   */\n  public componentDidMount() {\n    this.props.handleAssessmentFetch(this.props.assessmentId);\n    if (this.props.questionId === 0 && this.props.notAttempted) {\n      this.setState({ showOverlay: true });\n    }\n    if (!this.props.assessment) {\n      return;\n    }\n\n    let questionId = this.props.questionId;\n    if (this.props.questionId >= this.props.assessment.questions.length) {\n      questionId = this.props.assessment.questions.length - 1;\n    }\n\n    const question: Question = this.props.assessment.questions[questionId];\n\n    let answer = '';\n    if (question.type === QuestionTypes.programming) {\n      if (question.answer) {\n        answer = (question as IProgrammingQuestion).answer as string;\n      } else {\n        answer = (question as IProgrammingQuestion).solutionTemplate;\n      }\n    }\n\n    this.props.handleEditorValueChange(answer);\n  }\n\n  /**\n   * Once there is an update (due to the assessment being fetched), check\n   * if a workspace reset is needed.\n   */\n  public componentDidUpdate() {\n    this.checkWorkspaceReset(this.props);\n  }\n\n  public render() {\n    if (this.props.assessment === undefined || this.props.assessment.questions.length === 0) {\n      return (\n        <NonIdealState\n          className={classNames('WorkspaceParent', Classes.DARK)}\n          description=\"Getting mission ready...\"\n          icon={<Spinner size={Spinner.SIZE_LARGE} />}\n        />\n      );\n    }\n\n    const overlay = (\n      <Dialog className=\"assessment-briefing\" isOpen={this.state.showOverlay}>\n        <Card>\n          <Markdown content={this.props.assessment.longSummary} />\n          <Button\n            className=\"assessment-briefing-button\"\n            // tslint:disable-next-line jsx-no-lambda\n            onClick={() => this.setState({ showOverlay: false })}\n            text=\"Continue\"\n          />\n        </Card>\n      </Dialog>\n    );\n\n    const closeOverlay = () => this.setState({ showResetTemplateOverlay: false });\n    const resetTemplateOverlay = (\n      <Dialog\n        className=\"assessment-reset\"\n        icon={IconNames.ERROR}\n        isCloseButtonShown={true}\n        isOpen={this.state.showResetTemplateOverlay}\n        onClose={closeOverlay}\n        title=\"Confirmation: Reset editor?\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <Markdown content=\"Are you sure you want to reset the template?\" />\n          <Markdown content=\"*Note this will not affect the saved copy of your program, unless you save over it.*\" />\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <ButtonGroup>\n            {controlButton('Cancel', null, closeOverlay, {\n              minimal: false\n            })}\n            {controlButton(\n              'Confirm',\n              null,\n              () => {\n                closeOverlay();\n                this.props.handleEditorValueChange(\n                  (this.props.assessment!.questions[questionId] as IProgrammingQuestion)\n                    .solutionTemplate\n                );\n                this.props.handleUpdateHasUnsavedChanges(true);\n              },\n              { minimal: false, intent: Intent.DANGER }\n            )}\n          </ButtonGroup>\n        </div>\n      </Dialog>\n    );\n\n    /* If questionId is out of bounds, set it to the max. */\n    const questionId =\n      this.props.questionId >= this.props.assessment.questions.length\n        ? this.props.assessment.questions.length - 1\n        : this.props.questionId;\n    const question: Question = this.props.assessment.questions[questionId];\n    const workspaceProps: WorkspaceProps = {\n      controlBarProps: this.controlBarProps(questionId),\n      editorProps:\n        question.type === QuestionTypes.programming\n          ? {\n              editorSessionId: '',\n              editorValue: this.props.editorValue!,\n              handleDeclarationNavigate: this.props.handleDeclarationNavigate,\n              handleEditorEval: this.props.handleEditorEval,\n              handleEditorValueChange: this.props.handleEditorValueChange,\n              handleUpdateHasUnsavedChanges: this.props.handleUpdateHasUnsavedChanges,\n              breakpoints: this.props.breakpoints,\n              highlightedLines: this.props.highlightedLines,\n              newCursorPosition: this.props.newCursorPosition,\n              handleEditorUpdateBreakpoints: this.props.handleEditorUpdateBreakpoints,\n              handlePromptAutocomplete: this.props.handlePromptAutocomplete,\n              isEditorAutorun: false\n            }\n          : undefined,\n      editorHeight: this.props.editorHeight,\n      editorWidth: this.props.editorWidth,\n      handleEditorHeightChange: this.props.handleEditorHeightChange,\n      handleEditorWidthChange: this.props.handleEditorWidthChange,\n      handleSideContentHeightChange: this.props.handleSideContentHeightChange,\n      hasUnsavedChanges: this.props.hasUnsavedChanges,\n      mcqProps: {\n        mcq: question as IMCQQuestion,\n        handleMCQSubmit: (option: number) =>\n          this.props.handleSave(this.props.assessment!.questions[questionId].id, option)\n      },\n      sideContentHeight: this.props.sideContentHeight,\n      sideContentProps: this.sideContentProps(this.props, questionId),\n      replProps: {\n        handleBrowseHistoryDown: this.props.handleBrowseHistoryDown,\n        handleBrowseHistoryUp: this.props.handleBrowseHistoryUp,\n        handleReplEval: this.props.handleReplEval,\n        handleReplValueChange: this.props.handleReplValueChange,\n        output: this.props.output,\n        replValue: this.props.replValue\n      }\n    };\n    return (\n      <div className={classNames('WorkspaceParent', Classes.DARK)}>\n        {overlay}\n        {resetTemplateOverlay}\n        <Workspace {...workspaceProps} />\n      </div>\n    );\n  }\n\n  /**\n   * Checks if there is a need to reset the workspace, then executes\n   * a dispatch (in the props) if needed.\n   */\n  private checkWorkspaceReset(props: AssessmentWorkspaceProps) {\n    /* Don't reset workspace if assessment not fetched yet. */\n    if (this.props.assessment === undefined) {\n      return;\n    }\n\n    /* Reset assessment if it has changed.*/\n    const assessmentId = this.props.assessmentId;\n    const questionId = this.props.questionId;\n\n    if (\n      this.props.storedAssessmentId === assessmentId &&\n      this.props.storedQuestionId === questionId\n    ) {\n      return;\n    }\n\n    const question = this.props.assessment.questions[questionId];\n\n    let autogradingResults: AutogradingResult[] = [];\n    let editorValue: string = '';\n    let editorPrepend: string = '';\n    let editorPostpend: string = '';\n    let editorTestcases: Testcase[] = [];\n\n    if (question.type === QuestionTypes.programming) {\n      const questionData = question as IProgrammingQuestion;\n      autogradingResults = questionData.autogradingResults;\n      editorPrepend = questionData.prepend;\n      editorPostpend = questionData.postpend;\n      editorTestcases = questionData.testcases;\n\n      editorValue = questionData.answer as string;\n      if (!editorValue) {\n        editorValue = questionData.solutionTemplate!;\n      }\n    }\n\n    this.props.handleEditorUpdateBreakpoints([]);\n    this.props.handleUpdateCurrentAssessmentId(assessmentId, questionId);\n    this.props.handleResetWorkspace({\n      autogradingResults,\n      editorPrepend,\n      editorValue,\n      editorPostpend,\n      editorTestcases\n    });\n    this.props.handleClearContext(question.library);\n    this.props.handleUpdateHasUnsavedChanges(false);\n    if (editorValue) {\n      this.props.handleEditorValueChange(editorValue);\n    }\n  }\n\n  /** Pre-condition: IAssessment has been loaded */\n  private sideContentProps: (p: AssessmentWorkspaceProps, q: number) => SideContentProps = (\n    props: AssessmentWorkspaceProps,\n    questionId: number\n  ) => {\n    const tabs: SideContentTab[] = [\n      {\n        label: `Task ${questionId + 1}`,\n        iconName: IconNames.NINJA,\n        body: <Markdown content={props.assessment!.questions[questionId].content} />,\n        id: SideContentType.questionOverview,\n        toSpawn: () => true\n      },\n      {\n        label: `${props.assessment!.category} Briefing`,\n        iconName: IconNames.BRIEFCASE,\n        body: <Markdown content={props.assessment!.longSummary} />,\n        id: SideContentType.briefing,\n        toSpawn: () => true\n      },\n      {\n        label: `${props.assessment!.category} Autograder`,\n        iconName: IconNames.AIRPLANE,\n        body: (\n          <SideContentAutograder\n            testcases={props.editorTestcases}\n            autogradingResults={props.autogradingResults}\n            handleTestcaseEval={this.props.handleTestcaseEval}\n          />\n        ),\n        id: SideContentType.autograder,\n        toSpawn: () => true\n      }\n    ];\n    const isGraded = props.assessment!.questions[questionId].grader !== undefined;\n    if (isGraded) {\n      tabs.push({\n        label: `Report Card`,\n        iconName: IconNames.TICK,\n        body: (\n          <AssessmentWorkspaceGradingResult\n            graderName={props.assessment!.questions[questionId].grader!.name}\n            gradedAt={props.assessment!.questions[questionId].gradedAt!}\n            xp={props.assessment!.questions[questionId].xp}\n            grade={props.assessment!.questions[questionId].grade}\n            maxGrade={props.assessment!.questions[questionId].maxGrade}\n            maxXp={props.assessment!.questions[questionId].maxXp}\n            comments={props.assessment!.questions[questionId].comments}\n          />\n        ),\n        id: SideContentType.grading,\n        toSpawn: () => true\n      });\n    }\n\n    const functionsAttached = props.assessment!.questions[questionId].library.external.symbols;\n    if (functionsAttached.includes('get_matrix')) {\n      tabs.push({\n        label: `Tone Matrix`,\n        iconName: IconNames.GRID_VIEW,\n        body: <SideContentToneMatrix />,\n        id: SideContentType.toneMatrix,\n        toSpawn: () => true\n      });\n    }\n    return {\n      handleActiveTabChange: props.handleActiveTabChange,\n      defaultSelectedTabId: isGraded ? SideContentType.grading : SideContentType.questionOverview,\n      tabs,\n      workspaceLocation: 'assessment'\n    };\n  };\n\n  /** Pre-condition: IAssessment has been loaded */\n  private controlBarProps: (q: number) => ControlBarProps = (questionId: number) => {\n    const listingPath = `/academy/${assessmentCategoryLink(this.props.assessment!.category)}`;\n    const assessmentWorkspacePath = listingPath + `/${this.props.assessment!.id.toString()}`;\n    const questionProgress: [number, number] = [\n      questionId + 1,\n      this.props.assessment!.questions.length\n    ];\n\n    const onClickPrevious = () =>\n      history.push(assessmentWorkspacePath + `/${(questionId - 1).toString()}`);\n    const onClickNext = () =>\n      history.push(assessmentWorkspacePath + `/${(questionId + 1).toString()}`);\n    const onClickReturn = () => history.push(listingPath);\n\n    // Returns a nullary function that defers the navigation of the browser window, until the\n    // student's answer passes some checks - presently only used for Paths\n    const onClickProgress = (deferredNavigate: () => void) => {\n      return () => {\n        // Perform question blocking - determine the highest question number previously accessed\n        // by counting the number of questions that have a non-null answer\n        const blockedQuestionId =\n          this.props.assessment!.questions.filter(qn => qn.answer !== null).length - 1;\n\n        // If the current question does not block the next question, proceed as usual\n        if (questionId < blockedQuestionId) {\n          return deferredNavigate();\n        }\n        // Else evaluate its correctness - proceed iff the answer to the current question is correct\n        const question: Question = this.props.assessment!.questions[questionId];\n        if (question.type === QuestionTypes.mcq) {\n          if (question.answer !== (question as IMCQQuestion).solution) {\n            return showWarningMessage('Your MCQ solution is incorrect!', 750);\n          }\n        } else if (question.type === QuestionTypes.programming) {\n          const isCorrect = this.props.editorTestcases.reduce((acc, testcase) => {\n            return acc && stringify(testcase.result) === testcase.answer;\n          }, true);\n          if (!isCorrect) {\n            return showWarningMessage('Your solution has not passed all testcases!', 750);\n          }\n        }\n        return deferredNavigate();\n      };\n    };\n\n    const onClickSave = () =>\n      this.props.handleSave(\n        this.props.assessment!.questions[questionId].id,\n        this.props.editorValue!\n      );\n    const onClickResetTemplate = () => {\n      this.setState({ showResetTemplateOverlay: true });\n    };\n\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={this.props.handleReplOutputClear}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={this.props.handleReplEval}\n        isRunning={this.props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={\n          this.props.assessment!.category === AssessmentCategories.Path\n            ? onClickProgress(onClickNext)\n            : onClickNext\n        }\n        onClickReturn={\n          this.props.assessment!.category === AssessmentCategories.Path\n            ? onClickProgress(onClickReturn)\n            : onClickReturn\n        }\n        questionProgress={questionProgress}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={questionProgress}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton questionProgress={questionProgress} key=\"question_view\" />\n    );\n\n    const resetButton =\n      this.props.assessment!.questions[questionId].type !== QuestionTypes.mcq ? (\n        <ControlBarResetButton onClick={onClickResetTemplate} key=\"reset_template\" />\n      ) : null;\n\n    const runButton = (\n      <ControlBarRunButton handleEditorEval={this.props.handleEditorEval} key=\"run\" />\n    );\n\n    const saveButton =\n      !beforeNow(this.props.closeDate) &&\n      this.props.assessment!.questions[questionId].type !== QuestionTypes.mcq ? (\n        <ControlButtonSaveButton\n          hasUnsavedChanges={this.props.hasUnsavedChanges}\n          onClickSave={onClickSave}\n          key=\"save\"\n        />\n      ) : null;\n\n    const handleChapterSelect = () => {};\n\n    const chapterSelect = (\n      <ControlBarChapterSelect\n        handleChapterSelect={handleChapterSelect}\n        sourceChapter={this.props.assessment!.questions[questionId].library.chapter}\n        sourceVariant={Constants.defaultSourceVariant as Variant}\n        disabled={true}\n        key=\"chapter\"\n      />\n    );\n\n    return {\n      editorButtons: [runButton, saveButton, resetButton, chapterSelect],\n      flowButtons: [previousButton, questionView, nextButton],\n      replButtons: [evalButton, clearButton]\n    };\n  };\n}\n\nexport default AssessmentWorkspace;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../application/actions/InterpreterActions';\nimport { fetchAssessment, submitAnswer } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport { Library } from '../assessment/AssessmentTypes';\nimport { Position } from '../editor/EditorTypes';\nimport { SideContentType } from '../sideContent/SideContentTypes';\nimport {\n  beginClearContext,\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeEditorHeight,\n  changeEditorWidth,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  resetWorkspace,\n  setEditorBreakpoint,\n  updateActiveTab,\n  updateCurrentAssessmentId,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateReplValue\n} from '../workspace/WorkspaceActions';\nimport { WorkspaceLocation, WorkspaceState } from '../workspace/WorkspaceTypes';\nimport AssessmentWorkspace, { DispatchProps, OwnProps, StateProps } from './AssessmentWorkspace';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  return {\n    assessment: state.session.assessments.get(props.assessmentId),\n    autogradingResults: state.workspaces.assessment.autogradingResults,\n    editorPrepend: state.workspaces.assessment.editorPrepend,\n    editorValue: state.workspaces.assessment.editorValue,\n    editorPostpend: state.workspaces.assessment.editorPostpend,\n    editorTestcases: state.workspaces.assessment.editorTestcases,\n    editorHeight: state.workspaces.assessment.editorHeight,\n    editorWidth: state.workspaces.assessment.editorWidth,\n    breakpoints: state.workspaces.assessment.breakpoints,\n    highlightedLines: state.workspaces.assessment.highlightedLines,\n    hasUnsavedChanges: state.workspaces.assessment.hasUnsavedChanges,\n    isRunning: state.workspaces.assessment.isRunning,\n    isDebugging: state.workspaces.assessment.isDebugging,\n    enableDebugging: state.workspaces.assessment.enableDebugging,\n    newCursorPosition: state.workspaces.assessment.newCursorPosition,\n    output: state.workspaces.assessment.output,\n    replValue: state.workspaces.assessment.replValue,\n    sideContentHeight: state.workspaces.assessment.sideContentHeight,\n    storedAssessmentId: state.workspaces.assessment.currentAssessment,\n    storedQuestionId: state.workspaces.assessment.currentQuestion\n  };\n};\n\nconst workspaceLocation: WorkspaceLocation = 'assessment';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleActiveTabChange: (activeTab: SideContentType) =>\n        updateActiveTab(activeTab, workspaceLocation),\n      handleAssessmentFetch: fetchAssessment,\n      handleBrowseHistoryDown: () => browseReplHistoryDown(workspaceLocation),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(workspaceLocation),\n      handleChapterSelect: (chapter: any, changeEvent: any) =>\n        chapterSelect(chapter, 'default', workspaceLocation),\n      handleClearContext: (library: Library) => beginClearContext(library, workspaceLocation),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(workspaceLocation, cursorPosition),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorHeightChange: (height: number) => changeEditorHeight(height, workspaceLocation),\n      handleEditorWidthChange: (widthChange: number) =>\n        changeEditorWidth(widthChange.toString(), workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleInterruptEval: () => beginInterruptExecution(workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, workspaceLocation),\n      handleResetWorkspace: (options: Partial<WorkspaceState>) =>\n        resetWorkspace(workspaceLocation, options),\n      handleSave: submitAnswer,\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, workspaceLocation),\n      handleTestcaseEval: (testcaseId: number) => evalTestcase(workspaceLocation, testcaseId),\n      handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, hasUnsavedChanges),\n      handleUpdateCurrentAssessmentId: updateCurrentAssessmentId,\n      handleDebuggerPause: () => beginDebuggerPause(workspaceLocation),\n      handleDebuggerResume: () => debuggerResume(workspaceLocation),\n      handleDebuggerReset: () => debuggerReset(workspaceLocation),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback)\n    },\n    dispatch\n  );\n\nconst AssessmentWorkspaceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssessmentWorkspace);\n\nexport default AssessmentWorkspaceContainer;\n","import { Card, Elevation } from '@blueprintjs/core';\nimport * as React from 'react';\n\nexport type ContentDisplayProps = {\n  fullWidth?: boolean;\n  display: JSX.Element;\n  loadContentDispatch: () => void;\n};\n\nclass ContentDisplay extends React.Component<ContentDisplayProps, {}> {\n  public componentDidMount() {\n    this.props.loadContentDispatch();\n  }\n\n  public render() {\n    return (\n      <div className=\"ContentDisplay row center-xs\">\n        <div\n          className={`${\n            this.props.fullWidth ? 'col-xs-12' : 'col-xs-10'\n          } contentdisplay-content-parent`}\n        >\n          <Card className=\"contentdisplay-content\" elevation={Elevation.THREE}>\n            {this.props.display}\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentDisplay;\n","import {\n  filterByTypeOptions,\n  Notification,\n  NotificationFilterFunction\n} from './NotificationBadgeTypes';\n\n/**\n * @return A function that takes in an array of notification and filters it by assessment id.\n */\nexport function filterNotificationsByAssessment(assessmentId: number): NotificationFilterFunction {\n  return (notifications: Notification[]) =>\n    notifications.filter(n => !n.submission_id && n.assessment_id === assessmentId);\n}\n\n/**\n * @return A function that takes in an array of notification and filters it by submission id.\n */\nexport function filterNotificationsBySubmission(submissionId: number): NotificationFilterFunction {\n  return (notifications: Notification[]) =>\n    notifications.filter(n => n.submission_id === submissionId);\n}\n\n/**\n * Notifications will be filtered to either one of the Assessment Category, or the Grading Category.\n *\n * Notifications with a submission id belongs to the Grading category.\n *\n * @return A function that takes in an array of notification and filters it by the type of notification.\n */\nexport function filterNotificationsByType(\n  assessmentType: filterByTypeOptions\n): NotificationFilterFunction {\n  return (notifications: Notification[]) =>\n    notifications.filter(n => {\n      if (assessmentType === 'Grading') {\n        return n.submission_id !== undefined;\n      }\n      return !n.submission_id && assessmentType === n.assessment_type;\n    });\n}\n\n/**\n * @return A function that takes in an array of notification and filters it by notification id.\n */\nexport function filterNotificationsById(id: number): NotificationFilterFunction {\n  return (notifications: Notification[]) => notifications.filter(n => n.id === id);\n}\n","import { AssessmentCategories, AssessmentCategory } from '../assessment/AssessmentTypes';\n\nexport type Notification = {\n  assessment_id?: number;\n  assessment_type?: AssessmentCategory;\n  assessment_title?: string;\n  id: number;\n  submission_id?: number;\n  type: NotificationType;\n};\n\nexport enum NotificationTypes {\n  new = 'new',\n  deadline = 'deadline',\n  autograded = 'autograded',\n  graded = 'graded',\n  submitted = 'submitted',\n  unsubmitted = 'unsubmitted',\n  new_message = 'new_message'\n}\n\nexport type NotificationType = keyof typeof NotificationTypes;\n\nexport type NotificationFilterFunction = (notifications: Notification[]) => Notification[];\n\nexport type filterByTypeOptions = AssessmentCategories | 'Grading';\n","import { Intent, Popover, PopoverInteractionKind, Position, Tag } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { filterNotificationsById } from './NotificationBadgeHelper';\nimport {\n  Notification,\n  NotificationFilterFunction,\n  NotificationType,\n  NotificationTypes\n} from './NotificationBadgeTypes';\n\ntype NotificationBadgeProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  disableHover?: boolean; // Set to true to disable popover content\n  large?: boolean; // Set to true to use large style\n  notificationFilter?: (notifications: Notification[]) => Notification[];\n};\n\nexport type StateProps = {\n  notifications: Notification[];\n};\n\nconst NotificationBadge: React.SFC<NotificationBadgeProps> = props => {\n  const notifications = props.notificationFilter\n    ? props.notificationFilter(props.notifications)\n    : props.notifications;\n\n  if (!notifications.length) {\n    return null;\n  }\n\n  const notificationIcon = (\n    <Tag intent={Intent.DANGER} round={true} large={props.large}>\n      {notifications.length}\n    </Tag>\n  );\n\n  if (!props.disableHover) {\n    const makeNotificationTag = (notification: Notification) => {\n      const onRemove = () =>\n        props.handleAcknowledgeNotifications(filterNotificationsById(notification.id));\n\n      return (\n        <Tag\n          className=\"row badge-tag\"\n          key={`${notification.id}`}\n          minimal={true}\n          multiline={true}\n          onRemove={onRemove}\n        >\n          {makeNotificationMessage(notification.type)}\n        </Tag>\n      );\n    };\n\n    const notificationTags = <div className=\"col\">{notifications.map(makeNotificationTag)}</div>;\n\n    return (\n      <Popover\n        className={props.className}\n        content={notificationTags}\n        interactionKind={PopoverInteractionKind.HOVER}\n        position={Position.RIGHT}\n        hoverOpenDelay={50}\n        hoverCloseDelay={50}\n        lazy={true}\n      >\n        {notificationIcon}\n      </Popover>\n    );\n  }\n\n  return notificationIcon;\n};\n\nconst makeNotificationMessage = (type: NotificationType) => {\n  switch (type) {\n    case NotificationTypes.new:\n      return 'This assessment is new.';\n    case NotificationTypes.deadline:\n      return 'This assessment is closing soon.';\n    case NotificationTypes.autograded:\n      return 'This assessment has been autograded.';\n    case NotificationTypes.submitted:\n      return 'This submission is new.';\n    case NotificationTypes.unsubmitted:\n      return 'This assessment has been unsubmitted.';\n    case NotificationTypes.graded:\n      return 'This assessment has been manually graded.';\n    case NotificationTypes.new_message:\n      return 'There are new messages.';\n    default:\n      return 'Unknown notification';\n  }\n};\n\nexport default NotificationBadge;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { acknowledgeNotifications } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport NotificationBadge, { DispatchProps, StateProps } from './NotificationBadge';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  notifications: state.session.notifications\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAcknowledgeNotifications: acknowledgeNotifications\n    },\n    dispatch\n  );\n\nconst NotificationBadgeContainer = connect(mapStateToProps, mapDispatchToProps)(NotificationBadge);\n\nexport default NotificationBadgeContainer;\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  Collapse,\n  Dialog,\n  Elevation,\n  H4,\n  H6,\n  Icon,\n  IconName,\n  Intent,\n  NonIdealState,\n  Position,\n  Spinner,\n  Text,\n  Tooltip\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { NavLink } from 'react-router-dom';\n\nimport defaultCoverImage from '../../assets/default_cover_image.jpg';\nimport { OwnProps as AssessmentWorkspaceOwnProps } from '../assessmentWorkspace/AssessmentWorkspace';\nimport AssessmentWorkspaceContainer from '../assessmentWorkspace/AssessmentWorkspaceContainer';\nimport ContentDisplay from '../ContentDisplay';\nimport controlButton from '../ControlButton';\nimport Markdown from '../Markdown';\nimport NotificationBadge from '../notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsByAssessment } from '../notificationBadge/NotificationBadgeHelper';\nimport { NotificationFilterFunction } from '../notificationBadge/NotificationBadgeTypes';\nimport Constants from '../utils/Constants';\nimport { beforeNow, getPrettyDate } from '../utils/DateHelper';\nimport { assessmentCategoryLink, stringParamToInt } from '../utils/ParamParseHelper';\nimport {\n  AssessmentCategory,\n  AssessmentOverview,\n  AssessmentStatuses,\n  AssessmentWorkspaceParams,\n  GradingStatuses\n} from './AssessmentTypes';\n\nexport type AssessmentProps = DispatchProps &\n  OwnProps &\n  RouteComponentProps<AssessmentWorkspaceParams> &\n  StateProps;\n\nexport type DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n  handleAssessmentOverviewFetch: () => void;\n  handleSubmitAssessment: (id: number) => void;\n};\n\nexport type OwnProps = {\n  assessmentCategory: AssessmentCategory;\n};\n\nexport type StateProps = {\n  assessmentOverviews?: AssessmentOverview[];\n  isStudent: boolean;\n};\n\ntype State = {\n  betchaAssessment: AssessmentOverview | null;\n  showClosedAssessments: boolean;\n  showOpenedAssessments: boolean;\n  showUpcomingAssessments: boolean;\n};\n\nclass Assessment extends React.Component<AssessmentProps, State> {\n  public constructor(props: AssessmentProps) {\n    super(props);\n    this.state = {\n      betchaAssessment: null,\n      showClosedAssessments: false,\n      showOpenedAssessments: true,\n      showUpcomingAssessments: true\n    };\n  }\n\n  public render() {\n    const { assessmentOverviews, isStudent } = this.props;\n    const assessmentId: number | null = stringParamToInt(this.props.match.params.assessmentId);\n    const questionId: number =\n      stringParamToInt(this.props.match.params.questionId) || Constants.defaultQuestionId;\n\n    // If there is an assessment to render, create a workspace. The assessment\n    // overviews must still be loaded for this, to send the due date.\n    if (assessmentId !== null && assessmentOverviews !== undefined) {\n      const overview = assessmentOverviews.filter(a => a.id === assessmentId)[0];\n      const assessmentWorkspaceProps: AssessmentWorkspaceOwnProps = {\n        assessmentId,\n        questionId,\n        notAttempted: overview.status === AssessmentStatuses.not_attempted,\n        closeDate: overview.closeAt\n      };\n      return <AssessmentWorkspaceContainer {...assessmentWorkspaceProps} />;\n    }\n\n    // Otherwise, render a list of assOwnProps\n    let display: JSX.Element;\n    if (assessmentOverviews === undefined) {\n      display = <NonIdealState description=\"Fetching assessment...\" icon={<Spinner />} />;\n    } else if (assessmentOverviews.length === 0) {\n      display = <NonIdealState title=\"There are no assessments.\" icon={IconNames.FLAME} />;\n    } else {\n      /** Upcoming assessments, that are not released yet. */\n      const isOverviewUpcoming = (overview: AssessmentOverview) =>\n        !beforeNow(overview.closeAt) && !beforeNow(overview.openAt);\n\n      const upcomingCards = this.sortAssessments(\n        assessmentOverviews.filter(isOverviewUpcoming)\n      ).map((overview, index) => this.makeOverviewCard(overview, index, !isStudent, false));\n\n      /** Opened assessments, that are released and can be attempted. */\n      const isOverviewOpened = (overview: AssessmentOverview) =>\n        !beforeNow(overview.closeAt) &&\n        beforeNow(overview.openAt) &&\n        overview.status !== AssessmentStatuses.submitted;\n      const openedCards = this.sortAssessments(\n        assessmentOverviews.filter(overview => isOverviewOpened(overview))\n      ).map((overview, index) => this.makeOverviewCard(overview, index, true, false));\n\n      /** Closed assessments, that are past the due date or cannot be attempted further. */\n      const closedCards = this.sortAssessments(\n        assessmentOverviews.filter(\n          overview => !isOverviewOpened(overview) && !isOverviewUpcoming(overview)\n        )\n      ).map((overview, index) => this.makeOverviewCard(overview, index, true, true));\n\n      /** Render cards */\n      const upcomingCardsCollapsible = (\n        <>\n          {collapseButton(\n            'Upcoming',\n            this.state.showUpcomingAssessments,\n            this.toggleUpcomingAssessments\n          )}\n          <Collapse isOpen={this.state.showUpcomingAssessments}>{upcomingCards}</Collapse>\n        </>\n      );\n\n      const openedCardsCollapsible = (\n        <>\n          {collapseButton('Open', this.state.showOpenedAssessments, this.toggleOpenAssessments)}\n          <Collapse isOpen={this.state.showOpenedAssessments}>{openedCards}</Collapse>\n        </>\n      );\n\n      const closedCardsCollapsible = (\n        <>\n          {collapseButton('Closed', this.state.showClosedAssessments, this.toggleClosedAssessments)}\n          <Collapse isOpen={this.state.showClosedAssessments}>{closedCards}</Collapse>\n        </>\n      );\n\n      display = (\n        <>\n          {upcomingCards.length > 0 ? upcomingCardsCollapsible : null}\n          {openedCards.length > 0 ? openedCardsCollapsible : null}\n          {closedCards.length > 0 ? closedCardsCollapsible : null}\n        </>\n      );\n    }\n\n    // Define the betcha dialog (in each card's menu)\n    const submissionText = this.state.betchaAssessment ? (\n      <p>\n        You are about to finalise your submission for the{' '}\n        {this.state.betchaAssessment.category.toLowerCase()}{' '}\n        <i>&quot;{this.state.betchaAssessment.title}&quot;</i>.\n      </p>\n    ) : (\n      <p>You are about to finalise your submission.</p>\n    );\n    const betchaText = (\n      <>\n        {submissionText}\n        <p>\n          Early submissions grant you additional XP, but{' '}\n          <span className=\"warning\">this action is irreversible.</span>\n        </p>\n      </>\n    );\n    const betchaDialog = (\n      <Dialog\n        className=\"betcha-dialog\"\n        icon={IconNames.ERROR}\n        isCloseButtonShown={true}\n        isOpen={this.state.betchaAssessment !== null}\n        onClose={this.setBetchaAssessmentNull}\n        title=\"Betcha: Early Submission\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <Text>{betchaText}</Text>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <ButtonGroup>\n            {controlButton('Cancel', null, this.setBetchaAssessmentNull, { minimal: false })}\n            {controlButton('Finalise Submission', null, this.submitAssessment, {\n              minimal: false,\n              intent: Intent.DANGER\n            })}\n          </ButtonGroup>\n        </div>\n      </Dialog>\n    );\n\n    // Finally, render the ContentDisplay.\n    return (\n      <div className=\"Assessment\">\n        <ContentDisplay\n          display={display}\n          loadContentDispatch={this.props.handleAssessmentOverviewFetch}\n        />\n        {betchaDialog}\n      </div>\n    );\n  }\n\n  private toggleClosedAssessments = () =>\n    this.setState({\n      ...this.state,\n      showClosedAssessments: !this.state.showClosedAssessments\n    });\n\n  private toggleOpenAssessments = () =>\n    this.setState({\n      ...this.state,\n      showOpenedAssessments: !this.state.showOpenedAssessments\n    });\n\n  private toggleUpcomingAssessments = () =>\n    this.setState({\n      ...this.state,\n      showUpcomingAssessments: !this.state.showUpcomingAssessments\n    });\n\n  private setBetchaAssessment = (assessment: AssessmentOverview | null) =>\n    this.setState({\n      ...this.state,\n      betchaAssessment: assessment\n    });\n\n  private setBetchaAssessmentNull = () => this.setBetchaAssessment(null);\n\n  private submitAssessment = () => {\n    if (this.state.betchaAssessment) {\n      this.props.handleSubmitAssessment(this.state.betchaAssessment.id);\n      this.setBetchaAssessmentNull();\n    }\n  };\n\n  private sortAssessments = (assessments: AssessmentOverview[]) =>\n    sortBy(assessments, [a => -a.id]);\n\n  private makeSubmissionButton = (overview: AssessmentOverview, index: number) => (\n    <Button\n      disabled={overview.status !== AssessmentStatuses.attempted}\n      icon={IconNames.CONFIRM}\n      intent={overview.status === AssessmentStatuses.attempted ? Intent.DANGER : Intent.NONE}\n      minimal={true}\n      // intentional: each listing renders its own version of onClick\n      // tslint:disable-next-line:jsx-no-lambda\n      onClick={() => this.setBetchaAssessment(overview)}\n    >\n      <span className=\"custom-hidden-xxxs\">Finalize</span>\n      <span className=\"custom-hidden-xxs\"> Submission</span>\n    </Button>\n  );\n\n  private makeAssessmentInteractButton = (overview: AssessmentOverview) => {\n    let icon: IconName;\n    let label: string;\n    let optionalLabel: string = '';\n\n    switch (overview.status) {\n      case AssessmentStatuses.not_attempted:\n        icon = IconNames.PLAY;\n        label = 'Attempt';\n        break;\n      case AssessmentStatuses.attempting:\n        icon = IconNames.PLAY;\n        label = 'Continue';\n        optionalLabel = ' Attempt';\n        break;\n      case AssessmentStatuses.attempted:\n        icon = IconNames.EDIT;\n        label = 'Review';\n        optionalLabel = ' Attempt';\n        break;\n      case AssessmentStatuses.submitted:\n        icon = IconNames.EYE_OPEN;\n        label = 'Review';\n        optionalLabel = ' Submission';\n        break;\n      default:\n        // If we reach this case, backend data did not fit IAssessmentOverview\n        icon = IconNames.PLAY;\n        label = 'Review';\n        break;\n    }\n    return (\n      <NavLink\n        to={`/academy/${assessmentCategoryLink(overview.category)}/${overview.id.toString()}/${\n          Constants.defaultQuestionId\n        }`}\n      >\n        <Button\n          icon={icon}\n          minimal={true}\n          // intentional: each listing renders its own version of onClick\n          // tslint:disable-next-line:jsx-no-lambda\n          onClick={() =>\n            this.props.handleAcknowledgeNotifications(filterNotificationsByAssessment(overview.id))\n          }\n        >\n          <span className=\"custom-hidden-xxxs\">{label}</span>\n          <span className=\"custom-hidden-xxs\">{optionalLabel}</span>\n        </Button>\n      </NavLink>\n    );\n  };\n\n  /**\n   * Create a series of cards to display IAssessmentOverviews.\n   * @param {AssessmentOverview} overview the assessment overview to display\n   * @param {number} index a unique number for this card (required for sequential rendering).\n   *   See {@link https://reactjs.org/docs/lists-and-keys.html#keys}\n   * @param renderAttemptButton will only render the attempt button if true, regardless\n   *   of attempt status.\n   * @param notifications the notifications to be passed in.\n   */\n  private makeOverviewCard = (\n    overview: AssessmentOverview,\n    index: number,\n    renderAttemptButton: boolean,\n    renderGradingStatus: boolean\n  ) => (\n    <div key={index}>\n      <Card className=\"row listing\" elevation={Elevation.ONE}>\n        <div className=\"col-xs-3 listing-picture\">\n          <NotificationBadge\n            className=\"badge\"\n            notificationFilter={filterNotificationsByAssessment(overview.id)}\n            large={true}\n          />\n          <img\n            alt=\"Assessment\"\n            className={`cover-image-${overview.status}`}\n            src={overview.coverImage ? overview.coverImage : defaultCoverImage}\n          />\n        </div>\n        <div className=\"col-xs-9 listing-text\">\n          {this.makeOverviewCardTitle(overview, index, renderGradingStatus)}\n          <div className=\"listing-grade\">\n            <H6>\n              {beforeNow(overview.openAt)\n                ? `Grade: ${overview.grade} / ${overview.maxGrade}`\n                : `Max Grade: ${overview.maxGrade}`}\n            </H6>\n          </div>\n          <div className=\"listing-xp\">\n            <H6>\n              {beforeNow(overview.openAt)\n                ? `XP: ${overview.xp} / ${overview.maxXp}`\n                : `Max XP: ${overview.maxXp}`}\n            </H6>\n          </div>\n          <div className=\"listing-description\">\n            <Markdown content={overview.shortSummary} />\n          </div>\n          <div className=\"listing-footer\">\n            <Text className=\"listing-due-date\">\n              <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.TIME} />\n              {beforeNow(overview.openAt)\n                ? `Due: ${getPrettyDate(overview.closeAt)}`\n                : `Opens at: ${getPrettyDate(overview.openAt)}`}\n            </Text>\n            <div className=\"listing-button\">\n              {renderAttemptButton ? this.makeAssessmentInteractButton(overview) : null}\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n\n  private makeOverviewCardTitle = (\n    overview: AssessmentOverview,\n    index: number,\n    renderGradingStatus: boolean\n  ) => (\n    <div className=\"listing-header\">\n      <Text ellipsize={true}>\n        <H4 className=\"listing-title\">\n          {overview.title}\n          {overview.private ? (\n            <Tooltip\n              className=\"listing-title-tooltip\"\n              content=\"This assessment is password-protected.\"\n            >\n              <Icon icon=\"lock\" />\n            </Tooltip>\n          ) : null}\n          {renderGradingStatus ? makeGradingStatus(overview.gradingStatus) : null}\n        </H4>\n      </Text>\n      <div className=\"listing-button\">{this.makeSubmissionButton(overview, index)}</div>\n    </div>\n  );\n}\n\nconst makeGradingStatus = (gradingStatus: string) => {\n  let iconName: IconName;\n  let intent: Intent;\n  let tooltip: string;\n\n  switch (gradingStatus) {\n    case GradingStatuses.graded:\n      iconName = IconNames.TICK;\n      intent = Intent.SUCCESS;\n      tooltip = 'Fully graded';\n      break;\n    case GradingStatuses.grading:\n      iconName = IconNames.TIME;\n      intent = Intent.WARNING;\n      tooltip = 'Grading in progress';\n      break;\n    case GradingStatuses.none:\n      iconName = IconNames.CROSS;\n      intent = Intent.DANGER;\n      tooltip = 'Not graded yet';\n      break;\n    default:\n      // Shows default icon if this assessment is ungraded\n      iconName = IconNames.DISABLE;\n      intent = Intent.PRIMARY;\n      tooltip = `Not applicable`;\n      break;\n  }\n\n  return (\n    <Tooltip className=\"listing-title-tooltip\" content={tooltip} position={Position.RIGHT}>\n      <Icon icon={iconName} intent={intent} />\n    </Tooltip>\n  );\n};\n\nconst collapseButton = (label: string, isOpen: boolean, toggleFunc: () => void) =>\n  controlButton(label, isOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT, toggleFunc, {\n    minimal: true,\n    className: 'collapse-button'\n  });\n\nexport default Assessment;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  acknowledgeNotifications,\n  fetchAssessmentOverviews,\n  submitAssessment\n} from '../application/actions/SessionActions';\nimport { OverallState, Role } from '../application/ApplicationTypes';\nimport Assessment, { DispatchProps, OwnProps, StateProps } from './Assessment';\nimport { AssessmentOverview } from './AssessmentTypes';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  const categoryFilter = (overview: AssessmentOverview) =>\n    overview.category === props.assessmentCategory;\n  const stateProps: StateProps = {\n    assessmentOverviews: state.session.assessmentOverviews\n      ? state.session.assessmentOverviews.filter(categoryFilter)\n      : undefined,\n    isStudent: state.session.role ? state.session.role === Role.Student : true\n  };\n  return stateProps;\n};\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAcknowledgeNotifications: acknowledgeNotifications,\n      handleAssessmentOverviewFetch: fetchAssessmentOverviews,\n      handleSubmitAssessment: submitAssessment\n    },\n    dispatch\n  );\n\nconst AssessmentContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Assessment));\n\nexport default AssessmentContainer;\n","export const SAVE_CANVAS = 'SAVE_CANVAS';\n\nexport const assessmentRegExp = ':assessmentId(\\\\d+)?/:questionId(\\\\d+)?';\nexport const gradingRegExp = ':submissionId(\\\\d+)?/:questionId(\\\\d+)?';\n\nexport type AcademyState = {\n  readonly gameCanvas?: HTMLCanvasElement;\n};\n","import { action } from 'typesafe-actions';\n\nimport {\n  FETCH_GROUP_GRADING_SUMMARY,\n  GradingSummary,\n  UPDATE_GROUP_GRADING_SUMMARY\n} from './DashboardTypes';\n\nexport const fetchGroupGradingSummary = () => action(FETCH_GROUP_GRADING_SUMMARY);\n\nexport const updateGroupGradingSummary = (gradingSummary: GradingSummary) =>\n  action(UPDATE_GROUP_GRADING_SUMMARY, gradingSummary);\n","export const FETCH_GROUP_GRADING_SUMMARY = 'FETCH_GROUP_GRADING_SUMMARY';\nexport const UPDATE_GROUP_GRADING_SUMMARY = 'UPDATE_GROUP_GRADING_SUMMARY';\n\nexport type DashboardState = {\n  gradingSummary: GradingSummary;\n};\n\nexport type GradingSummaryEntry = {\n  groupName: string;\n  leaderName: string;\n  ungradedMissions: number;\n  submittedMissions: number;\n  ungradedSidequests: number;\n  submittedSidequests: number;\n};\n\nexport type GradingSummary = GradingSummaryEntry[];\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport * as React from 'react';\n\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport { GradingSummary } from '../../../features/dashboard/DashboardTypes';\n\ntype DashboardProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleFetchGradingSummary: () => void;\n};\n\nexport type StateProps = {\n  gradingSummary: GradingSummary;\n};\n\nclass Dashboard extends React.Component<DashboardProps> {\n  private columnDefs: ColDef[];\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n\n  public constructor(props: DashboardProps) {\n    super(props);\n\n    this.columnDefs = [\n      {\n        headerName: 'Group',\n        field: 'groupName',\n        width: 80,\n        sort: 'asc'\n      },\n      {\n        headerName: 'Avenger',\n        field: 'leaderName'\n      },\n      {\n        headerName: 'Ungraded Missions',\n        field: 'ungradedMissions'\n      },\n      {\n        headerName: 'Submitted Missions',\n        field: 'submittedMissions'\n      },\n      {\n        headerName: 'Ungraded Quests',\n        field: 'ungradedSidequests'\n      },\n      {\n        headerName: 'Submitted Quests',\n        field: 'submittedSidequests'\n      }\n    ];\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n  }\n\n  public componentDidUpdate(prevProps: DashboardProps) {\n    if (this.gridApi && this.props.gradingSummary.length !== prevProps.gradingSummary.length) {\n      this.gridApi.setRowData(this.props.gradingSummary);\n    }\n  }\n\n  public handleFetchGradingSummary = () => {\n    this.props.handleFetchGradingSummary();\n  };\n\n  public render() {\n    const grid = (\n      <div className=\"GradingContainer\">\n        <div className=\"Grading ag-grid-parent ag-theme-balham\">\n          <AgGridReact\n            domLayout={'autoHeight'}\n            columnDefs={this.columnDefs}\n            defaultColDef={this.defaultColumnDefs}\n            onGridReady={this.onGridReady}\n            onFirstDataRendered={this.resizeGrid}\n            onGridSizeChanged={this.resizeGrid}\n            rowData={this.props.gradingSummary}\n            rowHeight={30}\n            suppressMovableColumns={true}\n          />\n        </div>\n      </div>\n    );\n\n    return (\n      <div>\n        <ContentDisplay display={grid} loadContentDispatch={this.handleFetchGradingSummary} />\n      </div>\n    );\n  }\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n  };\n\n  private resizeGrid = () => {\n    if (this.gridApi) {\n      this.gridApi.sizeColumnsToFit();\n    }\n  };\n}\n\nexport default Dashboard;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport { fetchGroupGradingSummary } from '../../../features/dashboard/DashboardActions';\nimport Dashboard, { DispatchProps, StateProps } from './Dashboard';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  gradingSummary: state.dashboard.gradingSummary\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleFetchGradingSummary: fetchGroupGradingSummary\n    },\n    dispatch\n  );\n\nconst DashboardContainer = connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\nexport default DashboardContainer;\n","import { AssetMap, FontAsset } from './AssetsTypes';\n\nconst FontAssets: AssetMap<FontAsset> = {\n  zektonFont: {\n    key: 'zekton',\n    pngPath: '../assets/zekton.png',\n    fntPath: '../assets/zekton.fnt'\n  },\n  alienCowsFont: {\n    key: 'alienAndCows',\n    pngPath: '../assets/alien_and_cows.png',\n    fntPath: '../assets/alien_and_cows.fnt'\n  },\n  alienLeagueFont: {\n    key: 'alienLeague',\n    pngPath: '../assets/alien_league.png',\n    fntPath: '../assets/alien_league.fnt'\n  }\n};\n\nexport default FontAssets;\n","import * as _ from 'lodash';\n\nimport { screenSize } from '../commons/CommonConstants';\n\nexport const Color = {\n  navy: '#03092c',\n  lightBlue: '#ece1fb',\n  offWhite: '#bbc1c9',\n  white: '#ffffff',\n  darkGrey: '#333333',\n  lightGrey: '#555555',\n  blue: '#1133ff',\n  darkBlue: '#0d2440',\n  orange: '#ff9933',\n  yellow: '#ffee33',\n  red: '0#ff0000',\n  maroon: '#142B2E',\n  black: '#000000',\n  purple: '#dd33dd',\n  paleYellow: '#f6ffbd'\n};\n\nconst hex = (str: string) => parseInt(str.slice(1), 16);\nexport const HexColor = _.mapValues(Color, hex);\n\ntype TableFormatPosConfig = {\n  numOfItems: number;\n  maxXSpace?: number;\n  maxYSpace?: number;\n  numItemLimit?: number;\n  redistributeLast?: boolean;\n};\n\n/**\n * Calculate x,y positions using a table format: mimic table-like\n * positions, with rows and columns.\n *\n * The positions will be ordered from left to right before\n * moving to the next row i.e. row-wise.\n *\n * @param numOfItems total number of items\n * @param maxXSpace maximum X space to be used, optional\n * @param maxYSpace maximum Y space to be used, optional\n * @param numItemLimit maximum number of item at a given row, optional\n * @param redistributeLast if true, items at the last row will have their location\n *                         calculated based on the number of items at the last row, optional\n * @returns {Array<[number, number]>} array of positions, in the format of\n *                                 [[xPos0, yPos0], [xPos1, yPos1]...]\n */\nexport function calcTableFormatPos({\n  numOfItems,\n  maxXSpace = screenSize.x,\n  maxYSpace = screenSize.y,\n  numItemLimit = 0,\n  redistributeLast = true\n}: TableFormatPosConfig): Array<[number, number]> {\n  const pos = new Array<[number, number]>();\n  const numOfRows = numItemLimit ? Math.ceil(numOfItems / numItemLimit) : 1;\n  const numOfCols = numItemLimit ? numItemLimit : numOfItems;\n  const numOfColsAtLastRow = numOfItems % numOfCols;\n\n  // Calculate partition size\n  const partitionXSpace = maxXSpace / numOfCols;\n  const partitionYSpace = maxYSpace / numOfRows;\n  const partitionLastXSpace = redistributeLast\n    ? maxXSpace / (numOfColsAtLastRow || numOfCols)\n    : partitionXSpace;\n\n  for (let i = 0; i < numOfItems; i++) {\n    // Get item position in terms of index\n    const itemXIdx = i % numOfCols;\n    const itemYIdx = Math.floor(i / numOfCols) % numOfRows;\n\n    // Determine item final position\n    const itemXPos =\n      itemXIdx === numOfRows - 1\n        ? (screenSize.x - maxXSpace + partitionLastXSpace) / 2 + itemXIdx * partitionLastXSpace\n        : (screenSize.x - maxXSpace + partitionXSpace) / 2 + itemXIdx * partitionXSpace;\n    const itemYPos = (screenSize.y - maxYSpace + partitionYSpace) / 2 + itemYIdx * partitionYSpace;\n\n    // Update\n    pos.push([itemXPos, itemYPos]);\n  }\n  return pos;\n}\n\ntype ListFormatPos = {\n  numOfItems: number;\n  xSpacing: number;\n  ySpacing: number;\n};\n\n/**\n * Calculate x,y positions using a list format: mimic list-like\n * positions, ordered sequentially.\n *\n * Each item will be offset by xSpaing and ySpacing.\n *\n * The first item will start at [0, 0] (top left) position.\n *\n * @param numOfItems total number of items\n * @param xSpacing horizontal spacing between items\n * @param ySpacing vertical spacing between items\n * @returns {Array<[number, number]>} array of positions, in the format of\n *                                 [[xPos0, yPos0], [xPos1, yPos1]...]\n */\nexport function calcListFormatPos({ numOfItems, xSpacing = 30, ySpacing = 30 }: ListFormatPos) {\n  const pos = new Array<[number, number]>();\n\n  for (let i = 0; i < numOfItems; i++) {\n    pos.push([i * xSpacing, i * ySpacing]);\n  }\n\n  return pos;\n}\n","import FontAssets from '../assets/FontAssets';\nimport { HexColor } from '../utils/StyleUtils';\n\nexport const Constants = {\n  repoAssetsFolder: '../assets',\n  assetsFolder: 'https://s3-ap-southeast-1.amazonaws.com/source-academy-assets',\n  fadeDuration: 600,\n  nullFunction: () => {},\n  nullInteractionId: '',\n  nullSequenceNumber: -1,\n  popupDuration: 1000,\n  defaultAssetPath: '/UI/wristDeviceButton.png',\n  defaultFontStyle: {\n    key: FontAssets.zektonFont.key,\n    size: 30,\n    fill: HexColor.lightBlue,\n    align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n  }\n};\n\nexport const screenSize = {\n  x: 1920,\n  y: 1080\n};\n\nexport const screenCenter = {\n  x: screenSize.x / 2,\n  y: screenSize.y / 2\n};\n","import { Constants } from '../commons/CommonConstants';\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function mapValues<K, V, R>(map: Map<K, V>, fn: (value: V, key?: K) => R) {\n  const newMap = new Map<K, R>();\n  map.forEach((value: V, key: K) => {\n    const result: R = fn(value, key);\n    newMap.set(key, result);\n  });\n  return newMap;\n}\n\nexport function limitNumber(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function createMapWithKey<K, V>(list: any[], id: string) {\n  const newMap = new Map<K, any>();\n\n  list.forEach(object => {\n    newMap.set(object[id], object);\n  });\n\n  return newMap;\n}\n\nexport function toS3Path(fileName: string) {\n  return Constants.assetsFolder + fileName;\n}\n\nexport function mandatory(object: any) {\n  if (!object) {\n    throw new Error('Object not found');\n  }\n  return object;\n}\n","import { AssetMap, ImageAsset } from './AssetsTypes';\n\nconst ImageAssets: AssetMap<ImageAsset> = {\n  // Commons Asset\n  shortButton: { key: 'short-button', path: '/ui/shortButton.png' },\n  mediumButton: { key: 'med-button', path: '/ui/mediumButton.png' },\n  longButton: { key: 'long-button', path: '/ui/longButton.png' },\n  topButton: { key: 'top-button', path: '/ui/topButton.png' },\n  speechBox: { key: 'speechBox', path: '/ui/speechbox.png' },\n  speakerBox: { key: 'speakerBox', path: '/ui/speakerBox.png' },\n  defaultLocationImg: { key: 'loc-default', path: '/ui/defaultLocation.jpg' },\n  locationPreviewFrame: { key: 'loc-preview-frame', path: '/ui/locationPreviewFrame.png' },\n  locationPreviewFill: { key: 'loc-preview-fill', path: '/ui/locationPreviewFill.png' },\n  talkOptButton: { key: 'talk-opt-button', path: '/ui/talkOptButton.png' },\n  talkOptCheck: { key: 'talk-opt-check', path: '/ui/talkOptCheck.png' },\n  modeMenuBanner: { key: 'mode-banner', path: '/ui/modeMenuBanner.png' },\n  popUpFrame: { key: 'pop-up-frame', path: '/ui/popUpFrame.png' },\n  mediumBox: { key: 'medium-box', path: '/ui/mediumBox.png' },\n  diamond: { key: 'diamond', path: '/ui/zircon.png' },\n  arrow: { key: 'arrow', path: '/ui/arrow.png' },\n  cookies: { key: 'cookies', path: '/images/cookies.png' },\n\n  // Escape Menu\n  escapeMenuBackground: { key: 'escape-bg', path: '/ui/escapeMenu.png' },\n\n  // Collectibles Menu\n  collectiblesMenu: { key: 'collect-bg', path: '/ui/collectiblesBg.png' },\n  collectiblesBanner: { key: 'collect-banner', path: '/ui/collectiblesBanner.png' },\n  collectiblesPageChosen: {\n    key: 'collect-pg-chosen',\n    path: '/ui/collectiblesPageOptChosen.png'\n  },\n  collectiblesPage: { key: 'collect-pg-opt', path: '/ui/collectiblesPageOpt.png' },\n\n  // Chapter Select\n  chapterSelectBackground: { key: 'chapter-select-bg', path: '/locations/yourRoom-dim/normal.png' },\n  chapterRepeatButton: { key: 'chapter-repeat', path: '/ui/chapterRepeat.png' },\n  chapterContinueButton: { key: 'chapter-continue', path: '/ui/chapterContinue.png' },\n  chapterSelectFrame: { key: 'chapter-select-frame', path: '/ui/chapterSelectionFrame.png' },\n  chapterSelectBorder: { key: 'chapter-select-border', path: '/ui/chapterSelectionBorder.png' },\n  chapterSelectArrow: { key: 'chapter-select-arrow', path: '/ui/chapSelectArrow.png' },\n\n  // Main Menu\n  mainMenuBackground: { key: 'main-menu-bg', path: '/locations/yourRoom-dim/normal.png' },\n  mainMenuOptBanner: { key: 'menu-option', path: '/ui/menuOption.png' },\n\n  // Settings\n  settingBackground: { key: 'setting-bg', path: '/locations/yourRoom-dim/normal.png' },\n  settingBanner: { key: 'settings-bg', path: '/ui/settingsBg.png' },\n  settingOption: { key: 'settings-opt', path: '/ui/settingsOption.png' }\n};\n\nexport default ImageAssets;\n","export const bgMusicFadeDuration = 1000;\n\nexport const musicFadeOutTween = {\n  volume: 0,\n  ease: 'Power2'\n};\n\nexport enum GameSoundType {\n  SFX,\n  BGM\n}\n","import { GameSoundType } from '../sound/GameSoundTypes';\nimport { AssetMap, SoundAsset } from './AssetsTypes';\n\nconst SoundAssets: AssetMap<SoundAsset> = {\n  // SFX\n  buttonHover: {\n    key: 'btn-hover',\n    path: '/sfx/buttonHover.mp3',\n    config: { volume: 0.5 },\n    soundType: GameSoundType.SFX\n  },\n  buttonClick: {\n    key: 'btn-click',\n    path: '/sfx/buttonClick.mp3',\n    config: { volume: 0.5 },\n    soundType: GameSoundType.SFX\n  },\n\n  // BGM\n  galacticHarmony: {\n    key: 'galactic-harmony',\n    path: '/bgm/GalacticHarmony.mp3',\n    config: { volume: 0.5, loop: true },\n    soundType: GameSoundType.BGM\n  }\n};\n\nexport default SoundAssets;\n","import { BitmapFontStyle } from '../commons/CommonTypes';\n\nexport const createBitmapText = (\n  scene: Phaser.Scene,\n  text: string,\n  x: number,\n  y: number,\n  style: BitmapFontStyle\n) => {\n  return new Phaser.GameObjects.BitmapText(\n    scene,\n    x,\n    y,\n    style.key,\n    text,\n    style.size,\n    style.align\n  ).setTintFill(style.fill);\n};\n","import SoundAssets from '../assets/SoundAssets';\nimport { Constants } from '../commons/CommonConstants';\nimport { AssetKey, BitmapFontStyle, TextConfig } from '../commons/CommonTypes';\nimport GameSoundManager from '../sound/GameSoundManager';\nimport { createBitmapText } from './TextUtils';\n\ntype ButtonConfig = {\n  assetKey: AssetKey;\n  message?: string;\n  textConfig?: TextConfig;\n  bitMapTextStyle?: BitmapFontStyle;\n  onDown?: () => void;\n  onUp?: () => void;\n  onHover?: () => void;\n  onOut?: () => void;\n  onHoverEffect?: boolean;\n  onClickSound?: AssetKey;\n  onHoverSound?: AssetKey;\n};\n\nconst onHoverAlpha = 1.0;\nconst offHoverAlpha = 0.9;\n\n/**\n * Create a button with basic functionalities.\n *\n * Functionalities include:\n * 1. Attached onDown, onUp, onHover, onOut listeners\n * 2. Text writing\n * 3. onHover and onOut alpha changes\n * 4. onClick and onHover sound effect\n *\n * @param scene scene to be attached to\n * @param assetKey asset key to be used as button image\n * @param message text to be written on the button, optional\n * @param textConfig config to apply to the text, optional\n * @param bitMapTextStyle bitMapText style to be used, optional\n * @param onDown callback to execute on onDown event, optional\n * @param onUp callback to execute on onUp event, optional\n * @param onHover callback to execute on onHover event, optional\n * @param onOut callback to execute on onOut event, optional\n * @param onHoverEffect if true, button will include onHover and onOut alpha changes, optional\n * @param onClickSound sound key to play when button is clicked, executed onUp, optional\n * @param onHoverSound sound key to play when button is hovered, optional\n * @param soundManager required for sound to be played, optional\n * @returns {Phaser.GameObjects.Container} button container\n */\nexport function createButton(\n  scene: Phaser.Scene,\n  {\n    assetKey,\n    message = '',\n    textConfig = { x: 0, y: 0, oriX: 0, oriY: 0 },\n    bitMapTextStyle = Constants.defaultFontStyle,\n    onDown = Constants.nullFunction,\n    onUp = Constants.nullFunction,\n    onHover = Constants.nullFunction,\n    onOut = Constants.nullFunction,\n    onHoverEffect = true,\n    onClickSound = SoundAssets.buttonClick.key,\n    onHoverSound = SoundAssets.buttonHover.key\n  }: ButtonConfig,\n  soundManager?: GameSoundManager\n): Phaser.GameObjects.Container {\n  const container = new Phaser.GameObjects.Container(scene, 0, 0);\n  const { x, y, oriX, oriY } = textConfig;\n\n  // Set up button functionality\n  const button = new Phaser.GameObjects.Sprite(scene, 0, 0, assetKey);\n  button.setInteractive({ pixelPerfect: true, useHandCursor: true });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, () => {\n    if (soundManager) soundManager.playSound(onClickSound);\n    onUp();\n  });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER, () => {\n    if (soundManager) soundManager.playSound(onHoverSound);\n    if (onHoverEffect) container.setAlpha(onHoverAlpha);\n    onHover();\n  });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, () => {\n    if (onHoverEffect) container.setAlpha(offHoverAlpha);\n    onOut();\n  });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, () => {\n    onDown();\n  });\n\n  // Set up text\n  const text = createBitmapText(scene, message, x, y, bitMapTextStyle);\n  text.setOrigin(oriX, oriY);\n\n  container.add([button, text]);\n  if (onHoverEffect) container.setAlpha(offHoverAlpha);\n\n  return container;\n}\n","import FontAssets from '../assets/FontAssets';\nimport ImageAssets from '../assets/ImageAssets';\nimport GameSoundManager from '../sound/GameSoundManager';\nimport { createButton } from '../utils/ButtonUtils';\nimport { HexColor } from '../utils/StyleUtils';\nimport { screenCenter } from './CommonConstants';\nimport { BitmapFontStyle } from './CommonTypes';\n\nconst backText = 'Back';\nconst backTextYPos = -screenCenter.y * 0.975;\nconst backButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  fill: HexColor.darkBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nclass CommonBackButton extends Phaser.GameObjects.Container {\n  constructor(\n    scene: Phaser.Scene,\n    callback: any,\n    x?: number,\n    y?: number,\n    soundManager?: GameSoundManager\n  ) {\n    super(scene, x, y);\n    this.renderBackButton(callback, soundManager);\n  }\n\n  private renderBackButton(callback: any, soundManager?: GameSoundManager) {\n    const backButton = createButton(\n      this.scene,\n      {\n        assetKey: ImageAssets.topButton.key,\n        message: backText,\n        textConfig: { x: 0, y: backTextYPos, oriX: 0.5, oriY: 0.25 },\n        bitMapTextStyle: backButtonStyle,\n        onUp: callback\n      },\n      soundManager\n    ).setPosition(screenCenter.x, screenCenter.y);\n    this.add(backButton);\n  }\n}\n\nexport default CommonBackButton;\n","import { screenCenter } from '../commons/CommonConstants';\n\nconst barWidth = 320;\nconst barHeight = 50;\nconst padding = 10;\n\nconst innerWidth = barWidth - padding * 2;\nconst innerHeight = barHeight - padding * 2;\nconst barX = screenCenter.x - barWidth / 2;\nconst barY = screenCenter.y;\nconst innerBarX = barX + padding;\nconst innerBarY = barY + padding;\n\nexport function addLoadingScreen(scene: Phaser.Scene) {\n  let progressBar: Phaser.GameObjects.Graphics;\n  let progressBox: Phaser.GameObjects.Graphics;\n\n  scene.load.on('start', () => {\n    progressBar = scene.add.graphics();\n    progressBox = scene.add.graphics();\n    progressBox.fillStyle(0x222222, 0.8);\n    progressBox.fillRect(barX, barY, barWidth, barHeight);\n  });\n\n  scene.load.on('progress', (value: number) => {\n    progressBar.clear();\n    progressBar.fillStyle(0xffffff, 1);\n    progressBar.fillRect(innerBarX, innerBarY, innerWidth * value, innerHeight);\n  });\n\n  scene.load.on('complete', function () {\n    progressBar.destroy();\n    progressBox.destroy();\n  });\n}\n","export enum Layer {\n  Effects,\n  Background,\n  Character,\n  Speaker,\n  PopUp,\n  Dialogue,\n  DialogueLabel,\n  UI,\n  Objects,\n  BBox,\n  Escape,\n  Selector,\n  Collectibles\n}\n\n// Back to Front\nexport const defaultLayerSequence = [\n  Layer.Background,\n  Layer.Selector,\n  Layer.Collectibles,\n  Layer.Objects,\n  Layer.BBox,\n  Layer.Character,\n  Layer.Speaker,\n  Layer.PopUp,\n  Layer.Dialogue,\n  Layer.DialogueLabel,\n  Layer.UI,\n  Layer.Effects,\n  Layer.Escape\n];\n","import FontAssets from '../assets/FontAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { Color, HexColor } from '../utils/StyleUtils';\n\nconst dialogueRectMargin = 10;\n\nconst DialogueConstants = {\n  promptSize: {\n    x: 30,\n    y: 60\n  },\n  promptPadding: {\n    x: 30,\n    y: 10\n  },\n  rect: {\n    x: dialogueRectMargin,\n    y: 760,\n    width: screenSize.x - dialogueRectMargin * 2,\n    height: 320\n  },\n  textPadding: {\n    x: 100,\n    y: 70\n  },\n  speakerRect: {\n    x: 320,\n    y: 745\n  }\n};\n\nexport const textTypeWriterStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '30px',\n  fill: Color.lightBlue,\n  align: 'left',\n  lineSpacing: 10,\n  wordWrap: {\n    width:\n      DialogueConstants.rect.width - DialogueConstants.textPadding.x * 2 - dialogueRectMargin * 2\n  }\n};\n\nexport const speakerTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 36,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport default DialogueConstants;\n","import GameManager from 'src/features/game/scenes/gameManager/GameManager';\n\nimport { Constants, screenCenter, screenSize } from '../commons/CommonConstants';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { sleep } from '../utils/GameUtils';\nimport { HexColor } from '../utils/StyleUtils';\n\nexport const fadeOut = (\n  targets: Phaser.GameObjects.GameObject[],\n  duration = Constants.fadeDuration\n) => ({\n  alpha: 0,\n  targets,\n  duration,\n  ease: 'Power2'\n});\n\nexport const fadeIn = (\n  targets: Phaser.GameObjects.GameObject[],\n  duration = Constants.fadeDuration\n) => ({\n  alpha: 1,\n  targets,\n  duration,\n  ease: 'Power2'\n});\n\ntype FadeProps = {\n  fadeDuration?: number;\n};\n\nexport function fadeAndDestroy(\n  scene: Phaser.Scene,\n  object: Phaser.GameObjects.GameObject | null,\n  { fadeDuration }: FadeProps = {}\n) {\n  if (!object) return;\n  scene.add.tween(fadeOut([object], fadeDuration || Constants.fadeDuration));\n  setTimeout(() => object.destroy(), fadeDuration || Constants.fadeDuration);\n}\n\nexport function blackScreen(scene: Phaser.Scene) {\n  return new Phaser.GameObjects.Rectangle(\n    scene,\n    screenCenter.x,\n    screenCenter.y,\n    screenSize.x,\n    screenSize.y,\n    0\n  );\n}\n\nexport function whiteScreen(scene: Phaser.Scene) {\n  return new Phaser.GameObjects.Rectangle(\n    scene,\n    screenCenter.x,\n    screenCenter.y,\n    screenSize.x,\n    screenSize.y,\n    HexColor.white\n  );\n}\n\nexport function blackFadeIn(gameManager: GameManager, { fadeDuration }: FadeProps = {}) {\n  const fadeBlack = blackScreen(gameManager);\n  gameManager.layerManager.addToLayer(Layer.Effects, fadeBlack);\n  fadeAndDestroy(gameManager, fadeBlack, { fadeDuration });\n}\n\nexport const blackFade = async (\n  gameManager: GameManager,\n  fadeDuration: number,\n  delay: number,\n  callback: any\n) => {\n  const fadeBlack = blackScreen(gameManager);\n  gameManager.layerManager.addToLayer(Layer.Effects, fadeBlack);\n\n  fadeBlack.setAlpha(0);\n  gameManager.tweens.add(fadeIn([fadeBlack], fadeDuration));\n  await sleep(fadeDuration);\n\n  await callback();\n  await sleep(delay);\n\n  fadeBlack.setAlpha(1);\n  gameManager.tweens.add(fadeOut([fadeBlack], fadeDuration));\n  await sleep(fadeDuration);\n\n  fadeBlack.destroy();\n};\n\nexport function blink(\n  scene: Phaser.Scene,\n  gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Container\n) {\n  let i = 0;\n  const blink = setInterval(() => {\n    if (i % 2 !== 0) {\n      gameObject.setAlpha(0);\n      scene.tweens.add(fadeIn([gameObject], 250));\n    } else {\n      gameObject.setAlpha(1);\n      scene.tweens.add(fadeOut([gameObject], 250));\n    }\n    i++;\n  }, 500);\n  function clearBlink() {\n    i = 0;\n    clearInterval(blink);\n  }\n  return clearBlink;\n}\n","type TypewriterProps = {\n  x?: number;\n  y?: number;\n  textStyle?: Phaser.Types.GameObjects.Text.TextStyle;\n  typeWriterInterval?: number;\n};\n\n/* Text sprite manager to produce typewriter effect */\nexport function Typewriter(\n  scene: Phaser.Scene,\n  { x = 0, y = 0, textStyle = {}, typeWriterInterval = 1 }: TypewriterProps\n) {\n  const textSprite = new Phaser.GameObjects.Text(scene, x, y, '', textStyle);\n\n  let line = '';\n  let charPointer = 0;\n  let typeWriting: NodeJS.Timeout;\n\n  /* Reset line and type out */\n  const changeLine = (message: string) => {\n    if (!message) return;\n    line = message;\n\n    textSprite.text = '';\n    charPointer = 0;\n\n    typeWriting && clearInterval(typeWriting);\n    typeWriting = setInterval(() => {\n      textSprite.text += line[charPointer++];\n      if (charPointer === line.length) {\n        clearInterval(typeWriting);\n      }\n    }, typeWriterInterval);\n  };\n\n  return { container: textSprite, changeLine };\n}\n\nexport default Typewriter;\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { blink, fadeAndDestroy } from '../effects/FadeEffect';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport GameManager from '../scenes/gameManager/GameManager';\nimport dialogueConstants from './GameDialogueConstants';\nimport { createDialogueBox, createTypewriter } from './GameDialogueHelper';\n\nclass DialogueRenderer {\n  private typewriter: any;\n  private dialogueBox: Phaser.GameObjects.Image;\n  private blinkingDiamond: any;\n\n  constructor(typewriterStyle: Phaser.Types.GameObjects.Text.TextStyle) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.dialogueBox = createDialogueBox(gameManager).setInteractive({\n      useHandCursor: true,\n      pixelPerfect: true\n    });\n    this.typewriter = createTypewriter(gameManager, typewriterStyle);\n    this.blinkingDiamond = this.drawDiamond(gameManager);\n  }\n\n  public getDialogueContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const container = new Phaser.GameObjects.Container(gameManager, 0, 0);\n    container.add([this.dialogueBox, this.blinkingDiamond.container, this.typewriter.container]);\n    return container;\n  }\n\n  private drawDiamond(gameManager: GameManager) {\n    const diamondSprite = new Phaser.GameObjects.Image(\n      gameManager,\n      screenSize.x - dialogueConstants.promptSize.x - dialogueConstants.promptPadding.x,\n      screenSize.y - dialogueConstants.promptSize.y - dialogueConstants.promptPadding.y,\n      ImageAssets.diamond.key\n    ).setDisplaySize(dialogueConstants.promptSize.x, dialogueConstants.promptSize.y);\n\n    return { container: diamondSprite, clearBlink: blink(gameManager, diamondSprite) };\n  }\n\n  public getDialogueBox() {\n    return this.dialogueBox;\n  }\n\n  public destroy() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.blinkingDiamond.clearBlink();\n    this.getDialogueBox().off(Phaser.Input.Events.GAMEOBJECT_POINTER_UP);\n    fadeAndDestroy(gameManager, this.getDialogueContainer());\n  }\n\n  public changeText(message: string) {\n    this.typewriter.changeLine(message);\n  }\n}\n\nexport default DialogueRenderer;\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenCenter } from '../commons/CommonConstants';\nimport Typewriter from '../effects/Typewriter';\nimport dialogueConstants from './GameDialogueConstants';\n\nexport function createDialogueBox(scene: Phaser.Scene) {\n  const dialogueBox = new Phaser.GameObjects.Image(\n    scene,\n    screenCenter.x,\n    screenCenter.y,\n    ImageAssets.speechBox.key\n  ).setAlpha(0.9);\n  return dialogueBox;\n}\n\nexport function createTypewriter(\n  scene: Phaser.Scene,\n  style: Phaser.Types.GameObjects.Text.TextStyle\n) {\n  const typewriter = Typewriter(scene, {\n    x: dialogueConstants.rect.x + dialogueConstants.textPadding.x,\n    y: dialogueConstants.rect.y + dialogueConstants.textPadding.y,\n    textStyle: style\n  });\n  return typewriter;\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\n\nimport FontAssets from '../assets/FontAssets';\nimport { Constants, screenCenter } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport dialogueConstants from '../dialogue/GameDialogueConstants';\nimport DialogueRenderer from '../dialogue/GameDialogueRenderer';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { sleep } from '../utils/GameUtils';\nimport { HexColor } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport { fadeAndDestroy, fadeIn } from './FadeEffect';\n\nconst notifStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 100,\n  fill: HexColor.paleYellow,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst notifYPos = dialogueConstants.rect.y + notifStyle.size * 2;\n\nexport async function displayNotification(message: string): Promise<void> {\n  const gameManager = GameGlobalAPI.getInstance().getGameManager();\n  const dialogueRenderer = new DialogueRenderer({});\n  const container = dialogueRenderer.getDialogueContainer();\n\n  GameGlobalAPI.getInstance().addContainerToLayer(Layer.Effects, container);\n  GameGlobalAPI.getInstance().fadeInLayer(Layer.Effects);\n\n  const notifText = createBitmapText(gameManager, message, screenCenter.x, notifYPos, notifStyle)\n    .setOrigin(0.5, 0.9)\n    .setAlpha(0);\n  container.add(notifText);\n\n  gameManager.add.tween(fadeIn([notifText], Constants.fadeDuration * 2));\n\n  // Wait for fade in to finish\n  await sleep(Constants.fadeDuration * 2);\n\n  const showNotification = new Promise(resolve => {\n    dialogueRenderer.getDialogueBox().on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, () => {\n      fadeAndDestroy(gameManager, notifText, { fadeDuration: Constants.fadeDuration / 4 });\n      dialogueRenderer.destroy();\n      resolve();\n    });\n  });\n\n  await showNotification;\n}\n","export enum GamePhaseType {\n  Move = 'Move',\n  Explore = 'Explore',\n  Talk = 'Talk',\n  Menu = 'Menu',\n  EscapeMenu = 'EscapeMenu',\n  None = 'None',\n  Sequence = 'Sequence',\n  CollectibleMenu = 'CollectibleMenu'\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { GameMode } from 'src/features/game/mode/GameModeTypes';\n\nimport { BBoxProperty } from '../../boundingBoxes/GameBoundingBoxTypes';\nimport { GamePosition, ItemId } from '../../commons/CommonTypes';\nimport { AssetKey } from '../../commons/CommonTypes';\nimport { displayNotification } from '../../effects/Notification';\nimport { GameLocation, GameLocationAttr, LocationId } from '../../location/GameMapTypes';\nimport { ObjectProperty } from '../../objects/GameObjectTypes';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport { SettingsJson, UserSaveState } from '../../save/GameSaveTypes';\nimport { StateObserver } from '../../state/GameStateTypes';\nimport { mandatory } from '../../utils/GameUtils';\nimport GameManager from './GameManager';\n\nclass GameGlobalAPI {\n  private gameManager: GameManager | undefined;\n\n  static instance: GameGlobalAPI;\n\n  private constructor() {\n    this.gameManager = undefined;\n  }\n\n  static getInstance() {\n    if (!GameGlobalAPI.instance) {\n      GameGlobalAPI.instance = new GameGlobalAPI();\n    }\n    return GameGlobalAPI.instance;\n  }\n\n  /////////////////////\n  //   Game Manager  //\n  /////////////////////\n\n  public getGameManager = () => mandatory(this.gameManager) as GameManager;\n\n  public setGameManager(gameManagerRef: GameManager): void {\n    this.gameManager = gameManagerRef;\n  }\n\n  public getCurrLocId(): LocationId {\n    return this.getGameManager().currentLocationId;\n  }\n\n  public getLocationAtId(locationId: LocationId): GameLocation {\n    return this.getGameManager().getCurrentCheckpoint().map.getLocationAtId(locationId);\n  }\n\n  public isStorySimulator() {\n    return this.getGameManager().isStorySimulator;\n  }\n\n  public getAccountInfo() {\n    return this.getGameManager().getAccountInfo();\n  }\n\n  /////////////////////\n  //    Game Mode    //\n  /////////////////////\n\n  public getModesByLocId(locationId: LocationId): GameMode[] {\n    return this.getGameManager().stateManager.getLocationMode(locationId);\n  }\n\n  public addLocationMode(locationId: LocationId, mode: GameMode): void {\n    this.getGameManager().stateManager.addLocationMode(locationId, mode);\n  }\n\n  public removeLocationMode(locationId: LocationId, mode: GameMode): void {\n    this.getGameManager().stateManager.removeLocationMode(locationId, mode);\n  }\n\n  /////////////////////\n  //  Game Locations //\n  /////////////////////\n\n  public hasLocationUpdate(locationId: LocationId, mode?: GameMode): boolean | undefined {\n    return this.getGameManager().stateManager.hasLocationUpdate(locationId, mode);\n  }\n\n  public changeLocationTo(locationName: string) {\n    this.getGameManager().changeLocationTo(locationName);\n  }\n\n  /////////////////////\n  //   Interaction   //\n  /////////////////////\n\n  public hasTriggeredInteraction(id: string): boolean | undefined {\n    return this.getGameManager().stateManager.hasTriggeredInteraction(id);\n  }\n\n  public triggerInteraction(id: string): void {\n    this.getGameManager().stateManager.triggerInteraction(id);\n  }\n\n  /////////////////////\n  //    Game Attr    //\n  /////////////////////\n\n  public getLocationAttr(attr: GameLocationAttr, locationId: LocationId): ItemId[] {\n    return this.getGameManager().stateManager.getLocationAttr(attr, locationId);\n  }\n\n  public addLocationAttr(attr: GameLocationAttr, locationId: LocationId, attrElem: string): void {\n    this.getGameManager().stateManager.addLocationAttr(attr, locationId, attrElem);\n  }\n\n  public removeLocationAttr(\n    attr: GameLocationAttr,\n    locationId: LocationId,\n    attrElem: string\n  ): void {\n    return this.getGameManager().stateManager.removeLocationAttr(attr, locationId, attrElem);\n  }\n\n  public subscribeState(observer: StateObserver) {\n    this.getGameManager().stateManager.subscribe(observer);\n  }\n\n  public unsubscribeState(observer: StateObserver) {\n    this.getGameManager().stateManager.unsubscribe(observer);\n  }\n\n  /////////////////////\n  //  Game Objects   //\n  /////////////////////\n\n  public makeObjectGlow(objectId: ItemId) {\n    this.getGameManager().objectManager.makeObjectGlow(objectId);\n  }\n\n  public makeObjectBlink(objectId: ItemId) {\n    this.getGameManager().objectManager.makeObjectBlink(objectId);\n  }\n\n  public getObjPropertyMap() {\n    return this.getGameManager().stateManager.getObjPropertyMap();\n  }\n\n  public setObjProperty(id: ItemId, newObjProp: ObjectProperty) {\n    this.getGameManager().stateManager.setObjProperty(id, newObjProp);\n  }\n\n  public enableObjectAction(callbacks: any) {\n    this.getGameManager().objectManager.enableObjectAction(callbacks);\n  }\n\n  public disableObjectAction() {\n    this.getGameManager().objectManager.disableObjectAction();\n  }\n\n  /////////////////////\n  //    Game BBox    //\n  /////////////////////\n\n  public getBBoxPropertyMap() {\n    return this.getGameManager().stateManager.getBBoxPropertyMap();\n  }\n\n  public setBBoxProperty(id: ItemId, newBBoxProp: BBoxProperty) {\n    this.getGameManager().stateManager.setBBoxProperty(id, newBBoxProp);\n  }\n\n  public enableBBoxAction(callbacks: any) {\n    this.getGameManager().boundingBoxManager.enableBBoxAction(callbacks);\n  }\n\n  public disableBBoxAction() {\n    this.getGameManager().boundingBoxManager.disableBBoxAction();\n  }\n\n  /////////////////////\n  //  Game Objective //\n  /////////////////////\n\n  public isAllComplete(): boolean {\n    return this.getGameManager().stateManager.isAllComplete();\n  }\n\n  public isObjectiveComplete(key: string): boolean {\n    return this.getGameManager().stateManager.isObjectiveComplete(key);\n  }\n\n  public areObjectivesComplete(keys: string[]): boolean {\n    return this.getGameManager().stateManager.areObjectivesComplete(keys);\n  }\n\n  public completeObjective(key: string): void {\n    this.getGameManager().stateManager.completeObjective(key);\n  }\n\n  /////////////////////\n  //   User State    //\n  /////////////////////\n\n  public addToUserStateList(listName: string, id: string): void {\n    this.getGameManager().userStateManager.addToList(listName, id);\n  }\n\n  public async existsInUserStateList(listName: string, id: string): Promise<boolean> {\n    return await this.getGameManager().userStateManager.doesIdExistInList(listName, id);\n  }\n\n  /////////////////////\n  //   Game Layer    //\n  /////////////////////\n\n  public clearSeveralLayers(layerTypes: Layer[], withFade = false) {\n    this.getGameManager().layerManager.clearSeveralLayers(layerTypes, withFade);\n  }\n\n  public addContainerToLayer(layer: Layer, gameObj: Phaser.GameObjects.GameObject) {\n    this.getGameManager().layerManager.addToLayer(layer, gameObj);\n  }\n\n  public fadeInLayer(layer: Layer, fadeDuration?: number) {\n    this.getGameManager().layerManager.fadeInLayer(layer, fadeDuration);\n  }\n\n  public fadeOutLayer(layer: Layer, fadeDuration?: number) {\n    this.getGameManager().layerManager.fadeOutLayer(layer, fadeDuration);\n  }\n  /////////////////////\n  //  Location Notif //\n  /////////////////////\n\n  public async bringUpUpdateNotif(message: string) {\n    this.getGameManager();\n    await displayNotification(message);\n  }\n\n  /////////////////////\n  //   Story Action  //\n  /////////////////////\n\n  public async processGameActions(actionIds: ItemId[] | undefined) {\n    await this.getGameManager().phaseManager.pushPhase(GamePhaseType.Sequence);\n    await this.getGameManager().actionManager.processGameActions(actionIds);\n    await this.getGameManager().phaseManager.popPhase();\n  }\n\n  public async processGameActionsInSamePhase(actionIds: ItemId[] | undefined) {\n    await this.getGameManager().actionManager.processGameActions(actionIds);\n  }\n\n  /////////////////////\n  //   Dialogue      //\n  /////////////////////\n\n  public async showDialogue(dialogueId: ItemId) {\n    await this.getGameManager().phaseManager.pushPhase(GamePhaseType.Sequence);\n    await this.getGameManager().dialogueManager.showDialogue(dialogueId);\n    await this.getGameManager().phaseManager.popPhase();\n  }\n\n  public async showDialogueInSamePhase(dialogueId: ItemId) {\n    await this.getGameManager().dialogueManager.showDialogue(dialogueId);\n  }\n\n  public getDialogue(dialogueId: ItemId) {\n    return this.getGameManager().getCurrentCheckpoint().map.getDialogues().get(dialogueId);\n  }\n\n  /////////////////////\n  //   Collectible   //\n  /////////////////////\n\n  public async obtainCollectible(collectibleId: string) {\n    this.getGameManager().userStateManager.addToList('collectibles', collectibleId);\n  }\n\n  /////////////////////\n  //     Pop Up      //\n  /////////////////////\n\n  public displayPopUp(itemId: ItemId, position: GamePosition, duration?: number) {\n    this.getGameManager().popUpManager.displayPopUp(itemId, position, duration);\n  }\n\n  public destroyAllPopUps() {\n    this.getGameManager().popUpManager.destroyAllPopUps();\n  }\n\n  public async destroyPopUp(position: GamePosition) {\n    this.getGameManager().popUpManager.destroyPopUp(position);\n  }\n\n  /////////////////////\n  //    Save Game    //\n  /////////////////////\n\n  public async saveGame() {\n    await this.getGameManager().saveManager.saveGame();\n  }\n\n  public async saveSettings(settingsJson: SettingsJson) {\n    await this.getGameManager().saveManager.saveSettings(settingsJson);\n  }\n\n  public getLoadedUserState() {\n    return this.getGameManager().saveManager.getLoadedUserState();\n  }\n\n  /////////////////////\n  //      Sound      //\n  /////////////////////\n\n  public playSound(soundKey: AssetKey) {\n    this.getGameManager().soundManager.playSound(soundKey);\n  }\n\n  public playBgMusic(soundKey: AssetKey) {\n    this.getGameManager().soundManager.playSound(soundKey);\n  }\n\n  public async stopCurrBgMusic(fadeDuration?: number) {\n    this.getGameManager().soundManager.stopCurrBgMusic(fadeDuration);\n  }\n\n  public async stopAllSound() {\n    this.getGameManager().soundManager.stopAllSound();\n  }\n\n  public pauseCurrBgMusic() {\n    this.getGameManager().soundManager.pauseCurrBgMusic();\n  }\n\n  public continueCurrBgMusic() {\n    this.getGameManager().soundManager.continueCurrBgMusic();\n  }\n\n  public applySoundSettings(userSetting: UserSaveState) {\n    this.getGameManager().soundManager.applyUserSettings(userSetting);\n  }\n\n  /////////////////////\n  //      Input      //\n  /////////////////////\n\n  public enableKeyboardInput(active: boolean) {\n    this.getGameManager().inputManager.enableKeyboardInput(active);\n  }\n\n  public enableMouseInput(active: boolean) {\n    this.getGameManager().inputManager.enableMouseInput(active);\n  }\n\n  /////////////////////\n  //      Phases     //\n  /////////////////////\n\n  public async popPhase() {\n    await this.getGameManager().phaseManager.popPhase();\n  }\n\n  public async pushPhase(gamePhaseType: GamePhaseType) {\n    await this.getGameManager().phaseManager.pushPhase(gamePhaseType);\n  }\n\n  public async swapPhase(gamePhaseType: GamePhaseType) {\n    await this.getGameManager().phaseManager.swapPhase(gamePhaseType);\n  }\n\n  public isCurrentPhase(gamePhaseType: GamePhaseType) {\n    return this.getGameManager().phaseManager.isCurrentPhase(gamePhaseType);\n  }\n\n  /////////////////////\n  //   Background    //\n  /////////////////////\n\n  public renderBackgroundLayerContainer(locationId: LocationId) {\n    this.getGameManager().backgroundManager.renderBackgroundLayerContainer(locationId);\n  }\n\n  /////////////////////\n  //   Characters    //\n  /////////////////////\n\n  public hideCharacterFromMap(characterId: ItemId) {\n    this.getGameManager().characterManager.hideCharacterFromMap(characterId);\n  }\n\n  public showCharacterOnMap(characterId: ItemId) {\n    this.getGameManager().characterManager.showCharacterOnMap(characterId);\n  }\n\n  public createCharacterSprite(\n    characterId: ItemId,\n    overrideExpression?: string,\n    overridePosition?: GamePosition\n  ) {\n    return this.getGameManager().characterManager.createCharacterSprite(\n      characterId,\n      overrideExpression,\n      overridePosition\n    );\n  }\n\n  public getCharacterById(characterId: ItemId) {\n    return this.getGameManager().characterManager.getCharacterById(characterId);\n  }\n}\n\nexport default GameGlobalAPI;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport { Constants } from '../commons/CommonConstants';\nimport { fadeIn, fadeOut } from '../effects/FadeEffect';\nimport { sleep } from '../utils/GameUtils';\nimport { defaultLayerSequence, Layer } from './GameLayerTypes';\n\nclass GameLayerManager {\n  private mainLayer: Phaser.GameObjects.Container | undefined;\n  private layers: Map<Layer, Phaser.GameObjects.Container>;\n\n  constructor() {\n    this.mainLayer = undefined;\n    this.layers = new Map<Layer, Phaser.GameObjects.Container>();\n  }\n\n  public initialise(scene: Phaser.Scene) {\n    this.mainLayer = new Phaser.GameObjects.Container(scene, 0, 0);\n    scene.add.existing(this.mainLayer);\n    for (const layerType of defaultLayerSequence) {\n      const layerContainer = new Phaser.GameObjects.Container(scene, 0, 0);\n      this.layers.set(layerType, layerContainer);\n      this.mainLayer.add(layerContainer);\n    }\n  }\n\n  public getLayer(layerType: Layer) {\n    return this.layers.get(layerType);\n  }\n\n  public hideLayer(layerType: Layer) {\n    const layerToHide = this.layers.get(layerType);\n    layerToHide && layerToHide.setVisible(false) && layerToHide.setAlpha(0);\n  }\n\n  public showLayer(layerType: Layer) {\n    const layerToHide = this.layers.get(layerType);\n    layerToHide && layerToHide.setVisible(true) && layerToHide.setAlpha(1);\n  }\n\n  public async fadeInLayer(layerType: Layer, fadeDuration = Constants.fadeDuration) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const layerToFadeIn = this.layers.get(layerType)!;\n\n    layerToFadeIn.setAlpha(0);\n    gameManager.tweens.add(fadeIn([layerToFadeIn], fadeDuration));\n    sleep(fadeDuration);\n  }\n\n  public async fadeOutLayer(layerType: Layer, fadeDuration = Constants.fadeDuration) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const layerToFadeOut = this.layers.get(layerType)!;\n\n    layerToFadeOut.setAlpha(1);\n    gameManager.tweens.add(fadeOut([layerToFadeOut], fadeDuration));\n    sleep(fadeDuration);\n  }\n\n  public addToLayer(layerType: Layer, gameObject: Phaser.GameObjects.GameObject) {\n    const layerContainer = this.layers.get(layerType);\n    if (!layerContainer) {\n      return;\n    }\n    layerContainer.add(gameObject);\n  }\n\n  public clearSeveralLayers(layerTypes: Layer[], withFade = false) {\n    layerTypes.forEach(layerType => this.clearLayerContents(layerType));\n  }\n\n  public clearAllLayers() {\n    this.layers.forEach((_, layerType) => this.clearLayerContents(layerType));\n  }\n\n  public clearLayerContents(layerType: Layer) {\n    const layerContainer = this.layers.get(layerType);\n    if (!layerContainer) {\n      return;\n    }\n    while (layerContainer.list.length) {\n      layerContainer.list[0].destroy();\n    }\n  }\n}\n\nexport default GameLayerManager;\n","import { SourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport { AssetMap, SoundAsset } from '../assets/AssetsTypes';\nimport { AssetKey, AssetPath } from '../commons/CommonTypes';\nimport { UserSaveState } from '../save/GameSaveTypes';\nimport { mandatory, sleep, toS3Path } from '../utils/GameUtils';\nimport { bgMusicFadeDuration, musicFadeOutTween } from './GameSoundTypes';\n\nclass GameSoundManager {\n  private baseSoundManager: Phaser.Sound.BaseSoundManager | undefined;\n  private scene: Phaser.Scene | undefined;\n  private parentGame: SourceAcademyGame | undefined;\n\n  public initialise(scene: Phaser.Scene, parentGame: SourceAcademyGame) {\n    this.scene = scene;\n    this.parentGame = parentGame;\n    this.baseSoundManager = this.parentGame.sound;\n    this.baseSoundManager.pauseOnBlur = true;\n  }\n\n  public applyUserSettings(userSaveState: UserSaveState) {\n    this.setGlobalVolume(userSaveState.settings.volume);\n  }\n\n  public renderBackgroundMusic(bgmKey: AssetKey) {\n    this.stopCurrBgMusic();\n    this.playBgMusic(bgmKey);\n  }\n\n  public clearSoundAssets() {\n    this.getParentGame().clearSoundAssetMap();\n  }\n\n  public loadSounds(soundAssets: SoundAsset[]) {\n    soundAssets.forEach(asset => {\n      this.getParentGame().addSoundAsset(asset);\n      this.loadSound(asset.key, toS3Path(asset.path));\n    });\n  }\n\n  public loadSoundAssetMap(assetMap: AssetMap<SoundAsset>) {\n    Object.entries(assetMap).forEach(asset => {\n      this.getParentGame().addSoundAsset(asset[1]);\n      this.loadSound(asset[1].key, toS3Path(asset[1].path));\n    });\n  }\n\n  private loadSound(assetKey: AssetKey, assetPath: AssetPath) {\n    if (this.scene) {\n      this.scene.load.audio(assetKey, assetPath);\n    }\n  }\n\n  public playSound(soundKey: AssetKey) {\n    if (this.scene) {\n      const soundAsset = this.getParentGame().getSoundAsset(soundKey);\n      if (soundAsset) {\n        this.getBaseSoundManager().play(soundAsset.key, soundAsset.config);\n      }\n    }\n  }\n\n  public playBgMusic(soundKey: AssetKey, volume = 1.5) {\n    // If same music is already playing, skip\n    const currBgMusicKey = this.getParentGame().getCurrBgMusicKey();\n    if (currBgMusicKey && currBgMusicKey === soundKey) {\n      return;\n    }\n\n    const soundAsset = this.getParentGame().getSoundAsset(soundKey);\n\n    if (soundAsset) {\n      this.getBaseSoundManager().play(soundAsset.key, { ...soundAsset.config, volume });\n      this.getParentGame().setCurrBgMusicKey(soundAsset.key);\n    }\n  }\n\n  public async stopCurrBgMusic(fadeDuration: number = bgMusicFadeDuration) {\n    const currBgMusicKey = this.getParentGame().getCurrBgMusicKey();\n    this.getParentGame().setCurrBgMusicKey(undefined);\n    if (this.scene && currBgMusicKey) {\n      // Fade out current music\n      const currBgMusic = this.getBaseSoundManager().get(currBgMusicKey);\n      this.scene.tweens.add({\n        targets: currBgMusic,\n        ...musicFadeOutTween,\n        duration: fadeDuration\n      });\n\n      await sleep(fadeDuration);\n      this.getBaseSoundManager().stopByKey(currBgMusicKey);\n    }\n  }\n\n  public async stopAllSound() {\n    this.getBaseSoundManager().stopAll();\n  }\n\n  public pauseCurrBgMusic() {\n    const currBgMusicKey = this.getParentGame().getCurrBgMusicKey();\n    if (this.scene && currBgMusicKey) {\n      const currBgMusic = this.getBaseSoundManager().get(currBgMusicKey);\n      if (currBgMusic.isPlaying) currBgMusic.pause();\n    }\n  }\n\n  public continueCurrBgMusic() {\n    const currBgMusicKey = this.getParentGame().getCurrBgMusicKey();\n    if (this.scene && currBgMusicKey) {\n      const currBgMusic = this.getBaseSoundManager().get(currBgMusicKey);\n      if (currBgMusic.isPaused) currBgMusic.play();\n    }\n  }\n\n  public setGlobalVolume(volume: number) {\n    this.getBaseSoundManager().volume = volume;\n  }\n\n  public getBaseSoundManager = () =>\n    mandatory(this.baseSoundManager) as Phaser.Sound.BaseSoundManager;\n  public getParentGame = () => mandatory(this.parentGame) as SourceAcademyGame;\n}\n\nexport default GameSoundManager;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const chapterIndexStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  fill: HexColor.offWhite,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const chapterTitleStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 35,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const chapterActionAltStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 20,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nconst marginX = 0;\nconst marginY = 100;\nconst imageRectWidth = 500;\n\nconst chapConstants = {\n  defaultScrollSpeed: 20,\n  buttonsYOffset: 200,\n  buttonsXOffset: 100,\n  altTextXOffset: 40,\n  altTextYOffset: -40,\n  frameXOffset: 15,\n  frameYOffset: -10,\n  indexYOffset: -160,\n  titleYOffset: -100,\n  arrowXOffset: 875,\n  maskRect: {\n    x: -screenCenter.x + marginX,\n    y: -screenCenter.y + marginY,\n    width: screenSize.x - marginX * 2,\n    height: screenSize.y - marginY * 2\n  },\n  imageRect: {\n    width: imageRectWidth,\n    height: 700\n  },\n  imageDist: imageRectWidth + 150\n};\n\nexport default chapConstants;\n","import { HexColor } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport { Constants } from './CommonConstants';\nimport { BitmapFontStyle } from './CommonTypes';\n\nconst textPad = 10;\n\nclass CommonTextHover extends Phaser.GameObjects.Container {\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    text: string,\n    style: BitmapFontStyle = Constants.defaultFontStyle\n  ) {\n    super(scene, x, y);\n    this.renderTextHover(text, style);\n  }\n\n  private renderTextHover(text: string, style: BitmapFontStyle) {\n    const hoverTextBg = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      0,\n      0,\n      text.length * style.size * 0.7,\n      style.size * 2,\n      HexColor.darkBlue\n    )\n      .setOrigin(0.0, 0.5)\n      .setAlpha(0.8);\n    const hoverText = createBitmapText(this.scene, text, textPad, 0, style).setOrigin(0.0, 0.5);\n    this.add([hoverTextBg, hoverText]);\n    this.setVisible(false);\n  }\n}\n\nexport default CommonTextHover;\n","import { AssetKey, AssetPath } from 'src/features/game/commons/CommonTypes';\n\nexport const loadImage = (scene: Phaser.Scene, assetKey: AssetKey, assetPath: AssetPath) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.textures.get(assetKey).key !== '__MISSING') {\n      resolve(assetKey);\n    } else {\n      scene.load.image(assetKey, assetPath);\n      scene.load.once('filecomplete', resolve);\n      scene.load.start();\n    }\n  });\n\nexport const loadText = (scene: Phaser.Scene, assetKey: AssetKey, assetPath: AssetPath) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.cache.text.exists(assetKey)) {\n      resolve(assetKey);\n    } else {\n      scene.load.text(assetKey, assetPath);\n      scene.load.once('filecomplete', resolve);\n      scene.load.start();\n    }\n  });\n\nexport const loadSound = (scene: Phaser.Scene, assetKey: AssetKey, assetPath: AssetPath) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.sound.get(assetKey) !== null) {\n      resolve(assetKey);\n    } else {\n      scene.load.audio(assetKey, assetPath);\n      scene.load.once('filecomplete', resolve);\n      scene.load.start();\n    }\n  });\n","import { AssetMap, TextAsset } from './AssetsTypes';\n\nconst TextAssets: AssetMap<TextAsset> = {\n  defaultCheckpoint: { key: 'default-chap', path: '../assets/defaultCheckpoint.txt' }\n};\n\nexport default TextAssets;\n","import { GameAction } from '../action/GameActionTypes';\nimport { SoundAsset } from '../assets/AssetsTypes';\nimport { BBoxProperty } from '../boundingBoxes/GameBoundingBoxTypes';\nimport { Character } from '../character/GameCharacterTypes';\nimport { CollectibleProperty } from '../collectibles/GameCollectiblesTypes';\nimport { AssetKey, AssetPath, ItemId } from '../commons/CommonTypes';\nimport { Dialogue } from '../dialogue/GameDialogueTypes';\nimport { GameLocation, GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport { ObjectProperty } from '../objects/GameObjectTypes';\nimport { mandatory } from '../utils/GameUtils';\n\nclass GameMap {\n  private soundAssets: SoundAsset[];\n  private mapAssets: Map<AssetKey, AssetPath>;\n\n  private locations: Map<LocationId, GameLocation>;\n  private talkTopics: Map<ItemId, Dialogue>;\n  private objects: Map<ItemId, ObjectProperty>;\n  private boundingBoxes: Map<ItemId, BBoxProperty>;\n  private characters: Map<ItemId, Character>;\n  private actions: Map<ItemId, GameAction>;\n  private collectibles: Map<ItemId, CollectibleProperty>;\n  private startActions: ItemId[];\n  private endActions: ItemId[];\n\n  constructor() {\n    this.soundAssets = [];\n    this.mapAssets = new Map<AssetKey, AssetPath>();\n\n    this.locations = new Map<LocationId, GameLocation>();\n    this.talkTopics = new Map<ItemId, Dialogue>();\n    this.objects = new Map<ItemId, ObjectProperty>();\n    this.boundingBoxes = new Map<ItemId, BBoxProperty>();\n    this.characters = new Map<ItemId, Character>();\n    this.actions = new Map<ItemId, GameAction>();\n    this.collectibles = new Map<ItemId, CollectibleProperty>();\n    this.startActions = [];\n    this.endActions = [];\n  }\n\n  public addSoundAsset(soundAsset: SoundAsset) {\n    this.soundAssets.push(soundAsset);\n  }\n\n  public addMapAsset(assetKey: AssetKey, assetPath: AssetPath) {\n    this.mapAssets.set(assetKey, assetPath);\n  }\n\n  public getMapAssets(): Map<AssetKey, AssetPath> {\n    return this.mapAssets;\n  }\n\n  public addLocation(locationId: LocationId, location: GameLocation): void {\n    this.locations.set(locationId, location);\n  }\n\n  public setModesAt(id: LocationId, modes: GameMode[]) {\n    this.getLocationAtId(id).modes = new Set(modes);\n  }\n\n  public setNavigationFrom(id: LocationId, navigation: string[]) {\n    this.getLocationAtId(id).navigation = new Set(navigation);\n  }\n\n  public getNavigationFrom(id: LocationId): Set<string> | undefined {\n    return this.getLocationAtId(id).navigation;\n  }\n\n  public setStartActions(actionIds: ItemId[]) {\n    this.startActions = actionIds;\n  }\n\n  public setEndActions(actionIds: ItemId[]) {\n    this.endActions = actionIds;\n  }\n\n  public getStartActions() {\n    return this.startActions;\n  }\n\n  public getEndActions() {\n    return this.endActions;\n  }\n\n  public getLocations(): Map<LocationId, GameLocation> {\n    return this.locations;\n  }\n\n  public getObjects(): Map<ItemId, ObjectProperty> {\n    return this.objects;\n  }\n\n  public getBBoxes(): Map<ItemId, BBoxProperty> {\n    return this.boundingBoxes;\n  }\n\n  public getDialogues(): Map<ItemId, Dialogue> {\n    return this.talkTopics;\n  }\n\n  public getCharacters(): Map<ItemId, Character> {\n    return this.characters;\n  }\n\n  public getActions(): Map<ItemId, GameAction> {\n    return this.actions;\n  }\n\n  public getSoundAssets(): SoundAsset[] {\n    return this.soundAssets;\n  }\n\n  public getCollectibles(): Map<ItemId, CollectibleProperty> {\n    return this.collectibles;\n  }\n\n  public addItemToMap<T>(listName: GameLocationAttr, itemId: string, item: T) {\n    this[listName].set(itemId, item);\n  }\n\n  public setItemAt<T>(locId: LocationId, listName: GameLocationAttr, itemId: string) {\n    const location = this.getLocationAtId(locId);\n    location[listName].add(itemId);\n  }\n\n  public setBGMusicAt(locId: LocationId, soundKey: AssetKey) {\n    const location = this.getLocationAtId(locId);\n    location.bgmKey = soundKey;\n  }\n\n  public getLocationAtId = (locId: LocationId) =>\n    mandatory(this.locations.get(locId)) as GameLocation;\n}\n\nexport default GameMap;\n","class GameObjective {\n  private objective: Map<string, boolean>;\n  private totalNumOfObjectives: number;\n  private numOfCompletedObjectives: number;\n\n  constructor() {\n    this.objective = new Map<string, boolean>();\n    this.totalNumOfObjectives = 0;\n    this.numOfCompletedObjectives = 0;\n  }\n\n  public setObjective(key: string, value: boolean): void {\n    const prevState = this.objective.get(key);\n    this.objective.set(key, value);\n    // Handle repeated calls\n    if (prevState !== undefined && prevState !== value) {\n      this.numOfCompletedObjectives++;\n    }\n  }\n\n  public addObjective(key: string): void {\n    this.objective.set(key, false);\n    this.totalNumOfObjectives++;\n  }\n\n  public addObjectives(keys: string[]): void {\n    keys.forEach(key => this.addObjective(key));\n  }\n\n  public isAllComplete(): boolean {\n    return this.numOfCompletedObjectives >= this.totalNumOfObjectives;\n  }\n\n  public getObjectiveState(key: string): boolean | undefined {\n    return this.objective.get(key);\n  }\n\n  public getObjectives() {\n    return this.objective;\n  }\n\n  public setObjectives(objective: Map<string, boolean>) {\n    this.objective = objective;\n  }\n}\n\nexport default GameObjective;\n","export default class StringUtils {\n  /*\n   * Splits text into paragraphs containing header and body\n   */\n  public static splitToParagraph(lines: string[]) {\n    const paragraphHeaderAndBodyLines: [string, string[]][] = [];\n    lines.forEach((line: string) => {\n      if (line.startsWith('\\t') || line.startsWith('    ')) {\n        const content = line.startsWith('\\t') ? line.slice(1) : line.slice(4);\n        if (paragraphHeaderAndBodyLines.length === 0) {\n          console.error('Unexpected tabs');\n          return;\n        }\n        const bodyLines = paragraphHeaderAndBodyLines[paragraphHeaderAndBodyLines.length - 1][1];\n        bodyLines.push(content);\n        return;\n      }\n      paragraphHeaderAndBodyLines.push([line.trim(), []]);\n    });\n    return paragraphHeaderAndBodyLines;\n  }\n\n  /*\n   * Given an array of lines, returns a Map where the keys are the headings\n   * and the value are the lines below each heading.\n   */\n  public static mapByHeader(\n    lines: string[],\n    isHeaderFunction: (line: string) => boolean\n  ): Map<string, string[]> {\n    const map = new Map<string, string[]>();\n    if (!isHeaderFunction(lines[0])) {\n      map.set('0', lines);\n      return map;\n    }\n    let currHeader = '';\n    lines.forEach(line => {\n      if (isHeaderFunction(line)) {\n        currHeader = line;\n        map.set(line, []);\n        return;\n      }\n      map.get(currHeader)!.push(line);\n    });\n    return map;\n  }\n\n  /*\n   * Split using punctuation, trim, and limit split to number of characters\n   * Example: \"cat,dog,   cow, goat\" with limit 2 -> [\"cat\", \"dog\", \"cow, goat\"]\n   */\n  public static splitByChar(line: string, sep: string, limit?: number): string[] {\n    if (limit) {\n      return line\n        .split(new RegExp((sep + '(.+)').repeat(limit)))\n        .map((phrase: string) => phrase.trim());\n    } else {\n      return line.split(sep).map((phrase: string) => phrase.trim());\n    }\n  }\n\n  /*\n   * Splits text into string array and removes lines with only newlines\n   */\n  public static splitToLines(text: string): string[] {\n    return text\n      .split('\\n')\n      .map(line => line.trimRight())\n      .filter(line => line !== '');\n  }\n\n  /*\n   * Capitalise first letter\n   */\n  public static capitalize(word: string) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }\n\n  /*\n   * Turns snake case to capitalized case\n   * Example: snake_case_to_capitalized -> Snake Case To Capitalized\n   */\n  public static toCapitalizedWords(name: string) {\n    const words = name.match(/[A-Za-z][a-z]*/g) || [];\n\n    return words.map(StringUtils.capitalize).join(' ');\n  }\n}\n","import { ItemId, TrackInteraction } from '../commons/CommonTypes';\nimport { GameStateStorage } from '../state/GameStateTypes';\n\nexport enum GameActionType {\n  MoveCharacter = 'MoveCharacter',\n  UpdateCharacter = 'UpdateCharacter',\n  ObtainCollectible = 'ObtainCollectible',\n  CompleteObjective = 'CompleteObjective',\n  LocationChange = 'LocationChange',\n  AddItem = 'AddItem',\n  RemoveItem = 'RemoveItem',\n  BringUpDialogue = 'BringUpDialogue',\n  ChangeBackground = 'ChangeBackground',\n  RemoveLocationMode = 'RemoveLocationMode',\n  AddLocationMode = 'AddLocationMode',\n  AddPopup = 'AddPopup',\n  MakeObjectBlink = 'MakeObjectBlink',\n  MakeObjectGlow = 'MakeObjectGlow'\n}\n\nexport interface IGameActionable {\n  actionIds?: ItemId[];\n}\n\nexport type ActionCondition = {\n  state: GameStateStorage;\n  conditionParams: any;\n  boolean: boolean;\n};\n\nexport type GameAction = TrackInteraction & {\n  actionType: GameActionType;\n  actionParams: any;\n  actionConditions: ActionCondition[];\n  isRepeatable: boolean;\n};\n","import { IGameActionable } from '../action/GameActionTypes';\nimport { AssetKey, ItemId } from '../commons/CommonTypes';\nimport { GameMode } from '../mode/GameModeTypes';\n\nexport type LocationId = string;\n\nexport type GameLocation = IGameActionable & {\n  id: LocationId;\n  name: string;\n  assetKey: string;\n  modes: Set<GameMode>;\n  navigation: Set<LocationId>;\n  talkTopics: Set<ItemId>;\n  objects: Set<ItemId>;\n  boundingBoxes: Set<ItemId>;\n  bgmKey: AssetKey;\n  characters: Set<ItemId>;\n};\n\nexport enum GameLocationAttr {\n  navigation = 'navigation',\n  talkTopics = 'talkTopics',\n  objects = 'objects',\n  boundingBoxes = 'boundingBoxes',\n  characters = 'characters',\n  actions = 'actions',\n  bgmKey = 'bgmKey',\n  collectibles = 'collectibles'\n}\n","import { LocationId } from '../location/GameMapTypes';\n\nexport enum GameStateStorage {\n  UserState = 'UserState',\n  ChecklistState = 'ChecklistState'\n}\n\nexport type UserState = {\n  collectibles: string[];\n  assessments?: string[];\n};\n\nexport type StateObserver = {\n  observerId: string;\n  notify: (locationId: LocationId) => void;\n};\n\nexport type StateSubject = {\n  subscribers: Array<StateObserver>;\n  update: (locationId: LocationId) => void;\n  subscribe: (observer: StateObserver) => void;\n  unsubscribe: (observer: StateObserver) => void;\n};\n","import GameInputManager from '../input/GameInputManager';\nimport GameLayerManager from '../layer/GameLayerManager';\nimport GameSoundManager from '../sound/GameSoundManager';\n\nexport type BitmapFontStyle = {\n  key: string;\n  size: number;\n  fill: number;\n  align: number;\n};\n\nexport type GameSprite = {\n  assetKey: string;\n  assetXPos: number;\n  assetYPos: number;\n};\n\nexport type ItemId = string;\nexport type AssetKey = string;\nexport type AssetPath = string;\n\nexport type TrackInteraction = {\n  isInteractive: boolean;\n  interactionId: string;\n};\n\nexport interface IGameUI {\n  activateUI: () => Promise<void> | void;\n  deactivateUI: () => Promise<void> | void;\n}\n\nexport enum GamePosition {\n  Left = 'Left',\n  Middle = 'Middle',\n  Right = 'Right'\n}\n\nexport type TextConfig = { x: number; y: number; oriX: number; oriY: number };\n\nexport interface IBaseScene extends Phaser.Scene {\n  soundManager: GameSoundManager;\n  layerManager: GameLayerManager;\n  inputManager: GameInputManager;\n  cleanUp: () => void;\n}\n","import { GamePhaseType } from '../phase/GamePhaseTypes';\n\nexport enum GameMode {\n  Move = 'Move',\n  Explore = 'Explore',\n  Talk = 'Talk',\n  Menu = 'Menu'\n}\n\nexport const gameModeToPhase = {\n  Move: GamePhaseType.Move,\n  Explore: GamePhaseType.Explore,\n  Talk: GamePhaseType.Talk,\n  Menu: GamePhaseType.Menu\n};\n","import { GameActionType } from '../action/GameActionTypes';\nimport { GamePosition } from '../commons/CommonTypes';\nimport { GameLocationAttr } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport { GameStateStorage } from '../state/GameStateTypes';\n\nconst stringToPositionMap = {\n  left: GamePosition.Left,\n  middle: GamePosition.Middle,\n  right: GamePosition.Right\n};\n\nconst stringToGameModeMap = {\n  talk: GameMode.Talk,\n  explore: GameMode.Explore,\n  move: GameMode.Move,\n  menu: GameMode.Menu\n};\n\nconst stringToLocAttrMap = {\n  navigation: GameLocationAttr.navigation,\n  talkTopics: GameLocationAttr.talkTopics,\n  objects: GameLocationAttr.objects,\n  boundingBoxes: GameLocationAttr.boundingBoxes,\n  characters: GameLocationAttr.characters,\n  actions: GameLocationAttr.actions,\n  bgmKey: GameLocationAttr.bgmKey,\n  collectibles: GameLocationAttr.collectibles\n};\n\nconst stringToActionTypeMap = {\n  move_character: GameActionType.MoveCharacter,\n  update_character: GameActionType.UpdateCharacter,\n  obtain_collectible: GameActionType.ObtainCollectible,\n  complete_objective: GameActionType.CompleteObjective,\n  change_location: GameActionType.LocationChange,\n  add_item: GameActionType.AddItem,\n  remove_item: GameActionType.RemoveItem,\n  change_background: GameActionType.ChangeBackground,\n  show_dialogue: GameActionType.BringUpDialogue,\n  add_mode: GameActionType.AddLocationMode,\n  remove_mode: GameActionType.RemoveLocationMode,\n  add_popup: GameActionType.AddPopup,\n  make_object_glow: GameActionType.MakeObjectGlow,\n  make_object_blink: GameActionType.MakeObjectBlink\n};\n\nconst stringToGameStateStorageMap = {\n  checklist: GameStateStorage.ChecklistState,\n  userstate: GameStateStorage.UserState\n};\n\nexport default class ParserConverter {\n  public static stringToPosition(str: string) {\n    return stringToPositionMap[str] || GamePosition.Middle;\n  }\n\n  public static stringToGameMode(str: string) {\n    const result = stringToGameModeMap[str];\n    if (!result) {\n      throw new Error(`Invalid location mode, ${str}`);\n    }\n    return result;\n  }\n\n  public static stringToActionType(str: string) {\n    const result = stringToActionTypeMap[str];\n    if (!result) {\n      throw new Error(`Invalid action type, ${str}`);\n    }\n    return result;\n  }\n\n  public static stringToGameStateStorage(str: string) {\n    const result = stringToGameStateStorageMap[str];\n    if (!result) {\n      throw new Error(`Invalid condition type, ${str}`);\n    }\n    return result;\n  }\n\n  public static stringToLocAttr(str: string) {\n    const result = stringToLocAttrMap[str];\n    if (!result) {\n      throw new Error(`Invalid entity type, ${str}`);\n    }\n    return result;\n  }\n}\n","import { ItemId } from '../commons/CommonTypes';\nimport { GameLocationAttr } from '../location/GameMapTypes';\nimport Parser from './Parser';\n\nexport enum GameAttr {\n  locations = 'locations',\n  objectives = 'objectives'\n}\n\ntype AssertionDetail = {\n  itemId: ItemId;\n  actionType?: string;\n};\n\nexport default class ParserValidator {\n  private locAttrAssertions: Map<GameLocationAttr, AssertionDetail[]>;\n  private attrAssertions: Map<GameAttr, AssertionDetail[]>;\n\n  constructor() {\n    this.locAttrAssertions = new Map<GameLocationAttr, AssertionDetail[]>();\n    this.attrAssertions = new Map<GameAttr, AssertionDetail[]>();\n  }\n\n  public assertLocAttr(locAttr: GameLocationAttr, itemId: ItemId, actionType?: string) {\n    if (!this.locAttrAssertions.get(locAttr)) {\n      this.locAttrAssertions.set(locAttr, []);\n    }\n    this.locAttrAssertions.get(locAttr)!.push({ itemId, actionType });\n    return itemId;\n  }\n\n  public assertAttr(gameAttr: GameAttr, itemId: ItemId, actionType?: string) {\n    if (!this.attrAssertions.get(gameAttr)) {\n      this.attrAssertions.set(gameAttr, []);\n    }\n    this.attrAssertions.get(gameAttr)!.push({ itemId, actionType });\n    return itemId;\n  }\n\n  public assertLocAttrs(locAttr: GameLocationAttr, itemIds: ItemId[], actionType?: string) {\n    itemIds.forEach(itemId => this.assertLocAttr(locAttr, itemId, actionType));\n  }\n\n  public verifyAssertions() {\n    this.verifyLocAttrAssertions();\n    this.verifyAttrAssertions();\n  }\n\n  private verifyLocAttrAssertions() {\n    this.locAttrAssertions.forEach(\n      (assertionDetails: AssertionDetail[], gameLocationAttr: GameLocationAttr) => {\n        assertionDetails.forEach((assertionDetail: AssertionDetail) => {\n          const { itemId, actionType } = assertionDetail;\n          if (!Parser.checkpoint.map[gameLocationAttr].has(itemId)) {\n            if (actionType) {\n              this.actionAssertionError(itemId, gameLocationAttr, actionType);\n            }\n            throw new Error(`Cannot find id \"${itemId}\" under ${gameLocationAttr} entity type`);\n          }\n        });\n      }\n    );\n  }\n\n  private verifyAttrAssertions() {\n    this.attrAssertions.forEach((assertionDetails: AssertionDetail[], gameAttr: GameAttr) => {\n      assertionDetails.forEach((assertionDetail: AssertionDetail) => {\n        const { itemId, actionType } = assertionDetail;\n        switch (gameAttr) {\n          case GameAttr.locations:\n            Parser.checkpoint.map.getLocationAtId(itemId);\n            break;\n          case GameAttr.objectives:\n            if (Parser.checkpoint.objectives.getObjectives().get(itemId) === undefined) {\n              if (actionType) {\n                this.actionAssertionError(itemId, gameAttr, actionType);\n              }\n              throw new Error(`Cannot find objective id \"${itemId}\"`);\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  private actionAssertionError(itemId: ItemId, attribute: string, actionType: string) {\n    throw new Error(\n      `Expected type of \"${attribute}\" as argument for \"${actionType}\", obtained \"${itemId}\" which is either undefined or the wrong id.`\n    );\n  }\n}\n","import { GameAction, GameActionType } from '../action/GameActionTypes';\nimport { ItemId } from '../commons/CommonTypes';\nimport { GameLocationAttr } from '../location/GameMapTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ConditionParser from './ConditionParser';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\nimport { GameAttr } from './ParserValidator';\n\nexport default class ActionParser {\n  public static parseActions(actionDetails: string[]): ItemId[] {\n    return actionDetails.map(actionDetail => this.parseAction(actionDetail));\n  }\n\n  public static parseAction(actionDetail: string): ItemId {\n    const [actionString, conditionalsString] = StringUtils.splitByChar(actionDetail, 'if');\n\n    const gameAction = this.parseActionContent(actionString);\n    if (conditionalsString) {\n      gameAction.actionConditions = StringUtils.splitByChar(\n        conditionalsString,\n        'AND'\n      ).map(condition => ConditionParser.parse(condition));\n    }\n\n    Parser.checkpoint.map.addItemToMap(\n      GameLocationAttr.actions,\n      gameAction.interactionId,\n      gameAction\n    );\n\n    return gameAction.interactionId;\n  }\n\n  public static parseActionContent(actionString: string): GameAction {\n    const [action, actionParamString] = StringUtils.splitByChar(actionString, '(');\n    let repeatable = false;\n    let actionType = action;\n    if (action[action.length - 1] === '*') {\n      repeatable = true;\n      actionType = actionType.slice(0, -1);\n    }\n\n    const gameActionType = ParserConverter.stringToActionType(actionType);\n    const actionParams = StringUtils.splitByChar(actionParamString.slice(0, -1), ',');\n    const actionParamObj: any = {};\n\n    switch (gameActionType) {\n      case GameActionType.ObtainCollectible:\n        actionParamObj.id = Parser.validator.assertLocAttr(\n          GameLocationAttr.collectibles,\n          actionParams[0],\n          actionType\n        );\n        break;\n      case GameActionType.CompleteObjective:\n        actionParamObj.id = Parser.validator.assertAttr(\n          GameAttr.objectives,\n          actionParams[0],\n          actionType\n        );\n        break;\n      case GameActionType.LocationChange:\n      case GameActionType.ChangeBackground:\n        actionParamObj.id = Parser.validator.assertAttr(\n          GameAttr.locations,\n          actionParams[0],\n          actionType\n        );\n        break;\n      case GameActionType.BringUpDialogue:\n        actionParamObj.id = Parser.validator.assertLocAttr(\n          GameLocationAttr.talkTopics,\n          actionParams[0],\n          actionType\n        );\n        break;\n      case GameActionType.AddItem:\n      case GameActionType.RemoveItem:\n        const gameLocAttr = ParserConverter.stringToLocAttr(actionParams[0]);\n        actionParamObj.attr = gameLocAttr;\n        actionParamObj.locationId = Parser.validator.assertAttr(\n          GameAttr.locations,\n          actionParams[1],\n          actionType\n        );\n        actionParamObj.id = Parser.validator.assertLocAttr(\n          gameLocAttr,\n          actionParams[2],\n          actionType\n        );\n        break;\n      case GameActionType.AddLocationMode:\n      case GameActionType.RemoveLocationMode:\n        actionParamObj.locationId = Parser.validator.assertAttr(\n          GameAttr.locations,\n          actionParams[0],\n          actionType\n        );\n        actionParamObj.mode = ParserConverter.stringToGameMode(actionParams[1]);\n        break;\n      case GameActionType.AddPopup:\n        actionParamObj.id = Parser.validator.assertLocAttr(\n          GameLocationAttr.objects,\n          actionParams[0],\n          actionType\n        );\n        actionParamObj.position = ParserConverter.stringToPosition(actionParams[1]);\n        break;\n      case GameActionType.MakeObjectBlink:\n        actionParamObj.id = Parser.validator.assertLocAttr(\n          GameLocationAttr.objects,\n          actionParams[0],\n          actionType\n        );\n        break;\n      case GameActionType.MakeObjectGlow:\n        actionParamObj.id = Parser.validator.assertLocAttr(\n          GameLocationAttr.objects,\n          actionParams[0],\n          actionType\n        );\n        break;\n    }\n\n    const actionId = Parser.generateActionId();\n    return {\n      actionType: gameActionType,\n      actionParams: actionParamObj,\n      actionConditions: [],\n      interactionId: actionId,\n      isInteractive: false,\n      isRepeatable: repeatable\n    };\n  }\n}\n","import { ActionCondition } from '../action/GameActionTypes';\nimport { GameStateStorage } from '../state/GameStateTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\nimport { GameAttr } from './ParserValidator';\n\nexport default class ConditionParser {\n  public static parse(conditionDetails: string): ActionCondition {\n    const hasExclamation = conditionDetails[0] === '!';\n    if (hasExclamation) {\n      conditionDetails = conditionDetails.slice(1);\n    }\n    const [gameStateStorage, ...condParams] = StringUtils.splitByChar(conditionDetails, '.');\n    switch (ParserConverter.stringToGameStateStorage(gameStateStorage)) {\n      case GameStateStorage.ChecklistState:\n        return {\n          state: GameStateStorage.ChecklistState,\n          conditionParams: { id: Parser.validator.assertAttr(GameAttr.objectives, condParams[0]) },\n          boolean: !hasExclamation\n        };\n\n      case GameStateStorage.UserState:\n        return {\n          state: GameStateStorage.UserState,\n          conditionParams: {\n            listName: condParams[0],\n            id: condParams[1]\n          },\n          boolean: !hasExclamation\n        };\n      default:\n        throw new Error('Parsing error: Invalid condition param');\n    }\n  }\n}\n","import { Character } from '../character/GameCharacterTypes';\nimport { AssetKey, ItemId } from '../commons/CommonTypes';\nimport { GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\n\nexport default class CharacterParser {\n  public static parse(locationId: LocationId, characterList: string[]) {\n    characterList.forEach(characterDetails =>\n      this.parseCharacterDetails(locationId, characterDetails)\n    );\n  }\n\n  public static characterAssetKey(characterId: ItemId, expression: string) {\n    return characterId + expression;\n  }\n\n  public static characterAssetValue(characterId: ItemId, expression: string) {\n    return `/avatars/${characterId}/${characterId}.${expression}.png`;\n  }\n\n  private static parseCharacterDetails(locationId: LocationId, characterDetails: string) {\n    const addToLoc = characterDetails[0] === '+';\n    if (addToLoc) {\n      characterDetails = characterDetails.slice(1);\n    }\n\n    const [id, name, defaultExpression, defaultPosition] = StringUtils.splitByChar(\n      characterDetails,\n      ','\n    );\n\n    const expressions = new Map<string, AssetKey>();\n\n    const character: Character = {\n      id,\n      name,\n      expressions,\n      defaultExpression,\n      defaultPosition: ParserConverter.stringToPosition(defaultPosition)\n    };\n\n    // Add asset key to expression map\n    expressions.set(defaultExpression, this.characterAssetKey(id, defaultExpression));\n\n    // Add asset keys to expression map\n    Parser.checkpoint.map.addMapAsset(\n      this.characterAssetKey(id, defaultExpression),\n      this.characterAssetValue(id, defaultExpression)\n    );\n\n    // Add character to map\n    Parser.checkpoint.map.addItemToMap(GameLocationAttr.characters, id, character);\n\n    // Add character to location\n    if (addToLoc) {\n      Parser.checkpoint.map.setItemAt(locationId, GameLocationAttr.characters, id);\n    }\n  }\n}\n","import { SpeakerDetail } from '../character/GameCharacterTypes';\nimport StringUtils from '../utils/StringUtils';\nimport CharacterParser from './CharacterParser';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\n\nexport default class SpeakerParser {\n  public static parse(rawStr: string): SpeakerDetail {\n    const [speakerId, expression, speakerPositionStr] = StringUtils.splitByChar(\n      rawStr.slice(1), // remove the @\n      ','\n    );\n    const speakerPosition = ParserConverter.stringToPosition(speakerPositionStr);\n\n    this.addCharacterExprToMap(speakerId, expression);\n\n    return {\n      speakerId,\n      expression,\n      speakerPosition\n    };\n  }\n\n  public static addCharacterExprToMap(charId: string, expression: string) {\n    if (charId === 'you' || charId === 'narrator') {\n      return;\n    }\n    const character = Parser.checkpoint.map.getCharacters().get(charId);\n\n    if (!character) {\n      throw new Error(`Character \"${charId}\" not in map`);\n    }\n\n    const charExpression = expression || character.defaultExpression;\n\n    character.expressions.set(\n      expression,\n      CharacterParser.characterAssetKey(charId, expression || charExpression)\n    );\n\n    Parser.checkpoint.map.addMapAsset(\n      CharacterParser.characterAssetKey(charId, charExpression),\n      CharacterParser.characterAssetValue(charId, charExpression)\n    );\n  }\n}\n","import { Dialogue, DialogueLine, PartName } from '../dialogue/GameDialogueTypes';\nimport { GameLocationAttr } from '../location/GameMapTypes';\nimport { mapValues } from '../utils/GameUtils';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport Parser from './Parser';\nimport SpeakerParser from './SpeakerParser';\n\nexport default class DialogueParser {\n  public static parse(dialoguesBody: string[]) {\n    const dialoguesParagraphs = StringUtils.splitToParagraph(dialoguesBody);\n\n    dialoguesParagraphs.forEach(([dialogueDetails, dialogueBody]: [string, string[]]) => {\n      if (dialogueBody.length === 0) {\n        console.error('No dialogue found for dialogueId');\n        return;\n      }\n      this.parseDialogue(dialogueDetails, dialogueBody);\n    });\n  }\n\n  public static parseDialogue(dialogueDetails: string, dialogueBody: string[]) {\n    const [dialogueId, title] = StringUtils.splitByChar(dialogueDetails, ',', 1);\n    const content = this.parseDialogueContent(dialogueBody);\n    const dialogue: Dialogue = { title, content };\n\n    Parser.checkpoint.map.addItemToMap(GameLocationAttr.talkTopics, dialogueId, dialogue);\n  }\n\n  public static parseDialogueContent(dialogueBody: string[]) {\n    const rawDialogueContent: Map<PartName, string[]> = StringUtils.mapByHeader(\n      dialogueBody,\n      isInteger\n    );\n\n    const dialogueObject: Map<PartName, DialogueLine[]> = mapValues(\n      rawDialogueContent,\n      this.createDialogueLines\n    );\n    return dialogueObject;\n  }\n\n  public static createDialogueLines(lines: string[]): DialogueLine[] {\n    const dialogueLines: DialogueLine[] = [];\n    let currIndex = 0;\n\n    while (currIndex !== lines.length) {\n      const rawStr = lines[currIndex];\n      switch (true) {\n        case isGotoLabel(rawStr):\n          dialogueLines[dialogueLines.length - 1].goto = rawStr.split(' ')[1];\n          break;\n        case isActionLabel(rawStr):\n          const lastLine = dialogueLines[dialogueLines.length - 1];\n          !lastLine.actionIds && (lastLine.actionIds = []);\n          lastLine.actionIds.push(ActionParser.parseAction(rawStr));\n          break;\n        case isSpeaker(rawStr):\n          currIndex++;\n          const nextLine = lines[currIndex];\n          if (!nextLine) {\n            throw new Error('Parsing error: Cannot change speaker without next line');\n          }\n          dialogueLines.push({ line: nextLine });\n          dialogueLines[dialogueLines.length - 1].speakerDetail = SpeakerParser.parse(rawStr);\n          break;\n        default:\n          dialogueLines.push({ line: rawStr });\n          break;\n      }\n      currIndex++;\n    }\n    return dialogueLines;\n  }\n}\n\nconst isInteger = (line: string) => new RegExp(/^[0-9]+$/).test(line);\nconst isGotoLabel = (line: string) => new RegExp(/^goto [0-9]+$/).test(line);\nconst isActionLabel = (line: string) => line && (line[0] === '\\t' || line.slice(0, 4) === '    ');\nconst isSpeaker = (line: string) => line && line[0] === '@';\n","import { LocationId } from '../location/GameMapTypes';\nimport { GameSoundType } from '../sound/GameSoundTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\n\nexport default class MusicParser {\n  public static parse(locationId: LocationId, bgmList: string[], soundType: GameSoundType) {\n    bgmList.forEach((bgm, bgmIndex) => {\n      const [id, assetPath, volume] = StringUtils.splitByChar(bgm, ',');\n      Parser.checkpoint.map.addSoundAsset({\n        key: id,\n        path: assetPath,\n        config: {\n          volume: parseInt(volume),\n          loop: soundType === GameSoundType.BGM\n        },\n        soundType\n      });\n\n      if (soundType === GameSoundType.BGM && bgmIndex === 0) {\n        Parser.checkpoint.map.setBGMusicAt(locationId, id);\n      }\n    });\n  }\n}\n","import { GameCheckpoint } from '../chapter/GameChapterTypes';\nimport GameMap from '../location/GameMap';\nimport GameObjective from '../objective/GameObjective';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport DialoguesParser from './DialogueParser';\nimport LocationsParser from './LocationDetailsParser';\nimport LocationParser from './LocationParser';\nimport ParserValidator, { GameAttr } from './ParserValidator';\n\nclass Parser {\n  public static checkpoint: GameCheckpoint;\n  private static actionIdNum: number;\n  public static validator: ParserValidator;\n\n  public static generateActionId() {\n    Parser.actionIdNum++;\n    return `action#${Parser.actionIdNum}`;\n  }\n\n  public static init() {\n    Parser.actionIdNum = 0;\n\n    Parser.checkpoint = {\n      configuration: '',\n      map: new GameMap(),\n      startingLoc: '',\n      objectives: new GameObjective()\n    };\n\n    Parser.validator = new ParserValidator();\n  }\n\n  public static parse(chapterText: string, continueParse = false): GameCheckpoint {\n    if (!continueParse) {\n      Parser.init();\n    }\n\n    const checkPointLines = StringUtils.splitToLines(chapterText);\n    const checkPointParagraphs = StringUtils.splitToParagraph(checkPointLines);\n\n    checkPointParagraphs.forEach(([header, body]: [string, string[]]) => {\n      if (body.length === 0 && header.includes(':')) {\n        Parser.parseCheckpointConfig(header);\n      } else {\n        Parser.parseCheckpointParagraphs(header, body) || LocationParser.parse(header, body);\n      }\n    });\n\n    Parser.validator.verifyAssertions();\n    return this.checkpoint;\n  }\n\n  private static parseCheckpointConfig(checkpointConfig: string) {\n    const [key, value] = StringUtils.splitByChar(checkpointConfig, ':');\n    switch (key) {\n      case 'startingLoc':\n        Parser.validator.assertAttr(GameAttr.locations, value);\n        Parser.checkpoint.startingLoc = value;\n        break;\n      default:\n        throw new Error(`Invalid checkpoint config key, \"${checkpointConfig}\"`);\n    }\n  }\n\n  private static parseCheckpointParagraphs(header: string, body: string[]) {\n    switch (header) {\n      case 'objectives':\n        Parser.checkpoint.objectives.addObjectives(body);\n        break;\n      case 'locations':\n        LocationsParser.parse(body);\n        break;\n      case 'startActions':\n        Parser.checkpoint.map.setStartActions(ActionParser.parseActions(body));\n        break;\n      case 'endActions':\n        Parser.checkpoint.map.setEndActions(ActionParser.parseActions(body));\n        break;\n      case 'dialogues':\n        DialoguesParser.parse(body);\n        break;\n      default:\n        return false;\n    }\n    return true;\n  }\n}\n\nexport default Parser;\n","import { GameLocation, GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport { GameSoundType } from '../sound/GameSoundTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport BoundingBoxParser from './BoundingBoxParser';\nimport CharacterParser from './CharacterParser';\nimport MusicParser from './MusicParser';\nimport ObjectParser from './ObjectParser';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\nimport { GameAttr } from './ParserValidator';\n\nexport default class LocationParser {\n  public static parse(locationId: LocationId, locationBody: string[]) {\n    const location = Parser.checkpoint.map.getLocationAtId(locationId);\n    const locationParagraphs = StringUtils.splitToParagraph(locationBody);\n\n    locationParagraphs.forEach(([header, body]: [string, string[]]) => {\n      if (body.length === 0) {\n        this.parseLocationConfig(location, header);\n      } else {\n        this.parseLocationParagraphs(location, header, body);\n      }\n    });\n  }\n\n  public static parseLocationConfig(location: GameLocation, locationConfig: string) {\n    const [key, value] = StringUtils.splitByChar(locationConfig, ':');\n    const configValues = StringUtils.splitByChar(value, ',');\n    switch (key) {\n      case 'modes':\n        configValues.forEach(mode => {\n          const gameMode = ParserConverter.stringToGameMode(mode);\n          location.modes.add(gameMode);\n        });\n        break;\n      case 'nav':\n        configValues.forEach(otherLocationId => {\n          Parser.validator.assertAttr(GameAttr.locations, otherLocationId);\n          location.navigation.add(otherLocationId);\n        });\n        break;\n      case 'talkTopics':\n        const talkTopics = configValues;\n        Parser.validator.assertLocAttrs(GameLocationAttr.talkTopics, talkTopics);\n        location.talkTopics = new Set(talkTopics);\n        break;\n      default:\n        throw new Error(`Invalid config key \"${key}\" specified under location \"${location.id}\"`);\n    }\n  }\n\n  public static parseLocationParagraphs(location: GameLocation, header: string, body: string[]) {\n    switch (header) {\n      case 'objects':\n        ObjectParser.parse(location.id, body);\n        break;\n      case 'boundingBoxes':\n        BoundingBoxParser.parse(location.id, body);\n        break;\n      case 'characters':\n        CharacterParser.parse(location.id, body);\n        break;\n      case 'bgm':\n        MusicParser.parse(location.id, body, GameSoundType.BGM);\n        break;\n      case 'sfx':\n        MusicParser.parse(location.id, body, GameSoundType.SFX);\n        break;\n      case 'actions':\n        location.actionIds = ActionParser.parseActions(body);\n        break;\n      default:\n        throw new Error(`Invalid location paragraph header \"${header}\"`);\n    }\n  }\n}\n","import { GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport { ObjectProperty } from '../objects/GameObjectTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport Parser from './Parser';\n\nexport default class ObjectParser {\n  public static parse(locationId: LocationId, objectList: string[]) {\n    const objectParagraphs = StringUtils.splitToParagraph(objectList);\n\n    objectParagraphs.forEach(([header, body]: [string, string[]]) => {\n      const object = this.parseObjectConfig(locationId, header);\n      if (body.length) {\n        object.isInteractive = true;\n        object.actionIds = ActionParser.parseActions(body);\n      }\n    });\n  }\n\n  private static objectAssetKey(shortPath: string) {\n    return shortPath;\n  }\n\n  private static objectPath(shortPath: string) {\n    return shortPath;\n  }\n\n  private static parseObjectConfig(locationId: LocationId, objectDetails: string) {\n    const addToLoc = objectDetails[0] === '+';\n    if (addToLoc) {\n      objectDetails = objectDetails.slice(1);\n    }\n\n    const [objectId, shortPath, x, y, width, height] = StringUtils.splitByChar(objectDetails, ',');\n    const objectProperty: ObjectProperty = {\n      assetKey: this.objectAssetKey(shortPath),\n      x: parseInt(x),\n      y: parseInt(y),\n      width: parseInt(width) || undefined,\n      height: parseInt(height) || undefined,\n      isInteractive: false,\n      interactionId: objectId\n    };\n\n    Parser.checkpoint.map.addMapAsset(this.objectAssetKey(shortPath), this.objectPath(shortPath));\n\n    Parser.checkpoint.map.addItemToMap(GameLocationAttr.objects, objectId, objectProperty);\n    if (addToLoc) {\n      Parser.checkpoint.map.setItemAt(locationId, GameLocationAttr.objects, objectId);\n    }\n\n    return objectProperty;\n  }\n}\n","import { BBoxProperty } from '../boundingBoxes/GameBoundingBoxTypes';\nimport { GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport Parser from './Parser';\n\nexport default class BoundingBoxParser {\n  public static parse(locationId: LocationId, boundingBoxList: string[]) {\n    const boundingBoxParagraphs = StringUtils.splitToParagraph(boundingBoxList);\n\n    boundingBoxParagraphs.forEach(([header, body]: [string, string[]]) => {\n      const boundingBox = this.parseBBoxConfig(locationId, header);\n      if (body.length) {\n        boundingBox.isInteractive = true;\n        boundingBox.actionIds = ActionParser.parseActions(body);\n      }\n    });\n  }\n\n  private static parseBBoxConfig(locationId: LocationId, bboxDetails: string) {\n    const addToLoc = bboxDetails[0] === '+';\n    if (addToLoc) {\n      bboxDetails = bboxDetails.slice(1);\n    }\n\n    const [bboxId, x, y, width, height] = StringUtils.splitByChar(bboxDetails, ',');\n    const bboxProperty: BBoxProperty = {\n      x: parseInt(x),\n      y: parseInt(y),\n      width: parseInt(width),\n      height: parseInt(height),\n      isInteractive: false,\n      interactionId: bboxId\n    };\n\n    Parser.checkpoint.map.addItemToMap(GameLocationAttr.boundingBoxes, bboxId, bboxProperty);\n    if (addToLoc) {\n      Parser.checkpoint.map.setItemAt(locationId, GameLocationAttr.boundingBoxes, bboxId);\n    }\n\n    return bboxProperty;\n  }\n}\n","import { createEmptyLocation } from '../location/GameMapHelper';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\n\nexport default class LocationDetailsParser {\n  public static parse(locationDetails: string[]) {\n    locationDetails.forEach(locationDetail => {\n      const [id, shortPath, name] = StringUtils.splitByChar(locationDetail, ',', 2);\n      Parser.checkpoint.map.addLocation(id, {\n        ...createEmptyLocation(),\n        id,\n        name,\n        assetKey: this.locationAssetKey(shortPath)\n      });\n      Parser.checkpoint.map.addMapAsset(\n        this.locationAssetKey(shortPath),\n        this.locationPath(shortPath)\n      );\n    });\n  }\n\n  private static locationAssetKey(shortPath: string) {\n    return shortPath;\n  }\n\n  private static locationPath(shortPath: string) {\n    return shortPath;\n  }\n}\n","import { GameLocation } from './GameMapTypes';\n\nexport function createEmptyLocation(): GameLocation {\n  return {\n    id: '',\n    name: '',\n    assetKey: '',\n    modes: new Set([]),\n    navigation: new Set([]),\n    talkTopics: new Set([]),\n    objects: new Set([]),\n    boundingBoxes: new Set([]),\n    bgmKey: '',\n    characters: new Set([])\n  };\n}\n","import { loadText } from 'src/features/game/utils/LoaderUtils';\nimport { getSourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport TextAssets from '../assets/TextAssets';\nimport { GameChapter } from '../chapter/GameChapterTypes';\nimport Parser from '../parser/Parser';\nimport { loadData } from '../save/GameSaveRequests';\n\nexport async function callGameManagerOnTxtLoad(\n  scene: Phaser.Scene,\n  chapterDetails: GameChapter[],\n  continueGame: boolean,\n  chapterNum: number,\n  checkpointNum: number\n) {\n  const filename = chapterDetails[chapterNum].checkpointsFilenames[checkpointNum];\n  if (!filename) {\n    return;\n  }\n  const chapterKey = `#${filename}`;\n  await loadText(scene, chapterKey, filename);\n  await loadText(scene, TextAssets.defaultCheckpoint.key, TextAssets.defaultCheckpoint.path);\n\n  const text = scene.cache.text.get(chapterKey);\n  const defaultCheckpointText = scene.cache.text.get(TextAssets.defaultCheckpoint.key);\n\n  const accountInfo = getSourceAcademyGame().getAccountInfo();\n  if (!accountInfo) {\n    return;\n  }\n  const fullSaveState = await loadData(accountInfo);\n  Parser.parse(defaultCheckpointText);\n  Parser.parse(text, true);\n  const gameCheckpoint = Parser.checkpoint;\n\n  scene.scene.start('GameManager', {\n    isStorySimulator: false,\n    fullSaveState,\n    gameCheckpoint,\n    continueGame,\n    chapterNum,\n    checkpointNum\n  });\n}\n","import { screenCenter } from 'src/features/game/commons/CommonConstants';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport { GameChapter } from '../../chapter/GameChapterTypes';\nimport CommonTextHover from '../../commons/CommonTextHover';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport { callGameManagerOnTxtLoad } from '../../utils/TxtLoaderUtils';\nimport ChapterSelect from './ChapterSelect';\nimport chapConstants, {\n  chapterActionAltStyle,\n  chapterIndexStyle,\n  chapterTitleStyle\n} from './ChapterSelectConstants';\n\nexport function createChapter(\n  scene: ChapterSelect,\n  { title }: GameChapter,\n  index: number,\n  lastCheckpointsIdx: number\n) {\n  const [x, y] = getCoorByChapter(index);\n  const chapterContainer = new Phaser.GameObjects.Container(scene, x, y);\n\n  // Chapter Preview\n  const chapterPreview = new Phaser.GameObjects.Image(\n    scene,\n    0,\n    0,\n    `chapterImage${index}`\n  ).setDisplaySize(chapConstants.imageRect.width, chapConstants.imageRect.height);\n\n  // Chapter Frame\n  const chapterFrame = new Phaser.GameObjects.Sprite(\n    scene,\n    chapConstants.frameXOffset,\n    chapConstants.frameYOffset,\n    ImageAssets.chapterSelectFrame.key\n  );\n\n  // Chapter Action Popup\n  const chapterRepeatHover = new CommonTextHover(\n    scene,\n    chapConstants.buttonsXOffset + chapConstants.altTextXOffset,\n    chapConstants.buttonsYOffset + chapConstants.altTextYOffset,\n    'Reset progress',\n    chapterActionAltStyle\n  );\n  const chapterContinueHover = new CommonTextHover(\n    scene,\n    -chapConstants.buttonsXOffset + chapConstants.altTextXOffset,\n    chapConstants.buttonsYOffset + chapConstants.altTextYOffset,\n    'Play/Continue',\n    chapterActionAltStyle\n  );\n\n  // Chapter Actions\n  const chapterRepeat = createButton(\n    scene,\n    {\n      assetKey: ImageAssets.chapterRepeatButton.key,\n      onUp: () => callGameManagerOnTxtLoad(scene, scene.chapterDetails, false, index, 0),\n      onHover: () => chapterRepeatHover.setVisible(true),\n      onOut: () => chapterRepeatHover.setVisible(false)\n    },\n    scene.soundManager\n  ).setPosition(chapConstants.buttonsXOffset, chapConstants.buttonsYOffset);\n\n  const chapterContinue = createButton(\n    scene,\n    {\n      assetKey: ImageAssets.chapterContinueButton.key,\n      onUp: () =>\n        callGameManagerOnTxtLoad(scene, scene.chapterDetails, true, index, lastCheckpointsIdx),\n      onHover: () => chapterContinueHover.setVisible(true),\n      onOut: () => chapterContinueHover.setVisible(false)\n    },\n    scene.soundManager\n  ).setPosition(-chapConstants.buttonsXOffset, chapConstants.buttonsYOffset);\n\n  // Chapter Text\n  const chapterIndexText = createBitmapText(\n    scene,\n    `Chapter ${index}`,\n    0,\n    chapConstants.indexYOffset,\n    chapterIndexStyle\n  ).setOrigin(0.5, 0.5);\n\n  const chapterTitleText = createBitmapText(\n    scene,\n    title,\n    0,\n    chapConstants.titleYOffset,\n    chapterTitleStyle\n  ).setOrigin(0.5, 0.5);\n\n  const chapterDone = index <= scene.getLoadedGameState().userState.lastCompletedChapter + 1;\n\n  const blackTint = new Phaser.GameObjects.Rectangle(\n    scene,\n    0,\n    0,\n    chapConstants.imageRect.width,\n    chapConstants.imageRect.height,\n    0\n  )\n    .setOrigin(0.5)\n    .setAlpha(chapterDone ? 0 : 0.8)\n    .setInteractive();\n\n  chapterContainer.add([\n    chapterPreview,\n    chapterFrame,\n    chapterRepeat,\n    chapterContinue,\n    chapterRepeatHover,\n    chapterContinueHover,\n    chapterIndexText,\n    chapterTitleText,\n    blackTint\n  ]);\n\n  return chapterContainer;\n}\n\nexport function getCoorByChapter(chapterNum: number) {\n  const x = screenCenter.x + chapConstants.imageDist * chapterNum;\n  const y = screenCenter.y;\n  return [x, y];\n}\n","import { GameChapter } from '../../chapter/GameChapterTypes';\n\nexport const SampleChapters: GameChapter[] = [\n  {\n    title: 'Spaceship Emergency',\n    previewBgPath: '/locations/planet-y-orbit/crashing.png',\n    checkpointsFilenames: ['../assets/chapter0.txt', '../assets/chapter0.1.txt']\n  },\n  {\n    title: 'Alien Attack',\n    previewBgPath: '/locations/telebay/emergency.png',\n    checkpointsFilenames: ['../assets/chapter1.txt']\n  },\n  {\n    title: 'Jedi Master',\n    previewBgPath: '/locations/classroom/normal.png',\n    checkpointsFilenames: ['../assets/chapter2.txt']\n  }\n];\n","import { screenCenter, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { limitNumber, mandatory, sleep, toS3Path } from 'src/features/game/utils/GameUtils';\nimport { getSourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport { GameChapter } from '../../chapter/GameChapterTypes';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { loadData } from '../../save/GameSaveRequests';\nimport { FullSaveState } from '../../save/GameSaveTypes';\nimport GameSoundManager from '../../sound/GameSoundManager';\nimport { createButton } from '../../utils/ButtonUtils';\nimport chapConstants from './ChapterSelectConstants';\nimport { createChapter } from './ChapterSelectHelper';\nimport { SampleChapters } from './SampleChapters';\n\nclass ChapterSelect extends Phaser.Scene {\n  public layerManager: GameLayerManager;\n  public soundManager: GameSoundManager;\n  public chapterDetails: GameChapter[];\n\n  private chapterContainer: Phaser.GameObjects.Container | undefined;\n  private backButtonContainer: Phaser.GameObjects.Container | undefined;\n  private loadedGameState: FullSaveState | undefined;\n  private autoScrolling: boolean;\n  private isScrollLeft: boolean;\n  private isScrollRight: boolean;\n\n  constructor() {\n    super('ChapterSelect');\n\n    this.chapterContainer = undefined;\n    this.backButtonContainer = undefined;\n    this.chapterDetails = [];\n    this.layerManager = new GameLayerManager();\n    this.soundManager = new GameSoundManager();\n    this.autoScrolling = true;\n    this.isScrollLeft = false;\n    this.isScrollRight = false;\n  }\n\n  public preload() {\n    this.chapterDetails = SampleChapters;\n    addLoadingScreen(this);\n    this.preloadAssets();\n    this.layerManager.initialise(this);\n    this.soundManager.initialise(this, getSourceAcademyGame());\n  }\n\n  public async create() {\n    const accountInfo = getSourceAcademyGame().getAccountInfo();\n    this.loadedGameState = await loadData(accountInfo);\n    this.renderBackground();\n    this.renderChapters();\n    this.autoScroll();\n  }\n\n  public update() {\n    if (!this.chapterContainer || this.autoScrolling) return;\n\n    let newXPos = this.chapterContainer.x;\n    if (this.isScrollRight) {\n      newXPos -= chapConstants.defaultScrollSpeed;\n    } else if (this.isScrollLeft) {\n      newXPos += chapConstants.defaultScrollSpeed;\n    }\n    this.chapterContainer.x = limitNumber(\n      newXPos,\n      -chapConstants.imageDist * (this.chapterDetails.length - 1),\n      0\n    );\n  }\n\n  public getLoadedGameState = () => mandatory(this.loadedGameState) as FullSaveState;\n\n  public cleanUp() {\n    this.soundManager.stopCurrBgMusic();\n    this.layerManager.clearAllLayers();\n  }\n\n  private preloadAssets() {\n    this.chapterDetails.forEach((chapter, index) => {\n      this.load.image(`chapterImage${index}`, toS3Path(chapter.previewBgPath));\n    });\n  }\n\n  private renderBackground() {\n    const background = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.chapterSelectBackground.key\n    );\n    const blackOverlay = new Phaser.GameObjects.Rectangle(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      screenSize.x,\n      screenSize.y,\n      0\n    ).setAlpha(0.3);\n    this.layerManager.addToLayer(Layer.Background, background);\n    this.layerManager.addToLayer(Layer.Background, blackOverlay);\n  }\n\n  private renderChapters() {\n    const mask = this.createMask();\n    this.backButtonContainer = new CommonBackButton(\n      this,\n      () => {\n        this.cleanUp();\n        this.scene.start('MainMenu');\n      },\n      0,\n      0,\n      this.soundManager\n    );\n    this.chapterContainer = this.createChapterContainer();\n    this.chapterContainer.mask = new Phaser.Display.Masks.GeometryMask(this, mask);\n\n    const border = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.chapterSelectBorder.key\n    );\n\n    const leftArrow = createButton(\n      this,\n      {\n        assetKey: ImageAssets.chapterSelectArrow.key,\n        onDown: () => (this.isScrollLeft = true),\n        onUp: () => (this.isScrollLeft = false),\n        onOut: () => (this.isScrollLeft = false)\n      },\n      this.soundManager\n    ).setPosition(screenCenter.x - chapConstants.arrowXOffset, screenCenter.y);\n\n    const rightArrow = createButton(\n      this,\n      {\n        assetKey: ImageAssets.chapterSelectArrow.key,\n        onDown: () => (this.isScrollRight = true),\n        onUp: () => (this.isScrollRight = false),\n        onOut: () => (this.isScrollRight = false)\n      },\n      this.soundManager\n    )\n      .setPosition(screenCenter.x + chapConstants.arrowXOffset, screenCenter.y)\n      .setScale(-1, 1);\n\n    this.layerManager.addToLayer(Layer.UI, this.chapterContainer);\n    this.layerManager.addToLayer(Layer.UI, this.backButtonContainer);\n    this.layerManager.addToLayer(Layer.UI, border);\n    this.layerManager.addToLayer(Layer.UI, leftArrow);\n    this.layerManager.addToLayer(Layer.UI, rightArrow);\n  }\n\n  private createMask() {\n    const graphics = this.add.graphics();\n    const mask = graphics\n      .fillRect(\n        chapConstants.maskRect.x,\n        chapConstants.maskRect.y,\n        chapConstants.maskRect.width,\n        chapConstants.maskRect.height\n      )\n      .setPosition(screenCenter.x, screenCenter.y);\n    mask.alpha = 0;\n    return mask;\n  }\n\n  private createChapterContainer() {\n    const chapterContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    chapterContainer.add(\n      this.chapterDetails.map((chapterDetail, chapterIndex) => {\n        // Use latest checkpoint if it exist\n        let lastCheckpoint = 0;\n        if (this.loadedGameState && this.loadedGameState.gameSaveStates[chapterIndex]) {\n          lastCheckpoint = this.loadedGameState.gameSaveStates[chapterIndex].lastCheckpointPlayed;\n        }\n        return createChapter(this, chapterDetail, chapterIndex, lastCheckpoint);\n      })\n    );\n    return chapterContainer;\n  }\n\n  private async autoScroll() {\n    const chapterIdx = Math.min(\n      this.getLoadedGameState().userState.lastCompletedChapter + 1,\n      SampleChapters.length - 1\n    );\n\n    await this.scrollToIndex(chapterIdx);\n    this.autoScrolling = false;\n  }\n\n  private async scrollToIndex(id: number) {\n    if (!this.chapterContainer) return;\n    const xTarget = -id * chapConstants.imageDist;\n\n    const scrollDuration = 800;\n    this.tweens.add({\n      targets: this.chapterContainer,\n      x: xTarget,\n      ease: 'Power2',\n      duration: scrollDuration\n    });\n    await sleep(scrollDuration);\n  }\n}\n\nexport default ChapterSelect;\n","import FontAssets from '../../assets/FontAssets';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const transitionTextStyle: BitmapFontStyle = {\n  key: FontAssets.alienCowsFont.key,\n  size: 80,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst tweenDuration = 1500;\n\nconst checkpointConstants = {\n  chapterText: 'Chapter completed.',\n  checkpointText: 'Checkpoint reached.',\n  tweenDuration: tweenDuration,\n  entryTween: {\n    alpha: 1,\n    duration: tweenDuration,\n    ease: 'Power2'\n  },\n  exitTween: {\n    alpha: 0,\n    duration: tweenDuration,\n    ease: 'Power2'\n  }\n};\n\nexport default checkpointConstants;\n","import {\n  AccountInfo,\n  getSourceAcademyGame\n} from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport { GameChapter } from '../../chapter/GameChapterTypes';\nimport { screenCenter } from '../../commons/CommonConstants';\nimport { loadData, saveData } from '../../save/GameSaveRequests';\nimport { FullSaveState } from '../../save/GameSaveTypes';\nimport GameSoundManager from '../../sound/GameSoundManager';\nimport { sleep } from '../../utils/GameUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport { callGameManagerOnTxtLoad } from '../../utils/TxtLoaderUtils';\nimport { SampleChapters } from '../chapterSelect/SampleChapters';\nimport checkpointConstants, { transitionTextStyle } from './CheckpointTransitionConstants';\n\nclass CheckpointTransition extends Phaser.Scene {\n  private soundManager: GameSoundManager;\n\n  constructor() {\n    super('CheckpointTransition');\n    this.soundManager = new GameSoundManager();\n  }\n\n  public preload() {\n    this.soundManager.initialise(this, getSourceAcademyGame());\n  }\n\n  public async create() {\n    this.soundManager.stopCurrBgMusic();\n\n    const accountInfo = getSourceAcademyGame().getAccountInfo();\n    const loadedGameState = await loadData(accountInfo);\n    const chapterDetails = SampleChapters; // TODO: Fetch from backend\n\n    const [currChapter, currCheckpoint] = loadedGameState.userState.lastPlayedCheckpoint;\n\n    if (this.isLastCheckpoint(chapterDetails, currChapter, currCheckpoint)) {\n      await this.saveChapterComplete(loadedGameState, accountInfo, currChapter);\n      if (currChapter >= chapterDetails.length - 1) {\n        this.scene.start('MainMenu');\n        return;\n      } else {\n        await this.showTransitionText(checkpointConstants.chapterText);\n        await callGameManagerOnTxtLoad(this, chapterDetails, true, currChapter + 1, 0);\n        return;\n      }\n    } else {\n      await this.showTransitionText(checkpointConstants.checkpointText);\n      await callGameManagerOnTxtLoad(this, chapterDetails, false, currChapter, currCheckpoint + 1);\n      return;\n    }\n  }\n\n  private async showTransitionText(text: string) {\n    const transitionText = createBitmapText(\n      this,\n      text,\n      screenCenter.x,\n      screenCenter.y,\n      transitionTextStyle\n    )\n      .setOrigin(0.5, 0.5)\n      .setAlpha(0);\n\n    this.add.existing(transitionText);\n\n    this.tweens.add({\n      targets: transitionText,\n      ...checkpointConstants.entryTween\n    });\n\n    await sleep(checkpointConstants.tweenDuration * 2);\n\n    this.tweens.add({\n      targets: transitionText,\n      ...checkpointConstants.exitTween\n    });\n\n    await sleep(checkpointConstants.tweenDuration);\n  }\n\n  private async saveChapterComplete(\n    loadedGameState: FullSaveState,\n    accountInfo: AccountInfo,\n    currChapter: number\n  ) {\n    loadedGameState.userState.lastCompletedChapter = Math.max(\n      loadedGameState.userState.lastCompletedChapter,\n      currChapter\n    );\n    await saveData(accountInfo, loadedGameState);\n  }\n\n  private isLastCheckpoint(\n    chapterDetails: GameChapter[],\n    currChapter: number,\n    currCheckpoint: number\n  ) {\n    return currCheckpoint >= chapterDetails[currChapter].checkpointsFilenames.length - 1;\n  }\n}\n\nexport default CheckpointTransition;\n","import { ItemId } from '../commons/CommonTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport GameManager from '../scenes/gameManager/GameManager';\nimport { mandatory } from '../utils/GameUtils';\nimport ActionConditionChecker from './GameActionConditionChecker';\nimport GameActionExecuter from './GameActionExecuter';\nimport { ActionCondition, GameAction } from './GameActionTypes';\n\nexport default class GameActionManager {\n  private actionMap: Map<ItemId, GameAction>;\n\n  constructor() {\n    this.actionMap = new Map<ItemId, GameAction>();\n  }\n\n  public initialise(gameManager: GameManager) {\n    this.actionMap = gameManager.getCurrentCheckpoint().map.getActions();\n  }\n\n  public async processGameActions(actionIds?: ItemId[]): Promise<void> {\n    if (!actionIds) return;\n    for (const actionId of actionIds) {\n      await this.processGameAction(actionId);\n    }\n    await GameGlobalAPI.getInstance().saveGame();\n  }\n\n  public async processGameAction(actionId: ItemId) {\n    const {\n      actionType,\n      actionParams,\n      actionConditions,\n      isRepeatable,\n      interactionId\n    } = this.getActionFromId(actionId);\n\n    if (await this.checkCanPlayAction(isRepeatable, interactionId, actionConditions)) {\n      await GameActionExecuter.executeGameAction(actionType, actionParams);\n      GameGlobalAPI.getInstance().triggerInteraction(actionId);\n    }\n  }\n\n  private async checkCanPlayAction(\n    isRepeatable: boolean,\n    interactionId: string,\n    actionConditions: ActionCondition[]\n  ) {\n    return (\n      (isRepeatable || !GameGlobalAPI.getInstance().hasTriggeredInteraction(interactionId)) &&\n      (await ActionConditionChecker.checkAllConditionsSatisfied(actionConditions))\n    );\n  }\n\n  private getActionFromId = (actionId: ItemId) =>\n    mandatory(this.actionMap.get(actionId)) as GameAction;\n}\n","import GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { GameActionType } from './GameActionTypes';\n\nexport default class GameActionExecuter {\n  public static async executeGameAction(actionType: GameActionType, actionParams: any) {\n    const globalAPI = GameGlobalAPI.getInstance();\n\n    switch (actionType) {\n      case GameActionType.LocationChange:\n        globalAPI.changeLocationTo(actionParams.id);\n        return;\n      case GameActionType.ChangeBackground:\n        globalAPI.renderBackgroundLayerContainer(actionParams.id);\n        return;\n      case GameActionType.ObtainCollectible:\n        globalAPI.obtainCollectible(actionParams.id);\n        return;\n      case GameActionType.CompleteObjective:\n        globalAPI.completeObjective(actionParams.id);\n        return;\n      case GameActionType.AddItem:\n        globalAPI.addLocationAttr(actionParams.attr, actionParams.locationId, actionParams.id);\n        return;\n      case GameActionType.RemoveItem:\n        globalAPI.removeLocationAttr(actionParams.attr, actionParams.locationId, actionParams.id);\n        return;\n      case GameActionType.AddLocationMode:\n        globalAPI.addLocationMode(actionParams.locationId, actionParams.mode);\n        return;\n      case GameActionType.RemoveLocationMode:\n        globalAPI.removeLocationMode(actionParams.locationId, actionParams.mode);\n        return;\n      case GameActionType.BringUpDialogue:\n        await globalAPI.showDialogueInSamePhase(actionParams.id);\n        return;\n      case GameActionType.AddPopup:\n        await globalAPI.displayPopUp(actionParams.id, actionParams.position, actionParams.duration);\n        return;\n      case GameActionType.MakeObjectBlink:\n        await globalAPI.makeObjectBlink(actionParams.id);\n        return;\n      case GameActionType.MakeObjectGlow:\n        await globalAPI.makeObjectGlow(actionParams.id);\n        return;\n      default:\n        return;\n    }\n  }\n}\n","import GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { GameStateStorage } from '../state/GameStateTypes';\nimport { ActionCondition } from './GameActionTypes';\n\nexport default class ActionConditionChecker {\n  public static async checkAllConditionsSatisfied(actionConditions: ActionCondition[]) {\n    const allConditions = await Promise.all(\n      actionConditions.map(\n        async actionCondition => await this.checkConditionSatisfied(actionCondition)\n      )\n    );\n    return allConditions.every(condition => condition === true);\n  }\n\n  private static async checkConditionSatisfied(conditional: ActionCondition) {\n    const { state, conditionParams, boolean } = conditional;\n    switch (state) {\n      case GameStateStorage.UserState:\n        return (\n          (await GameGlobalAPI.getInstance().existsInUserStateList(\n            conditionParams.listName,\n            conditionParams.id\n          )) === boolean\n        );\n      case GameStateStorage.ChecklistState:\n        return GameGlobalAPI.getInstance().isObjectiveComplete(conditionParams.id) === boolean;\n      default:\n        return true;\n    }\n  }\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\nimport GameManager from 'src/features/game/scenes/gameManager/GameManager';\n\nimport { Constants } from '../commons/CommonConstants';\nimport { ItemId } from '../commons/CommonTypes';\nimport { GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport { StateObserver } from '../state/GameStateTypes';\nimport { ActivatableBBox, BBoxProperty } from './GameBoundingBoxTypes';\n\nclass GameBoundingBoxManager implements StateObserver {\n  public observerId: string;\n  private bboxes: ActivatableBBox[];\n\n  constructor() {\n    this.observerId = 'GameBoundingBoxManager';\n    this.bboxes = [];\n  }\n\n  public initialise() {\n    GameGlobalAPI.getInstance().subscribeState(this);\n  }\n\n  public notify(locationId: LocationId) {\n    const hasUpdate = GameGlobalAPI.getInstance().hasLocationUpdate(locationId, GameMode.Explore);\n    const currLocationId = GameGlobalAPI.getInstance().getCurrLocId();\n    if (hasUpdate && locationId === currLocationId) {\n      this.renderBBoxLayerContainer(locationId);\n    }\n  }\n\n  public renderBBoxLayerContainer(locationId: LocationId): void {\n    GameGlobalAPI.getInstance().clearSeveralLayers([Layer.BBox]);\n    const bboxIdsToRender = GameGlobalAPI.getInstance().getLocationAttr(\n      GameLocationAttr.boundingBoxes,\n      locationId\n    );\n    const bboxContainer = this.createBBoxLayerContainer(bboxIdsToRender);\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.BBox, bboxContainer);\n  }\n\n  public createBBoxLayerContainer(bboxIds: ItemId[]): Phaser.GameObjects.Container {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const bboxPropMap = GameGlobalAPI.getInstance().getBBoxPropertyMap();\n    const bboxContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    this.bboxes = bboxIds\n      .map(id => bboxPropMap.get(id))\n      .filter(bboxProp => bboxProp !== undefined)\n      .map(bboxProp => {\n        const bbox = this.createBBox(gameManager, bboxProp!);\n        bboxContainer.add(bbox.sprite);\n        return bbox;\n      });\n\n    return bboxContainer;\n  }\n\n  public enableBBoxAction(callbacks: any): void {\n    this.bboxes.forEach(bbox => bbox.activate(callbacks));\n  }\n\n  public disableBBoxAction() {\n    this.bboxes.forEach(bbox => bbox.deactivate());\n  }\n\n  private createBBox(gameManager: GameManager, bboxProperty: BBoxProperty): ActivatableBBox {\n    const { x, y, width, height, actionIds, interactionId } = bboxProperty;\n    const bboxSprite = new Phaser.GameObjects.Rectangle(gameManager, x, y, width, height, 0, 0);\n    if (bboxProperty.isInteractive) {\n      bboxSprite.setInteractive();\n    }\n\n    function activate({\n      onClick = (id?: ItemId) => {},\n      onPointerout = (id?: ItemId) => {},\n      onHover = (id?: ItemId) => {}\n    }) {\n      bboxSprite.on('pointerup', async () => {\n        onClick(interactionId);\n        await GameGlobalAPI.getInstance().processGameActions(actionIds);\n      });\n      bboxSprite.on('pointerover', () => {\n        onHover(interactionId);\n      });\n      bboxSprite.on('pointerout', () => {\n        onPointerout(interactionId);\n      });\n    }\n\n    function deactivate() {\n      bboxSprite.off('pointerup');\n      bboxSprite.off('pointerover');\n      bboxSprite.off('pointerout');\n    }\n\n    return {\n      sprite: bboxSprite,\n      activate: actionIds ? activate : Constants.nullFunction,\n      deactivate\n    };\n  }\n}\n\nexport default GameBoundingBoxManager;\n","export function resize(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height?: number\n) {\n  const ratio = obj.displayHeight / obj.displayWidth;\n  if (!width) {\n    obj.displayWidth = height! / ratio;\n    obj.displayHeight = height!;\n  } else {\n    obj.displayWidth = width;\n    obj.displayHeight = height || width * ratio;\n  }\n}\n\n/**\n * Resize the obj display size such that the shorter side fits\n * the width/height i.e. the other dimension will overflow.\n *\n * @param obj obj to be resized\n * @param width width\n * @param height height\n */\nexport function resizeOverflow(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height: number\n) {\n  if (obj.displayWidth > obj.displayHeight) {\n    resize(obj, 0, height);\n  } else {\n    resize(obj, width);\n  }\n}\n\n/**\n * Resize the obj display size such that the longer side fits\n * the width/height i.e. the other dimension will underflow.\n *\n * @param obj obj to be resized\n * @param width width\n * @param height height\n */\nexport function resizeUnderflow(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height: number\n) {\n  if (obj.displayWidth > obj.displayHeight) {\n    resize(obj, width);\n  } else {\n    resize(obj, 0, height);\n  }\n}\n\nexport function resizeSquare(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height?: number\n) {\n  obj.displayWidth = width;\n  obj.displayHeight = height || width;\n}\n\nexport function multiplyDimensions(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  factor: number\n) {\n  obj.displayWidth *= factor;\n  obj.displayHeight *= factor;\n}\n","import { screenCenter, screenSize } from '../commons/CommonConstants';\n\nconst charXOffset = 350;\n\nconst CharConstants = {\n  charWidth: 700,\n  charRect: {\n    x: { Left: charXOffset, Middle: screenCenter.x, Right: screenSize.x - charXOffset },\n    y: 800,\n    height: screenSize.y * 0.4\n  }\n};\n\nexport default CharConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport { screenSize } from '../commons/CommonConstants';\nimport { GamePosition, ItemId } from '../commons/CommonTypes';\nimport { fadeIn, fadeOut } from '../effects/FadeEffect';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport GameManager from '../scenes/gameManager/GameManager';\nimport { mandatory } from '../utils/GameUtils';\nimport { resize } from '../utils/SpriteUtils';\nimport CharConstants from './GameCharacterConstants';\nimport { Character } from './GameCharacterTypes';\n\nexport default class CharacterManager {\n  private characterMap: Map<ItemId, Character>;\n  private characterSpriteMap: Map<ItemId, Phaser.GameObjects.Image>;\n\n  constructor() {\n    this.characterMap = new Map<ItemId, Character>();\n    this.characterSpriteMap = new Map<ItemId, Phaser.GameObjects.Image>();\n  }\n\n  public initialise(gameManager: GameManager) {\n    this.characterMap = gameManager.getCurrentCheckpoint().map.getCharacters();\n  }\n\n  public renderCharacterLayerContainer(locationId: LocationId): void {\n    const idsToRender = GameGlobalAPI.getInstance().getLocationAttr(\n      GameLocationAttr.characters,\n      locationId\n    );\n    const characterLayer = this.getCharacterContainer(idsToRender);\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.Character, characterLayer);\n  }\n\n  public getCharacterContainer(idsToRender: ItemId[]): Phaser.GameObjects.Container {\n    const characterContainer = new Phaser.GameObjects.Container(\n      GameGlobalAPI.getInstance().getGameManager(),\n      0,\n      0\n    );\n\n    idsToRender.forEach(id => {\n      const characterSprite = this.createCharacterSprite(id);\n      characterContainer.add(characterSprite);\n      this.characterSpriteMap.set(id, characterSprite);\n    });\n\n    return characterContainer;\n  }\n\n  public createCharacterSprite(\n    characterId: ItemId,\n    overrideExpression?: string,\n    overridePosition?: GamePosition\n  ) {\n    const character = this.getCharacterById(characterId);\n    const { defaultPosition, defaultExpression, expressions } = character;\n    const characterXPosition = CharConstants.charRect.x[overridePosition || defaultPosition];\n    const assetKey = expressions.get(overrideExpression || defaultExpression)!;\n\n    const characterSprite = new Phaser.GameObjects.Image(\n      GameGlobalAPI.getInstance().getGameManager(),\n      characterXPosition,\n      screenSize.y,\n      assetKey\n    ).setOrigin(0.5, 1);\n\n    resize(characterSprite, CharConstants.charWidth);\n    return characterSprite;\n  }\n\n  public showCharacterOnMap(characterId: ItemId) {\n    const characterSprite = this.characterSpriteMap.get(characterId);\n    if (characterSprite) {\n      GameGlobalAPI.getInstance()\n        .getGameManager()\n        .add.tween(fadeIn([characterSprite]));\n    }\n  }\n\n  public hideCharacterFromMap(characterId: ItemId) {\n    const characterSprite = this.characterSpriteMap.get(characterId);\n    if (characterSprite) {\n      GameGlobalAPI.getInstance()\n        .getGameManager()\n        .add.tween(fadeOut([characterSprite]));\n    }\n  }\n\n  public getCharacterById = (charId: ItemId) =>\n    mandatory(this.characterMap.get(charId)) as Character;\n}\n","import { DialogueLine, DialogueObject } from './GameDialogueTypes';\n\nexport default class DialogueGenerator {\n  private currPart: string;\n  private currLineNum: number;\n  private dialogueContent: DialogueObject;\n\n  public constructor(dialogueContent: DialogueObject) {\n    this.dialogueContent = dialogueContent;\n    this.currPart = dialogueContent.keys().next().value;\n    this.currLineNum = 0;\n  }\n\n  public generateNextLine(): DialogueLine {\n    const dialogueLine = this.dialogueContent.get(this.currPart)![this.currLineNum];\n    if (!dialogueLine || !dialogueLine.line) {\n      return { line: '' };\n    }\n\n    if (dialogueLine.goto) {\n      if (this.dialogueContent.get(dialogueLine.goto)) {\n        this.currPart = dialogueLine.goto;\n        this.currLineNum = 0;\n      } else {\n        return { line: '' };\n      }\n    } else {\n      this.currLineNum++;\n    }\n    return dialogueLine;\n  }\n}\n","import ImageAssets from '../assets/ImageAssets';\nimport { SpeakerDetail } from '../character/GameCharacterTypes';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport { GamePosition, ItemId } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport StringUtils from '../utils/StringUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport DialogueConstants, { speakerTextStyle } from './GameDialogueConstants';\n\nexport default class DialogueSpeakerRenderer {\n  private currentSpeakerId?: string;\n  private username: string;\n\n  constructor(username: string) {\n    this.username = username;\n  }\n\n  public changeSpeakerTo(newSpeakerDetail?: SpeakerDetail | null) {\n    if (newSpeakerDetail === undefined) return;\n\n    this.hidePreviousSpeaker(this.currentSpeakerId);\n    this.showNewSpeaker(newSpeakerDetail);\n  }\n\n  private hidePreviousSpeaker(previousSpeakerId?: ItemId) {\n    if (previousSpeakerId) {\n      GameGlobalAPI.getInstance().clearSeveralLayers([Layer.Speaker, Layer.DialogueLabel]);\n      GameGlobalAPI.getInstance().showCharacterOnMap(previousSpeakerId);\n    }\n  }\n\n  private showNewSpeaker(newSpeakerDetail: SpeakerDetail | null) {\n    if (newSpeakerDetail) {\n      this.drawSpeakerSprite(newSpeakerDetail);\n      this.drawSpeakerBox(newSpeakerDetail.speakerId);\n    }\n  }\n\n  private drawSpeakerBox(speakerId: ItemId) {\n    const speakerContainer =\n      speakerId === 'you'\n        ? this.createSpeakerBox(this.username, GamePosition.Right)\n        : this.createSpeakerBox(\n            GameGlobalAPI.getInstance().getCharacterById(speakerId).name,\n            GamePosition.Left\n          );\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.DialogueLabel, speakerContainer);\n  }\n\n  private drawSpeakerSprite({ speakerId, speakerPosition, expression }: SpeakerDetail) {\n    if (speakerId === 'you' || speakerId === 'narrator') {\n      return;\n    }\n    GameGlobalAPI.getInstance().hideCharacterFromMap(speakerId);\n    const speakerSprite = GameGlobalAPI.getInstance().createCharacterSprite(\n      speakerId,\n      expression,\n      speakerPosition\n    );\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.Speaker, speakerSprite);\n    this.currentSpeakerId = speakerId;\n  }\n\n  private createSpeakerBox(text: string, position: GamePosition) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const container = new Phaser.GameObjects.Container(gameManager, 0, 0);\n    const rectangle = new Phaser.GameObjects.Image(\n      gameManager,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.speakerBox.key\n    ).setAlpha(0.8);\n\n    const speakerText = createBitmapText(\n      gameManager,\n      '',\n      DialogueConstants.speakerRect.x,\n      DialogueConstants.speakerRect.y,\n      speakerTextStyle\n    ).setOrigin(0.5, 0.5);\n\n    if (position === GamePosition.Right) {\n      rectangle.displayWidth *= -1;\n      speakerText.x = screenSize.x - speakerText.x;\n    }\n\n    container.add([rectangle, speakerText]);\n    speakerText.text = StringUtils.capitalize(text);\n    return container;\n  }\n}\n","import { ItemId } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport GameManager from '../scenes/gameManager/GameManager';\nimport { textTypeWriterStyle } from './GameDialogueConstants';\nimport DialogueGenerator from './GameDialogueGenerator';\nimport DialogueRenderer from './GameDialogueRenderer';\nimport DialogueSpeakerRenderer from './GameDialogueSpeakerRenderer';\nimport { Dialogue } from './GameDialogueTypes';\n\nexport default class DialogueManager {\n  private dialogueMap: Map<ItemId, Dialogue>;\n  private username: string;\n\n  private speakerRenderer?: DialogueSpeakerRenderer;\n  private dialogueRenderer?: DialogueRenderer;\n  private dialogueGenerator?: DialogueGenerator;\n\n  constructor() {\n    this.dialogueMap = new Map<ItemId, Dialogue>();\n    this.username = '';\n  }\n\n  public initialise(gameManager: GameManager) {\n    this.username = GameGlobalAPI.getInstance().getAccountInfo().name;\n    this.dialogueMap = gameManager.getCurrentCheckpoint().map.getDialogues();\n  }\n\n  public async showDialogue(dialogueId: ItemId): Promise<void> {\n    const dialogue = this.dialogueMap.get(dialogueId);\n    if (!dialogue) return;\n    this.dialogueRenderer = new DialogueRenderer(textTypeWriterStyle);\n    this.dialogueGenerator = new DialogueGenerator(dialogue.content);\n    this.speakerRenderer = new DialogueSpeakerRenderer(this.username);\n\n    GameGlobalAPI.getInstance().addContainerToLayer(\n      Layer.Dialogue,\n      this.dialogueRenderer.getDialogueContainer()\n    );\n    GameGlobalAPI.getInstance().fadeInLayer(Layer.Dialogue);\n    await new Promise(resolve => this.playWholeDialogue(resolve));\n  }\n\n  private async playWholeDialogue(resolve: () => void) {\n    await this.showNextLine(resolve);\n    this.getDialogueRenderer()\n      .getDialogueBox()\n      .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, async () => await this.showNextLine(resolve));\n  }\n\n  private async showNextLine(resolve: () => void) {\n    const { line, speakerDetail, actionIds } = this.getDialogueGenerator().generateNextLine();\n    const lineWithName = line.replace('{name}', this.username);\n    this.getDialogueRenderer().changeText(lineWithName);\n    this.getSpeakerRenderer().changeSpeakerTo(speakerDetail);\n    await GameGlobalAPI.getInstance().processGameActionsInSamePhase(actionIds);\n    if (!line) {\n      resolve();\n      this.getDialogueRenderer().destroy();\n      this.getSpeakerRenderer().changeSpeakerTo(null);\n    }\n  }\n\n  private getDialogueGenerator = () => this.dialogueGenerator as DialogueGenerator;\n  private getDialogueRenderer = () => this.dialogueRenderer as DialogueRenderer;\n  private getSpeakerRenderer = () => this.speakerRenderer as DialogueSpeakerRenderer;\n}\n","import { resize } from '../utils/SpriteUtils';\nimport { HexColor } from '../utils/StyleUtils';\nimport { blink } from './FadeEffect';\n\nexport default class GlowingImage {\n  private scene: Phaser.Scene;\n  private container: Phaser.GameObjects.Container;\n  private imageGlow: Phaser.GameObjects.Image;\n  private clickArea: Phaser.GameObjects.Image;\n  private glowClearer?: () => void;\n\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    assetKey: string,\n    width?: number,\n    height?: number\n  ) {\n    this.scene = scene;\n    this.container = new Phaser.GameObjects.Container(scene, x, y);\n    const image = new Phaser.GameObjects.Image(scene, 0, 0, assetKey);\n    this.imageGlow = new Phaser.GameObjects.Image(scene, 0, 0, assetKey)\n      .setAlpha(0)\n      .setTint(HexColor.yellow);\n    this.clickArea = new Phaser.GameObjects.Image(scene, 0, 0, assetKey)\n      .setAlpha(0.01)\n      .setInteractive({ pixelPerfect: true });\n\n    if (width) {\n      resize(image, width, height);\n      resize(this.imageGlow, width, height);\n      resize(this.clickArea, width, height);\n    }\n\n    this.container.add([image, this.imageGlow, this.clickArea]);\n  }\n\n  public startGlow() {\n    this.imageGlow.setAlpha(1);\n    this.glowClearer && this.glowClearer();\n    this.glowClearer = blink(this.scene, this.imageGlow);\n  }\n\n  public clearGlow() {\n    this.imageGlow.setAlpha(0);\n    this.glowClearer && this.glowClearer();\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public getClickArea() {\n    return this.clickArea;\n  }\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\nimport GameManager from 'src/features/game/scenes/gameManager/GameManager';\n\nimport { Constants } from '../commons/CommonConstants';\nimport { ItemId } from '../commons/CommonTypes';\nimport { blink } from '../effects/FadeEffect';\nimport GlowingImage from '../effects/GlowingObject';\nimport { GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport { StateObserver } from '../state/GameStateTypes';\nimport { ActivatableObject, ObjectProperty } from './GameObjectTypes';\n\nclass GameObjectManager implements StateObserver {\n  public observerId: string;\n  private objects: Map<ItemId, ActivatableObject>;\n\n  constructor() {\n    this.observerId = 'GameObjectManager';\n    this.objects = new Map<ItemId, ActivatableObject>();\n  }\n\n  public initialise() {\n    GameGlobalAPI.getInstance().subscribeState(this);\n  }\n\n  public notify(locationId: LocationId) {\n    const hasUpdate = GameGlobalAPI.getInstance().hasLocationUpdate(locationId, GameMode.Explore);\n    const currLocationId = GameGlobalAPI.getInstance().getCurrLocId();\n    if (hasUpdate && locationId === currLocationId) {\n      this.renderObjectsLayerContainer(locationId);\n    }\n  }\n\n  private createObjectsLayerContainer(objectIds: ItemId[]): Phaser.GameObjects.Container {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const objectPropMap = GameGlobalAPI.getInstance().getObjPropertyMap();\n    const objectContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    objectIds\n      .map(id => objectPropMap.get(id))\n      .filter(objectProp => objectProp !== undefined)\n      .forEach(objectProp => {\n        const object = this.createObject(gameManager, objectProp!);\n        objectContainer.add((object.sprite as GlowingImage).getContainer());\n        this.objects.set(objectProp!.interactionId, object);\n        return object;\n      });\n\n    return objectContainer;\n  }\n\n  public renderObjectsLayerContainer(locationId: LocationId): void {\n    GameGlobalAPI.getInstance().clearSeveralLayers([Layer.Objects]);\n    const objIdsToRender = GameGlobalAPI.getInstance().getLocationAttr(\n      GameLocationAttr.objects,\n      locationId\n    );\n    const objectContainer = this.createObjectsLayerContainer(objIdsToRender);\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.Objects, objectContainer);\n  }\n\n  public enableObjectAction(callbacks: any): void {\n    this.objects.forEach(object => object.activate(callbacks));\n  }\n\n  public disableObjectAction() {\n    this.objects.forEach(object => object.deactivate());\n  }\n\n  public makeObjectGlow(objectId: ItemId) {\n    const object = this.objects.get(objectId);\n    if (!object) {\n      return;\n    }\n    (object.sprite as GlowingImage).startGlow();\n  }\n\n  public makeObjectBlink(objectId: ItemId) {\n    const object = this.objects.get(objectId);\n    if (!object) {\n      return;\n    }\n    blink(GameGlobalAPI.getInstance().getGameManager(), object.sprite.getContainer());\n  }\n\n  private createObject(\n    gameManager: GameManager,\n    objectProperty: ObjectProperty\n  ): ActivatableObject {\n    const { assetKey, x, y, width, height, actionIds, interactionId } = objectProperty;\n    const object = new GlowingImage(gameManager, x, y, assetKey, width, height);\n\n    function activate({\n      onClick = (id?: ItemId) => {},\n      onPointerout = (id?: ItemId) => {},\n      onHover = (id?: ItemId) => {}\n    }) {\n      object.getClickArea().on('pointerup', async () => {\n        onClick(interactionId);\n        await GameGlobalAPI.getInstance().processGameActions(actionIds);\n      });\n      object.getClickArea().on('pointerover', () => {\n        onHover(interactionId);\n      });\n      object.getClickArea().on('pointerout', () => {\n        onPointerout(interactionId);\n      });\n    }\n\n    function deactivate() {\n      object.getClickArea().off('pointerup');\n      object.getClickArea().off('pointerover');\n      object.getClickArea().off('pointerout');\n    }\n\n    return {\n      sprite: object,\n      activate: actionIds ? activate : Constants.nullFunction,\n      deactivate\n    };\n  }\n}\n\nexport default GameObjectManager;\n","import { screenCenter, screenSize } from '../commons/CommonConstants';\n\nconst popUpXOffset = 350;\nconst popUpYPos = screenCenter.y / 2;\n\nconst popUpConstants = {\n  imgXOffset: 20,\n  imgYOffset: 20,\n  rect: {\n    x: { Left: popUpXOffset, Middle: screenCenter.x, Right: screenSize.x - popUpXOffset },\n    y: popUpYPos,\n    width: 280,\n    height: 280\n  }\n};\n\nexport default popUpConstants;\n","import ImageAssets from '../assets/ImageAssets';\nimport { Constants } from '../commons/CommonConstants';\nimport { GamePosition, GameSprite, ItemId } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { sleep } from '../utils/GameUtils';\nimport { resizeUnderflow } from '../utils/SpriteUtils';\nimport popUpConstants from './GamePopUpConstants';\n\nclass GamePopUpManager {\n  private currPopUp: Map<GamePosition, Phaser.GameObjects.Container>;\n  private popUpFrame: GameSprite;\n\n  constructor() {\n    this.currPopUp = new Map<GamePosition, Phaser.GameObjects.Container>();\n    this.popUpFrame = {\n      assetKey: ImageAssets.popUpFrame.key,\n      assetXPos: popUpConstants.rect.x[GamePosition.Middle],\n      assetYPos: popUpConstants.rect.y\n    };\n  }\n\n  public displayPopUp(itemId: ItemId, position: GamePosition, duration = Constants.popupDuration) {\n    // Destroy previous pop up if any\n    this.destroyPopUp(position);\n\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const container = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    // Frame\n    const popUpFrameImg = new Phaser.GameObjects.Image(\n      gameManager,\n      popUpConstants.rect.x[position],\n      this.popUpFrame.assetYPos,\n      this.popUpFrame.assetKey\n    );\n\n    // Get assetKey\n    const assetKey = this.getAssetKey(itemId);\n    if (!assetKey) return;\n\n    const popUpImage = new Phaser.GameObjects.Image(\n      gameManager,\n      popUpConstants.rect.x[position] + popUpConstants.imgXOffset,\n      this.popUpFrame.assetYPos + popUpConstants.imgYOffset,\n      assetKey\n    );\n    resizeUnderflow(popUpImage, popUpConstants.rect.width, popUpConstants.rect.height);\n\n    container.add([popUpFrameImg, popUpImage]);\n    this.currPopUp.set(position, container);\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.PopUp, container);\n\n    // TODO: Animate\n\n    container.setActive(true);\n    container.setVisible(true);\n\n    setTimeout(() => this.destroyPopUp(position), duration);\n  }\n\n  public destroyAllPopUps() {\n    this.currPopUp.forEach((popUp, position, map) => {\n      this.destroyPopUp(position);\n    });\n  }\n\n  public async destroyPopUp(position: GamePosition) {\n    const atPosContainer = this.currPopUp.get(position);\n    if (!atPosContainer) return;\n\n    // TODO: Animate out\n\n    await sleep(200);\n    atPosContainer.setVisible(false);\n    atPosContainer.setActive(false);\n    atPosContainer.destroy();\n\n    this.currPopUp.delete(position);\n  }\n\n  private getAssetKey(itemId: ItemId) {\n    const objectPropMap = GameGlobalAPI.getInstance()\n      .getGameManager()\n      .getCurrentCheckpoint()\n      .map.getObjects();\n    const objProp = objectPropMap.get(itemId);\n    if (objProp) {\n      return objProp.assetKey;\n    }\n    return undefined;\n  }\n}\n\nexport default GamePopUpManager;\n","export const emptySet = new Set([]);\n","import * as _ from 'lodash';\n\nimport { GameLocation, LocationId } from '../location/GameMapTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { FullSaveState, GameSaveState, SettingsJson, UserSaveState } from './GameSaveTypes';\n\nexport function gameStateToJson(\n  prevGameState: FullSaveState,\n  chapterNum: number,\n  checkpointNum: number\n): FullSaveState {\n  const gameManager = GameGlobalAPI.getInstance().getGameManager();\n  const gameStateManager = gameManager.stateManager;\n  const userStateManager = gameManager.userStateManager;\n  const phaseManager = gameManager.phaseManager;\n\n  const gameStoryState: GameSaveState = {\n    currentLocation: gameManager.currentLocationId,\n    currentPhase: phaseManager.getCurrentPhase(),\n    chapterObjective: mapToJsObject(gameStateManager.getCheckpointObjectives().getObjectives()),\n    locationStates: locationStatesToJson(gameStateManager.getLocationStates()),\n    objectPropertyMap: mapToJsObject(gameStateManager.getObjPropertyMap()),\n    bboxPropertyMap: mapToJsObject(gameStateManager.getBBoxPropertyMap()),\n    triggeredInteractions: mapToJsObject(gameStateManager.getTriggeredInteractions()),\n    lastCheckpointPlayed: checkpointNum\n  };\n\n  const userState: UserSaveState = {\n    settings: { ...prevGameState.userState.settings },\n    lastPlayedCheckpoint: [chapterNum, checkpointNum],\n    collectibles: userStateManager.getList('collectibles'),\n    achievements: userStateManager.getList('achievements'),\n    lastCompletedChapter:\n      prevGameState.userState.lastCompletedChapter === undefined\n        ? -1\n        : prevGameState.userState.lastCompletedChapter\n  };\n\n  const newGameStoryStates = { ...prevGameState.gameSaveStates, [chapterNum]: gameStoryState };\n\n  const newGameState = {\n    gameSaveStates: newGameStoryStates,\n    userState\n  };\n\n  return newGameState;\n}\n\nexport function userSettingsToJson(\n  prevGameState: FullSaveState,\n  settingsJson: SettingsJson\n): FullSaveState {\n  const newGameState = {\n    gameSaveStates: prevGameState.gameSaveStates,\n    userState: { ...prevGameState.userState, settings: settingsJson }\n  };\n\n  return newGameState;\n}\n\nfunction mapToJsObject<K, V>(map: Map<K, V>): any {\n  const jsObject = {};\n  map.forEach((value: V, key: K) => {\n    jsObject[(key as any) as string] = value;\n  });\n  return jsObject;\n}\n\nfunction locationStatesToJson(map: Map<LocationId, GameLocation>): any {\n  const jsObject = {};\n  map.forEach((location: GameLocation, locationId: LocationId) => {\n    const locationWithArrays = _.mapValues(location, locationProperty => {\n      if (locationProperty instanceof Set) {\n        return Array.from(locationProperty);\n      }\n      return locationProperty;\n    });\n    jsObject[locationId] = locationWithArrays;\n  });\n  return jsObject;\n}\n\nexport function jsonToLocationStates(obj: any): Map<LocationId, GameLocation> {\n  const map = new Map<LocationId, any>();\n\n  if (Object.keys(obj).length) {\n    Object.keys(obj).forEach((locationId: LocationId) => {\n      const locationWithSets = _.mapValues(obj[locationId], locationProperty => {\n        if (locationProperty instanceof Array) {\n          return new Set(locationProperty);\n        }\n        return locationProperty;\n      });\n\n      map.set(locationId, locationWithSets);\n    });\n  }\n\n  return map;\n}\n\nexport function jsObjectToMap(obj: any): Map<string, any> {\n  const map = new Map<string, any>();\n\n  if (Object.keys(obj).length) {\n    Object.keys(obj).forEach((key: string) => {\n      map.set(key, obj[key]);\n    });\n  }\n\n  return map;\n}\n","import { BBoxProperty } from '../boundingBoxes/GameBoundingBoxTypes';\nimport { GameCheckpoint } from '../chapter/GameChapterTypes';\nimport { ItemId } from '../commons/CommonTypes';\nimport { emptySet } from '../location/GameMapConstants';\nimport { GameLocation, GameLocationAttr, LocationId } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport GameObjective from '../objective/GameObjective';\nimport { ObjectProperty } from '../objects/GameObjectTypes';\nimport { jsObjectToMap, jsonToLocationStates } from '../save/GameSaveHelper';\nimport { GameSaveState } from '../save/GameSaveTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport GameManager from '../scenes/gameManager/GameManager';\nimport { mandatory } from '../utils/GameUtils';\nimport { StateObserver, StateSubject } from './GameStateTypes';\n\nclass GameStateManager implements StateSubject {\n  // Subscribers\n  public subscribers: Array<StateObserver>;\n\n  // Game State\n  private checkpoint: GameCheckpoint;\n  private checkpointObjective: GameObjective;\n  private locationHasUpdate: Map<string, Map<GameMode, boolean>>;\n  private locationStates: Map<string, GameLocation>;\n  private objectPropertyMap: Map<ItemId, ObjectProperty>;\n  private bboxPropertyMap: Map<ItemId, BBoxProperty>;\n\n  // Triggered Interactions\n  private triggeredInteractions: Map<ItemId, boolean>;\n\n  constructor() {\n    this.subscribers = new Array<StateObserver>();\n\n    this.checkpoint = {} as GameCheckpoint;\n    this.checkpointObjective = new GameObjective();\n    this.locationHasUpdate = new Map<string, Map<GameMode, boolean>>();\n    this.locationStates = new Map<string, GameLocation>();\n    this.objectPropertyMap = new Map<ItemId, ObjectProperty>();\n    this.bboxPropertyMap = new Map<ItemId, BBoxProperty>();\n\n    this.triggeredInteractions = new Map<ItemId, boolean>();\n  }\n\n  ///////////////////////////////\n  //        Subscribers        //\n  ///////////////////////////////\n\n  public update(locationId: LocationId) {\n    this.subscribers.forEach(observer => observer.notify(locationId));\n  }\n\n  public subscribe(observer: StateObserver) {\n    this.subscribers.push(observer);\n  }\n\n  public unsubscribe(observer: StateObserver) {\n    this.subscribers = this.subscribers.filter(obs => obs.observerId !== observer.observerId);\n  }\n\n  ///////////////////////////////\n  //          Helpers          //\n  ///////////////////////////////\n\n  private updateLocationStateMode(targetLocId: LocationId, mode: GameMode): void {\n    const currLocId = GameGlobalAPI.getInstance().getCurrLocId();\n\n    this.locationHasUpdate.get(targetLocId)!.set(mode, true);\n\n    // Location has an update to its state, reset its interaction back to not triggered\n    if (currLocId !== targetLocId) {\n      this.triggeredInteractions.set(targetLocId, false);\n    }\n\n    // Notify subscribers\n    this.update(targetLocId);\n  }\n\n  private updateLocationStateAttr(targetLocName: string, attr: GameLocationAttr): void {\n    switch (attr) {\n      case GameLocationAttr.navigation:\n        return this.updateLocationStateMode(targetLocName, GameMode.Move);\n      case GameLocationAttr.talkTopics:\n        return this.updateLocationStateMode(targetLocName, GameMode.Talk);\n      case GameLocationAttr.boundingBoxes:\n      case GameLocationAttr.objects:\n        return this.updateLocationStateMode(targetLocName, GameMode.Explore);\n      default:\n        return;\n    }\n  }\n\n  private checkLocationsExist(locIds: string[]): void {\n    locIds.forEach(locId => mandatory(this.locationStates.get(locId)));\n  }\n\n  private getLocationById = (locId: LocationId) =>\n    mandatory(this.locationStates.get(locId)) as GameLocation;\n\n  ///////////////////////////////\n  //        Preprocess         //\n  ///////////////////////////////\n\n  public initialise(gameManager: GameManager): void {\n    this.checkpoint = gameManager.getCurrentCheckpoint();\n    const gameSaveState = gameManager.saveManager.getLoadedGameStoryState();\n    this.checkpointObjective = this.checkpoint.objectives;\n\n    if (gameSaveState) {\n      this.loadFromGameStoryState(gameSaveState);\n    } else {\n      this.loadNewGameStoryState();\n    }\n\n    // Register every mode of each location under the chapter\n    this.locationStates.forEach((location, locationId, map) => {\n      this.locationHasUpdate.set(locationId, new Map<GameMode, boolean>());\n      if (location.modes) {\n        location.modes.forEach(mode => this.locationHasUpdate.get(locationId)!.set(mode, true));\n      }\n    });\n  }\n\n  private loadFromGameStoryState(gameStoryState: GameSaveState) {\n    this.checkpointObjective.setObjectives(jsObjectToMap(gameStoryState.chapterObjective));\n    this.locationStates = jsonToLocationStates(gameStoryState.locationStates);\n    this.objectPropertyMap = jsObjectToMap(gameStoryState.objectPropertyMap);\n    this.bboxPropertyMap = jsObjectToMap(gameStoryState.bboxPropertyMap);\n    this.triggeredInteractions = jsObjectToMap(gameStoryState.triggeredInteractions);\n  }\n\n  private loadNewGameStoryState() {\n    this.checkpointObjective = this.checkpoint.objectives;\n    this.locationStates = this.checkpoint.map.getLocations();\n    this.objectPropertyMap = this.checkpoint.map.getObjects();\n    this.bboxPropertyMap = this.checkpoint.map.getBBoxes();\n    this.triggeredInteractions.clear();\n  }\n\n  ///////////////////////////////\n  //        Interaction        //\n  ///////////////////////////////\n\n  public triggerInteraction(id: string): void {\n    this.triggeredInteractions.set(id, true);\n  }\n\n  public hasTriggeredInteraction(id: string): boolean | undefined {\n    return this.triggeredInteractions.get(id);\n  }\n\n  ///////////////////////////////\n  //       State Check         //\n  ///////////////////////////////\n\n  public hasLocationUpdate(locationId: LocationId, mode?: GameMode): boolean | undefined {\n    this.checkLocationsExist([locationId]);\n    if (mode) {\n      return this.locationHasUpdate.get(locationId)!.get(mode);\n    }\n\n    // If no mode is specified, update to any mode will return true\n    let result = false;\n    const locationModeState = this.locationHasUpdate.get(locationId);\n    locationModeState!.forEach((hasUpdate, mode, map) => (result = result || hasUpdate));\n    return result;\n  }\n\n  ///////////////////////////////\n  //    Location Mode State    //\n  ///////////////////////////////\n\n  public getLocationMode(locationId: LocationId): GameMode[] {\n    return Array.from(this.checkpoint.map.getLocationAtId(locationId).modes || emptySet);\n  }\n\n  public addLocationMode(locationId: LocationId, mode: GameMode) {\n    const location = this.getLocationById(locationId);\n    location.modes!.add(mode);\n    this.locationStates.get(locationId)!.modes!.add(mode);\n    this.updateLocationStateMode(locationId, GameMode.Menu);\n  }\n\n  public removeLocationMode(locationId: LocationId, mode: GameMode) {\n    const location = this.getLocationById(locationId);\n    if (!location.modes) return;\n    location.modes.delete(mode);\n    this.updateLocationStateMode(locationId, GameMode.Menu);\n  }\n\n  ///////////////////////////////\n  //    Location Attr State    //\n  ///////////////////////////////\n\n  public getLocationAttr(attr: GameLocationAttr, locationId: LocationId): ItemId[] {\n    const location = this.getLocationById(locationId);\n    return Array.from(location[attr]) || [];\n  }\n\n  public addLocationAttr(attr: GameLocationAttr, locationId: LocationId, attrElem: string) {\n    const location = this.getLocationById(locationId);\n    !location[attr] && (location[attr] = []);\n    location[attr].push(attrElem);\n    this.updateLocationStateAttr(locationId, attr);\n  }\n\n  public removeLocationAttr(attr: GameLocationAttr, locationId: LocationId, attrElem: string) {\n    const location = this.getLocationById(locationId);\n    if (!location[attr]) return;\n    location[attr] = location[attr].filter((oldAttr: string) => oldAttr !== attrElem);\n    this.updateLocationStateAttr(locationId, attr);\n  }\n\n  ///////////////////////////////\n  //    Chapter Objectives     //\n  ///////////////////////////////\n\n  public isAllComplete(): boolean {\n    return this.checkpointObjective.isAllComplete();\n  }\n\n  public isObjectiveComplete(key: string): boolean {\n    const isComplete = this.checkpointObjective.getObjectiveState(key);\n    if (isComplete === undefined || isComplete) {\n      return true;\n    }\n    return false;\n  }\n\n  public areObjectivesComplete(keys: string[]): boolean {\n    let result = true;\n    keys.forEach(key => (result = result && this.isObjectiveComplete(key)));\n    return result;\n  }\n\n  public completeObjective(key: string): void {\n    this.checkpointObjective.setObjective(key, true);\n  }\n\n  ///////////////////////////////\n  //       Obj Property        //\n  ///////////////////////////////\n\n  public getObjPropertyMap() {\n    return this.objectPropertyMap;\n  }\n\n  public setObjProperty(id: ItemId, newObjProp: ObjectProperty) {\n    this.objectPropertyMap.set(id, newObjProp);\n\n    // Update every location that uses it\n    this.locationStates.forEach((location, locationId) => {\n      if (location.objects && location.objects.has(id)) {\n        this.updateLocationStateAttr(locationId, GameLocationAttr.objects);\n      }\n    });\n  }\n\n  ///////////////////////////////\n  //       BBox Property       //\n  ///////////////////////////////\n\n  public getBBoxPropertyMap() {\n    return this.bboxPropertyMap;\n  }\n\n  public setBBoxProperty(id: ItemId, newBBoxProp: BBoxProperty) {\n    this.bboxPropertyMap.set(id, newBBoxProp);\n\n    // Update every location that uses it\n    this.locationStates.forEach((location, locationId) => {\n      if (location.boundingBoxes && location.boundingBoxes.delete(id)) {\n        this.updateLocationStateAttr(locationId, GameLocationAttr.boundingBoxes);\n      }\n    });\n  }\n\n  ///////////////////////////////\n  //          Saving           //\n  ///////////////////////////////\n\n  public getLocationStates() {\n    return this.locationStates;\n  }\n\n  public getCheckpointObjectives() {\n    return this.checkpointObjective;\n  }\n\n  public getTriggeredInteractions() {\n    return this.triggeredInteractions;\n  }\n}\n\nexport default GameStateManager;\n","import { Reducer } from 'redux';\n\nimport { defaultAcademy } from '../../commons/application/ApplicationTypes';\nimport { LOG_OUT } from '../../commons/application/types/CommonsTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport { AcademyState, SAVE_CANVAS } from './AcademyTypes';\n\nexport const AcademyReducer: Reducer<AcademyState> = (\n  state = defaultAcademy,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case LOG_OUT:\n      return defaultAcademy;\n    case SAVE_CANVAS:\n      return {\n        ...state,\n        gameCanvas: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { defaultDashboard } from '../../commons/application/ApplicationTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport { DashboardState, UPDATE_GROUP_GRADING_SUMMARY } from './DashboardTypes';\n\nexport const DashboardReducer: Reducer<DashboardState> = (\n  state = defaultDashboard,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case UPDATE_GROUP_GRADING_SUMMARY:\n      return {\n        ...state,\n        gradingSummary: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { defaultPlayground } from '../../commons/application/ApplicationTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport {\n  CHANGE_QUERY_STRING,\n  PLAYGROUND_UPDATE_PERSISTENCE_FILE,\n  PlaygroundState,\n  TOGGLE_USING_SUBST,\n  UPDATE_SHORT_URL\n} from './PlaygroundTypes';\n\nexport const PlaygroundReducer: Reducer<PlaygroundState> = (\n  state = defaultPlayground,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case CHANGE_QUERY_STRING:\n      return {\n        ...state,\n        queryString: action.payload\n      };\n    case TOGGLE_USING_SUBST:\n      return {\n        ...state,\n        usingSubst: action.payload\n      };\n    case UPDATE_SHORT_URL:\n      return {\n        ...state,\n        shortURL: action.payload\n      };\n    case PLAYGROUND_UPDATE_PERSISTENCE_FILE:\n      return {\n        ...state,\n        persistenceFile: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { PersistenceFile } from '../persistence/PersistenceTypes';\n\nexport const CHANGE_QUERY_STRING = 'CHANGE_QUERY_STRING';\nexport const GENERATE_LZ_STRING = 'GENERATE_LZ_STRING';\nexport const TOGGLE_USING_SUBST = 'TOGGLE_USING_SUBST';\nexport const SHORTEN_URL = 'SHORTEN_URL';\nexport const UPDATE_SHORT_URL = 'UPDATE_SHORT_URL';\nexport const PLAYGROUND_UPDATE_PERSISTENCE_FILE = 'PLAYGROUND_UPDATE_PERSISTENCE_FILE';\n\nexport type PlaygroundState = {\n  readonly queryString?: string;\n  readonly shortURL?: string;\n  readonly usingSubst: boolean;\n  readonly persistenceFile?: PersistenceFile;\n};\n","import { Reducer } from 'redux';\n\nimport { SourcecastReducer } from '../../features/sourceRecorder/sourcecast/SourcecastReducer';\nimport { SET_EDITOR_READONLY } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { SourcereelReducer } from '../../features/sourceRecorder/sourcereel/SourcereelReducer';\nimport {\n  CodeOutput,\n  createDefaultWorkspace,\n  defaultWorkspaceManager,\n  ErrorOutput,\n  InterpreterOutput,\n  ResultOutput\n} from '../application/ApplicationTypes';\nimport { LOG_OUT } from '../application/types/CommonsTypes';\nimport {\n  DEBUG_RESET,\n  DEBUG_RESUME,\n  END_DEBUG_PAUSE,\n  END_INTERRUPT_EXECUTION,\n  EVAL_INTERPRETER_ERROR,\n  EVAL_INTERPRETER_SUCCESS,\n  EVAL_TESTCASE_FAILURE,\n  EVAL_TESTCASE_SUCCESS,\n  HANDLE_CONSOLE_LOG,\n  HIGHLIGHT_LINE\n} from '../application/types/InterpreterTypes';\nimport { Testcase } from '../assessment/AssessmentTypes';\nimport {\n  FINISH_INVITE,\n  INIT_INVITE,\n  SET_EDITOR_SESSION_ID,\n  SET_WEBSOCKET_STATUS\n} from '../collabEditing/CollabEditingTypes';\nimport { NOTIFY_PROGRAM_EVALUATED } from '../sideContent/SideContentTypes';\nimport { SourceActionType } from '../utils/ActionsHelper';\nimport Constants from '../utils/Constants';\nimport { createContext } from '../utils/JsSlangHelper';\nimport {\n  BROWSE_REPL_HISTORY_DOWN,\n  BROWSE_REPL_HISTORY_UP,\n  CHANGE_EDITOR_HEIGHT,\n  CHANGE_EDITOR_WIDTH,\n  CHANGE_EXEC_TIME,\n  CHANGE_EXTERNAL_LIBRARY,\n  CHANGE_SIDE_CONTENT_HEIGHT,\n  CLEAR_REPL_INPUT,\n  CLEAR_REPL_OUTPUT,\n  CLEAR_REPL_OUTPUT_LAST,\n  END_CLEAR_CONTEXT,\n  EVAL_EDITOR,\n  EVAL_REPL,\n  MOVE_CURSOR,\n  RESET_TESTCASE,\n  RESET_WORKSPACE,\n  SEND_REPL_INPUT_TO_OUTPUT,\n  TOGGLE_EDITOR_AUTORUN,\n  UPDATE_ACTIVE_TAB,\n  UPDATE_CHAPTER,\n  UPDATE_CURRENT_ASSESSMENT_ID,\n  UPDATE_CURRENT_SUBMISSION_ID,\n  UPDATE_EDITOR_VALUE,\n  UPDATE_HAS_UNSAVED_CHANGES,\n  UPDATE_REPL_VALUE,\n  UPDATE_WORKSPACE,\n  WorkspaceLocation,\n  WorkspaceManagerState\n} from '../workspace/WorkspaceTypes';\n\n/**\n * Takes in a IWorkspaceManagerState and maps it to a new state. The\n * pre-conditions are that\n *   - There exists an IWorkspaceState in the IWorkspaceManagerState of the key\n *     `location`.\n *   - `location` is defined (and exists) as a property 'workspaceLocation' in\n *     the action's payload.\n */\nexport const WorkspaceReducer: Reducer<WorkspaceManagerState> = (\n  state = defaultWorkspaceManager,\n  action: SourceActionType\n) => {\n  const workspaceLocation: WorkspaceLocation = (action as any).payload\n    ? (action as any).payload.workspaceLocation\n    : 'assessment';\n  let newOutput: InterpreterOutput[];\n  let lastOutput: InterpreterOutput;\n\n  switch (workspaceLocation) {\n    case 'sourcecast':\n      const sourcecastState = SourcecastReducer(state.sourcecast, action);\n      if (sourcecastState === state.sourcecast) {\n        break;\n      }\n      return {\n        ...state,\n        sourcecast: sourcecastState\n      };\n    case 'sourcereel':\n      const sourcereelState = SourcereelReducer(state.sourcereel, action);\n      if (sourcereelState === state.sourcereel) {\n        break;\n      }\n      return {\n        ...state,\n        sourcereel: sourcereelState\n      };\n    default:\n      break;\n  }\n\n  switch (action.type) {\n    case BROWSE_REPL_HISTORY_DOWN:\n      if (state[workspaceLocation].replHistory.browseIndex === null) {\n        // Not yet started browsing history, nothing to do\n        return state;\n      } else if (state[workspaceLocation].replHistory.browseIndex !== 0) {\n        // Browsing history, and still have earlier records to show\n        const newIndex = state[workspaceLocation].replHistory.browseIndex! - 1;\n        const newReplValue = state[workspaceLocation].replHistory.records[newIndex];\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              ...state[workspaceLocation].replHistory,\n              browseIndex: newIndex\n            }\n          }\n        };\n      } else {\n        // Browsing history, no earlier records to show; return replValue to\n        // the last value when user started browsing\n        const newIndex = null;\n        const newReplValue = state[workspaceLocation].replHistory.originalValue;\n        const newRecords = state[workspaceLocation].replHistory.records.slice();\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              browseIndex: newIndex,\n              records: newRecords,\n              originalValue: ''\n            }\n          }\n        };\n      }\n    case BROWSE_REPL_HISTORY_UP:\n      const lastRecords = state[workspaceLocation].replHistory.records;\n      const lastIndex = state[workspaceLocation].replHistory.browseIndex;\n      if (\n        lastRecords.length === 0 ||\n        (lastIndex !== null && lastRecords[lastIndex + 1] === undefined)\n      ) {\n        // There is no more later history to show\n        return state;\n      } else if (lastIndex === null) {\n        // Not yet started browsing, initialise the index & array\n        const newIndex = 0;\n        const newRecords = lastRecords.slice();\n        const originalValue = state[workspaceLocation].replValue;\n        const newReplValue = newRecords[newIndex];\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              ...state[workspaceLocation].replHistory,\n              browseIndex: newIndex,\n              records: newRecords,\n              originalValue\n            }\n          }\n        };\n      } else {\n        // Browsing history, and still have later history to show\n        const newIndex = lastIndex + 1;\n        const newReplValue = lastRecords[newIndex];\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              ...state[workspaceLocation].replHistory,\n              browseIndex: newIndex\n            }\n          }\n        };\n      }\n\n    case CHANGE_EDITOR_HEIGHT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorHeight: action.payload.height\n        }\n      };\n    case CHANGE_EDITOR_WIDTH:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorWidth:\n            (\n              parseFloat(state[workspaceLocation].editorWidth.slice(0, -1)) +\n              parseFloat(action.payload.widthChange)\n            ).toString() + '%'\n        }\n      };\n    case CHANGE_EXEC_TIME:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          execTime: action.payload.execTime\n        }\n      };\n    case CHANGE_SIDE_CONTENT_HEIGHT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          sideContentHeight: action.payload.height\n        }\n      };\n    case CLEAR_REPL_INPUT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          replValue: ''\n        }\n      };\n    case CLEAR_REPL_OUTPUT_LAST:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: state[workspaceLocation].output.slice(0, -1)\n        }\n      };\n    case CLEAR_REPL_OUTPUT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: []\n        }\n      };\n    case END_CLEAR_CONTEXT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          context: createContext<WorkspaceLocation>(\n            action.payload.library.chapter,\n            action.payload.library.external.symbols,\n            workspaceLocation,\n            action.payload.library.variant,\n            action.payload.library.moduleParams\n          ),\n          globals: action.payload.library.globals\n        }\n      };\n    case SEND_REPL_INPUT_TO_OUTPUT:\n      // CodeOutput properties exist in parallel with workspaceLocation\n      newOutput = state[workspaceLocation].output.concat(action.payload as CodeOutput);\n      let newReplHistoryRecords: string[];\n      if (action.payload.value !== '') {\n        newReplHistoryRecords = [action.payload.value].concat(\n          state[workspaceLocation].replHistory.records\n        );\n      } else {\n        newReplHistoryRecords = state[workspaceLocation].replHistory.records;\n      }\n      if (newReplHistoryRecords.length > Constants.maxBrowseIndex) {\n        newReplHistoryRecords.pop();\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput,\n          replHistory: {\n            ...state[workspaceLocation].replHistory,\n            records: newReplHistoryRecords\n          }\n        }\n      };\n    case CHANGE_EXTERNAL_LIBRARY:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          externalLibrary: action.payload.newExternal\n        }\n      };\n    case HANDLE_CONSOLE_LOG:\n      /* Possible cases:\n       * (1) state[workspaceLocation].output === [], i.e. state[workspaceLocation].output[-1] === undefined\n       * (2) state[workspaceLocation].output[-1] is not RunningOutput\n       * (3) state[workspaceLocation].output[-1] is RunningOutput */\n      lastOutput = state[workspaceLocation].output.slice(-1)[0];\n      if (lastOutput === undefined || lastOutput.type !== 'running') {\n        newOutput = state[workspaceLocation].output.concat({\n          type: 'running',\n          consoleLogs: [action.payload.logString]\n        });\n      } else {\n        const updatedLastOutput = {\n          type: lastOutput.type,\n          consoleLogs: lastOutput.consoleLogs.concat(action.payload.logString)\n        };\n        newOutput = state[workspaceLocation].output.slice(0, -1).concat(updatedLastOutput);\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput\n        }\n      };\n    case LOG_OUT:\n      // Preserve the playground workspace even after log out\n      const playgroundWorkspace = state.playground;\n      return {\n        ...defaultWorkspaceManager,\n        playground: playgroundWorkspace\n      };\n    case EVAL_EDITOR:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: true,\n          isDebugging: false\n        }\n      };\n    case EVAL_REPL:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: true\n        }\n      };\n    case EVAL_INTERPRETER_SUCCESS:\n      lastOutput = state[workspaceLocation].output.slice(-1)[0];\n      if (lastOutput !== undefined && lastOutput.type === 'running') {\n        newOutput = state[workspaceLocation].output.slice(0, -1).concat({\n          type: action.payload.type,\n          value: action.payload.value,\n          consoleLogs: lastOutput.consoleLogs\n        } as ResultOutput);\n      } else {\n        newOutput = state[workspaceLocation].output.concat({\n          type: action.payload.type,\n          value: action.payload.value,\n          consoleLogs: []\n        } as ResultOutput);\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput,\n          isRunning: false,\n          breakpoints: [],\n          highlightedLines: []\n        }\n      };\n    case EVAL_TESTCASE_SUCCESS:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTestcases: state[workspaceLocation].editorTestcases.map(\n            (testcase: Testcase, i: any) => {\n              if (i === action.payload.index) {\n                return {\n                  ...testcase,\n                  result: action.payload.value,\n                  errors: undefined\n                };\n              } else {\n                return testcase;\n              }\n            }\n          ),\n          isRunning: false\n        }\n      };\n    case EVAL_TESTCASE_FAILURE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTestcases: state[workspaceLocation].editorTestcases.map(\n            (testcase: Testcase, i: number) => {\n              if (i === action.payload.index) {\n                return {\n                  ...testcase,\n                  result: undefined,\n                  errors: action.payload.value\n                };\n              }\n              return testcase;\n            }\n          )\n        }\n      };\n    case EVAL_INTERPRETER_ERROR:\n      lastOutput = state[workspaceLocation].output.slice(-1)[0];\n      if (lastOutput !== undefined && lastOutput.type === 'running') {\n        newOutput = state[workspaceLocation].output.slice(0, -1).concat({\n          type: action.payload.type,\n          errors: action.payload.errors,\n          consoleLogs: lastOutput.consoleLogs\n        } as ErrorOutput);\n      } else {\n        newOutput = state[workspaceLocation].output.concat({\n          type: action.payload.type,\n          errors: action.payload.errors,\n          consoleLogs: []\n        } as ErrorOutput);\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput,\n          isRunning: false,\n          isDebugging: false\n        }\n      };\n    /**\n     * Called to signal the end of an interruption,\n     * i.e called after the interpreter is told to stop interruption,\n     * to cause UI changes.\n     */\n    case END_INTERRUPT_EXECUTION:\n      /**\n       * Set the isRunning property of the\n       * context to false, to ensure a re-render.\n       * Also in case the async js-slang interrupt()\n       * function does not finish interrupting before\n       * this action is called.\n       */\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: false,\n          isDebugging: false\n        }\n      };\n    case END_DEBUG_PAUSE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: false,\n          isDebugging: true\n        }\n      };\n    case DEBUG_RESUME:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: true,\n          isDebugging: false\n        }\n      };\n    case DEBUG_RESET:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: false,\n          isDebugging: false\n        }\n      };\n    case RESET_TESTCASE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTestcases: state[workspaceLocation].editorTestcases.map(\n            (testcase: Testcase, i: any) => {\n              if (i === action.payload.index) {\n                return {\n                  ...testcase,\n                  result: undefined,\n                  errors: undefined\n                };\n              } else {\n                return testcase;\n              }\n            }\n          )\n        }\n      };\n\n    /**\n     * Resets the workspace to default settings,\n     * including the js-slang Context. Apply\n     * any specified settings (workspaceOptions)\n     */\n    case RESET_WORKSPACE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          ...createDefaultWorkspace(workspaceLocation),\n          ...action.payload.workspaceOptions\n        }\n      };\n    case INIT_INVITE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          sharedbAceInitValue: action.payload.editorValue,\n          sharedbAceIsInviting: true\n        }\n      };\n    case FINISH_INVITE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          sharedbAceIsInviting: false\n        }\n      };\n    /**\n     * Updates workspace without changing anything\n     * which has not been specified\n     */\n    case UPDATE_WORKSPACE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          ...action.payload.workspaceOptions\n        }\n      };\n    case SET_EDITOR_SESSION_ID:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorSessionId: action.payload.editorSessionId\n        }\n      };\n\n    case SET_EDITOR_READONLY:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorReadonly: action.payload.editorReadonly\n        }\n      };\n    case SET_WEBSOCKET_STATUS:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          websocketStatus: action.payload.websocketStatus\n        }\n      };\n    case TOGGLE_EDITOR_AUTORUN:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isEditorAutorun: !state[workspaceLocation].isEditorAutorun\n        }\n      };\n    case UPDATE_ACTIVE_TAB:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          sideContentActiveTab: action.payload.activeTab\n        }\n      };\n    case UPDATE_CURRENT_ASSESSMENT_ID:\n      return {\n        ...state,\n        assessment: {\n          ...state.assessment,\n          currentAssessment: action.payload.assessmentId,\n          currentQuestion: action.payload.questionId\n        }\n      };\n    case UPDATE_CURRENT_SUBMISSION_ID:\n      return {\n        ...state,\n        grading: {\n          ...state.grading,\n          currentSubmission: action.payload.submissionId,\n          currentQuestion: action.payload.questionId\n        }\n      };\n    case UPDATE_EDITOR_VALUE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorValue: action.payload.newEditorValue\n        }\n      };\n    case HIGHLIGHT_LINE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          highlightedLines: action.payload.highlightedLines\n        }\n      };\n    case MOVE_CURSOR:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          newCursorPosition: action.payload.cursorPosition\n        }\n      };\n    case UPDATE_REPL_VALUE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          replValue: action.payload.newReplValue\n        }\n      };\n    case UPDATE_HAS_UNSAVED_CHANGES:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          hasUnsavedChanges: action.payload.hasUnsavedChanges\n        }\n      };\n    case UPDATE_CHAPTER:\n      return {\n        ...state,\n        playground: {\n          ...state.playground,\n          context: {\n            ...state.playground.context,\n            chapter: action.payload.chapter,\n            variant: action.payload.variant\n          }\n        }\n      };\n    case NOTIFY_PROGRAM_EVALUATED:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          debuggerContext: {\n            ...state[workspaceLocation].debuggerContext,\n            result: action.payload.result,\n            lastDebuggerResult: action.payload.lastDebuggerResult,\n            code: action.payload.code,\n            context: action.payload.context,\n            workspaceLocation: action.payload.workspaceLocation\n          }\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { SourceActionType } from '../../../commons/utils/ActionsHelper';\nimport {\n  SAVE_SOURCECAST_DATA,\n  SET_CODE_DELTAS_TO_APPLY,\n  SET_CURRENT_PLAYER_TIME,\n  SET_INPUT_TO_APPLY,\n  SET_SOURCECAST_DATA,\n  SET_SOURCECAST_PLAYBACK_DURATION,\n  SET_SOURCECAST_PLAYBACK_STATUS\n} from '../SourceRecorderTypes';\nimport { SourcecastWorkspaceState, UPDATE_SOURCECAST_INDEX } from './SourcecastTypes';\n\nexport const SourcecastReducer = (\n  state: SourcecastWorkspaceState,\n  action: SourceActionType\n): SourcecastWorkspaceState => {\n  switch (action.type) {\n    case SAVE_SOURCECAST_DATA:\n      return {\n        ...state,\n        title: action.payload.title,\n        description: action.payload.description,\n        audioUrl: action.payload.audioUrl,\n        playbackData: action.payload.playbackData\n      };\n    case SET_CURRENT_PLAYER_TIME:\n      return {\n        ...state,\n        currentPlayerTime: action.payload.playerTime\n      };\n    case SET_CODE_DELTAS_TO_APPLY:\n      return {\n        ...state,\n        codeDeltasToApply: action.payload.deltas\n      };\n    case SET_INPUT_TO_APPLY:\n      return {\n        ...state,\n        inputToApply: action.payload.inputToApply\n      };\n    case SET_SOURCECAST_DATA:\n      return {\n        ...state,\n        title: action.payload.title,\n        description: action.payload.description,\n        audioUrl: action.payload.audioUrl,\n        playbackData: action.payload.playbackData\n      };\n    case SET_SOURCECAST_PLAYBACK_DURATION:\n      return {\n        ...state,\n        playbackDuration: action.payload.duration\n      };\n    case SET_SOURCECAST_PLAYBACK_STATUS:\n      return {\n        ...state,\n        playbackStatus: action.payload.playbackStatus\n      };\n    case UPDATE_SOURCECAST_INDEX:\n      return {\n        ...state,\n        sourcecastIndex: action.payload.index\n      };\n    default:\n      return state;\n  }\n};\n","import { SourceActionType } from '../../../commons/utils/ActionsHelper';\nimport { RecordingStatus } from '../SourceRecorderTypes';\nimport {\n  RECORD_INIT,\n  RECORD_INPUT,\n  RESET_INPUTS,\n  SourcereelWorkspaceState,\n  TIMER_PAUSE,\n  TIMER_RESET,\n  TIMER_RESUME,\n  TIMER_START,\n  TIMER_STOP\n} from './SourcereelTypes';\n\nexport const SourcereelReducer = (state: SourcereelWorkspaceState, action: SourceActionType) => {\n  switch (action.type) {\n    case RECORD_INIT:\n      return {\n        ...state,\n        playbackData: {\n          init: action.payload.initData,\n          inputs: []\n        }\n      };\n    case RECORD_INPUT:\n      return {\n        ...state,\n        playbackData: {\n          ...state.playbackData,\n          inputs: [...state.playbackData.inputs, action.payload.input]\n        }\n      };\n    case RESET_INPUTS:\n      return {\n        ...state,\n        playbackData: {\n          ...state.playbackData,\n          inputs: action.payload.inputs\n        }\n      };\n    case TIMER_PAUSE:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.paused,\n        timeElapsedBeforePause:\n          state.timeElapsedBeforePause + action.payload.timeNow - state.timeResumed\n      };\n    case TIMER_RESET:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.notStarted,\n        timeElapsedBeforePause: 0,\n        timeResumed: 0\n      };\n    case TIMER_RESUME:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.recording,\n        timeElapsedBeforePause:\n          action.payload.timeBefore >= 0 ? action.payload.timeBefore : state.timeElapsedBeforePause,\n        timeResumed: action.payload.timeNow\n      };\n    case TIMER_START:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.recording,\n        timeElapsedBeforePause: 0,\n        timeResumed: action.payload.timeNow\n      };\n    case TIMER_STOP:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.finished,\n        timeElapsedBeforePause: 0,\n        timeResumed: 0\n      };\n    default:\n      return state;\n  }\n};\n","import { WorkspaceState } from '../../../commons/workspace/WorkspaceTypes';\nimport { PlaybackData, RecordingStatus } from '../SourceRecorderTypes';\n\nexport const DELETE_SOURCECAST_ENTRY = 'DELETE_SOURCECAST_ENTRY';\nexport const RECORD_INIT = 'RECORD_INIT';\nexport const RECORD_INPUT = 'RECORD_INPUT';\nexport const RESET_INPUTS = 'RESET_INPUTS';\nexport const TIMER_PAUSE = 'TIMER_PAUSE';\nexport const TIMER_RESET = 'TIMER_RESET';\nexport const TIMER_RESUME = 'TIMER_RESUME';\nexport const TIMER_START = 'TIMER_START';\nexport const TIMER_STOP = 'TIMER_STOP';\n\ntype SourcereelWorkspaceAttr = {\n  readonly playbackData: PlaybackData;\n  readonly recordingStatus: RecordingStatus;\n  readonly timeElapsedBeforePause: number;\n  readonly timeResumed: number;\n};\nexport type SourcereelWorkspaceState = SourcereelWorkspaceAttr & WorkspaceState;\n","import { Action, Reducer } from 'redux';\n\nimport { ApplicationState, defaultApplication } from './ApplicationTypes';\n\nexport const ApplicationReducer: Reducer<ApplicationState> = (\n  state = defaultApplication,\n  action: Action\n) => {\n  return state;\n};\n","import { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport { combineReducers } from 'redux';\n\nimport { AcademyReducer as academy } from '../../../features/academy/AcademyReducer';\nimport { DashboardReducer as dashboard } from '../../../features/dashboard/DashboardReducer';\nimport { PlaygroundReducer as playground } from '../../../features/playground/PlaygroundReducer';\nimport { WorkspaceReducer as workspaces } from '../../workspace/WorkspaceReducer';\nimport { ApplicationReducer as application } from '../ApplicationReducer';\nimport { SessionsReducer as session } from './SessionsReducer';\n\nconst createRootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    academy,\n    application,\n    dashboard,\n    playground,\n    session,\n    workspaces\n  });\n\nexport default createRootReducer;\n","import { action } from 'typesafe-actions'; // EDITING\n\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport {\n  FINISH_INVITE,\n  INIT_INVITE,\n  INVALID_EDITOR_SESSION_ID,\n  SET_EDITOR_SESSION_ID,\n  SET_WEBSOCKET_STATUS\n} from './CollabEditingTypes';\n\nexport const finishInvite = (workspaceLocation: WorkspaceLocation) =>\n  action(FINISH_INVITE, { workspaceLocation });\n\nexport const initInvite = (editorValue: string, workspaceLocation: WorkspaceLocation) =>\n  action(INIT_INVITE, {\n    editorValue,\n    workspaceLocation\n  });\n\nexport const invalidEditorSessionId = () => action(INVALID_EDITOR_SESSION_ID);\n\nexport const setEditorSessionId = (workspaceLocation: WorkspaceLocation, editorSessionId: string) =>\n  action(SET_EDITOR_SESSION_ID, {\n    workspaceLocation,\n    editorSessionId\n  });\n\n/**\n * Sets sharedb websocket status.\n *\n * @param workspaceLocation the workspace to be reset\n * @param websocketStatus 0: CLOSED 1: OPEN\n */\nexport const setWebsocketStatus = (workspaceLocation: WorkspaceLocation, websocketStatus: number) =>\n  action(SET_WEBSOCKET_STATUS, {\n    workspaceLocation,\n    websocketStatus\n  });\n","import { action } from 'typesafe-actions';\n\nimport { SAVE_CANVAS } from './AcademyTypes';\n\nexport const saveCanvas = (canvas: HTMLCanvasElement) => action(SAVE_CANVAS, canvas);\n","import { action } from 'typesafe-actions';\n\nimport {\n  CHANGE_DATE_ASSESSMENT,\n  DELETE_ASSESSMENT,\n  PUBLISH_ASSESSMENT,\n  UPLOAD_ASSESSMENT\n} from './GroundControlTypes';\n\nexport const changeDateAssessment = (id: number, openAt: string, closeAt: string) =>\n  action(CHANGE_DATE_ASSESSMENT, { id, openAt, closeAt });\n\nexport const deleteAssessment = (id: number) => action(DELETE_ASSESSMENT, id);\n\nexport const publishAssessment = (togglePublishTo: boolean, id: number) =>\n  action(PUBLISH_ASSESSMENT, { id, togglePublishTo });\n\nexport const uploadAssessment = (file: File, forceUpdate: boolean) =>\n  action(UPLOAD_ASSESSMENT, { file, forceUpdate });\n","import { AssessmentOverview } from '../../commons/assessment/AssessmentTypes';\n\nexport const CHANGE_DATE_ASSESSMENT = 'CHANGE_DATE_ASSESSMENT';\nexport const DELETE_ASSESSMENT = 'DELETE_ASSESSMENT';\nexport const PUBLISH_ASSESSMENT = 'PUBLISH_ASSESSMENT';\nexport const UPLOAD_ASSESSMENT = 'UPLOAD_ASSESSMENT';\n\nexport interface IGroundControlAssessmentOverview extends AssessmentOverview {\n  prettyOpenAt: string;\n  prettyCloseAt: string;\n  formattedOpenAt: Date;\n  formattedCloseAt: Date;\n}\n","import { action } from 'typesafe-actions';\n\nimport {\n  PERSISTENCE_INITIALISE,\n  PERSISTENCE_OPEN_PICKER,\n  PERSISTENCE_SAVE_FILE,\n  PERSISTENCE_SAVE_FILE_AS,\n  PersistenceFile\n} from './PersistenceTypes';\n\nexport const persistenceOpenPicker = () => action(PERSISTENCE_OPEN_PICKER);\n\nexport const persistenceSaveFile = (file: PersistenceFile) => action(PERSISTENCE_SAVE_FILE, file);\n\nexport const persistenceSaveFileAs = () => action(PERSISTENCE_SAVE_FILE_AS);\n\nexport const persistenceInitialise = () => action(PERSISTENCE_INITIALISE);\n","export const PERSISTENCE_OPEN_PICKER = 'PERSISTENCE_OPEN_PICKER';\nexport const PERSISTENCE_SAVE_FILE_AS = 'PERSISTENCE_SAVE_FILE_AS';\nexport const PERSISTENCE_SAVE_FILE = 'PERSISTENCE_SAVE_FILE';\nexport const PERSISTENCE_INITIALISE = 'PERSISTENCE_INITIALISE';\n\nexport type PersistenceState = 'INACTIVE' | 'SAVED' | 'DIRTY';\n\nexport type PersistenceFile = {\n  id: string;\n  name: string;\n  lastSaved?: Date;\n};\n","import { action } from 'typesafe-actions';\n\nimport { PersistenceFile } from '../persistence/PersistenceTypes';\nimport {\n  CHANGE_QUERY_STRING,\n  GENERATE_LZ_STRING,\n  PLAYGROUND_UPDATE_PERSISTENCE_FILE,\n  SHORTEN_URL,\n  TOGGLE_USING_SUBST,\n  UPDATE_SHORT_URL\n} from './PlaygroundTypes';\n\nexport const generateLzString = () => action(GENERATE_LZ_STRING);\n\nexport const shortenURL = (keyword: string) => action(SHORTEN_URL, keyword);\n\nexport const updateShortURL = (shortURL: string) => action(UPDATE_SHORT_URL, shortURL);\n\nexport const toggleUsingSubst = (usingSubst: boolean) => action(TOGGLE_USING_SUBST, usingSubst);\n\nexport const changeQueryString = (queryString: string) => action(CHANGE_QUERY_STRING, queryString);\n\nexport const playgroundUpdatePersistenceFile = (file?: PersistenceFile) =>\n  action(PLAYGROUND_UPDATE_PERSISTENCE_FILE, file);\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport { SourcecastData } from '../SourceRecorderTypes';\nimport { FETCH_SOURCECAST_INDEX, UPDATE_SOURCECAST_INDEX } from './SourcecastTypes';\n\nexport const fetchSourcecastIndex = (workspaceLocation: WorkspaceLocation) =>\n  action(FETCH_SOURCECAST_INDEX, {\n    workspaceLocation\n  });\n\nexport const updateSourcecastIndex = (\n  index: SourcecastData[],\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(UPDATE_SOURCECAST_INDEX, {\n    index,\n    workspaceLocation\n  });\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SAVE_SOURCECAST_DATA,\n  SET_CODE_DELTAS_TO_APPLY,\n  SET_CURRENT_PLAYER_TIME,\n  SET_INPUT_TO_APPLY,\n  SET_SOURCECAST_DATA,\n  SET_SOURCECAST_PLAYBACK_DURATION,\n  SET_SOURCECAST_PLAYBACK_STATUS\n} from './SourceRecorderTypes';\n\nexport const saveSourcecastData = (\n  title: string,\n  description: string,\n  audio: Blob,\n  playbackData: PlaybackData,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(SAVE_SOURCECAST_DATA, {\n    title,\n    description,\n    audio,\n    audioUrl: window.URL.createObjectURL(audio),\n    playbackData,\n    workspaceLocation\n  });\n\nexport const setCurrentPlayerTime = (playerTime: number, workspaceLocation: WorkspaceLocation) =>\n  action(SET_CURRENT_PLAYER_TIME, {\n    playerTime,\n    workspaceLocation\n  });\n\nexport const setCodeDeltasToApply = (deltas: CodeDelta[], workspaceLocation: WorkspaceLocation) =>\n  action(SET_CODE_DELTAS_TO_APPLY, {\n    deltas,\n    workspaceLocation\n  });\n\nexport const setInputToApply = (inputToApply: Input, workspaceLocation: WorkspaceLocation) =>\n  action(SET_INPUT_TO_APPLY, {\n    inputToApply,\n    workspaceLocation\n  });\n\nexport const setSourcecastData = (\n  title: string,\n  description: string,\n  audioUrl: string,\n  playbackData: PlaybackData,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(SET_SOURCECAST_DATA, {\n    title,\n    description,\n    audioUrl,\n    playbackData,\n    workspaceLocation\n  });\n\nexport const setSourcecastDuration = (duration: number, workspaceLocation: WorkspaceLocation) =>\n  action(SET_SOURCECAST_PLAYBACK_DURATION, {\n    duration,\n    workspaceLocation\n  });\n\nexport const setSourcecastStatus = (\n  playbackStatus: PlaybackStatus,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(SET_SOURCECAST_PLAYBACK_STATUS, {\n    playbackStatus,\n    workspaceLocation\n  });\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport { Input, PlaybackData } from '../SourceRecorderTypes';\nimport {\n  DELETE_SOURCECAST_ENTRY,\n  RECORD_INIT,\n  RECORD_INPUT,\n  RESET_INPUTS,\n  TIMER_PAUSE,\n  TIMER_RESET,\n  TIMER_RESUME,\n  TIMER_START,\n  TIMER_STOP\n} from './SourcereelTypes';\n\nexport const deleteSourcecastEntry = (id: number, workspaceLocation: WorkspaceLocation) =>\n  action(DELETE_SOURCECAST_ENTRY, {\n    id,\n    workspaceLocation\n  });\n\nexport const recordInit = (initData: PlaybackData['init'], workspaceLocation: WorkspaceLocation) =>\n  action(RECORD_INIT, {\n    initData,\n    workspaceLocation\n  });\n\nexport const recordInput = (input: Input, workspaceLocation: WorkspaceLocation) =>\n  action(RECORD_INPUT, {\n    input,\n    workspaceLocation\n  });\n\nexport const resetInputs = (inputs: Input[], workspaceLocation: WorkspaceLocation) =>\n  action(RESET_INPUTS, {\n    inputs,\n    workspaceLocation\n  });\n\nexport const timerPause = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_PAUSE, {\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n\nexport const timerReset = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_RESET, {\n    workspaceLocation\n  });\n\nexport const timerResume = (timeBefore: number, workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_RESUME, {\n    timeBefore,\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n\nexport const timerStart = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_START, {\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n\nexport const timerStop = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_STOP, {\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n","import { ActionType } from 'typesafe-actions';\n\nimport * as CommonsActions from '../../commons/application/actions/CommonsActions';\nimport * as InterpreterActions from '../../commons/application/actions/InterpreterActions';\nimport * as SessionActions from '../../commons/application/actions/SessionActions';\nimport * as CollabEditingActions from '../../commons/collabEditing/CollabEditingActions';\nimport * as WorkspaceActions from '../../commons/workspace/WorkspaceActions';\nimport * as AcademyActions from '../../features/academy/AcademyActions';\nimport * as DashboardActions from '../../features/dashboard/DashboardActions';\nimport * as GroundControlActions from '../../features/groundControl/GroundControlActions';\nimport * as PersistenceActions from '../../features/persistence/PersistenceActions';\nimport * as PlaygroundActions from '../../features/playground/PlaygroundActions';\nimport * as SourcecastActions from '../../features/sourceRecorder/sourcecast/SourcecastActions';\nimport * as SourceRecorderActions from '../../features/sourceRecorder/SourceRecorderActions';\nimport * as SourcereelActions from '../../features/sourceRecorder/sourcereel/SourcereelActions';\n\nexport const actions = {\n  ...CommonsActions,\n  ...CollabEditingActions,\n  ...DashboardActions,\n  ...InterpreterActions,\n  ...PlaygroundActions,\n  ...SessionActions,\n  ...SourcecastActions,\n  ...SourceRecorderActions,\n  ...SourcereelActions,\n  ...WorkspaceActions,\n  ...GroundControlActions,\n  ...AcademyActions,\n  ...PersistenceActions\n};\n\nexport type SourceActionType = ActionType<typeof actions>;\n","import { externalLibraries, ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  Assessment,\n  AssessmentCategories,\n  AssessmentOverview,\n  AssessmentStatuses,\n  GradingStatuses,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  TestcaseTypes\n} from '../assessment/AssessmentTypes';\n\nconst mockUnopenedAssessmentsOverviews: AssessmentOverview[] = [\n  {\n    category: AssessmentCategories.Mission,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/300/',\n    grade: 1,\n    id: 1,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2038-06-18T05:24:26.026Z',\n    title: 'An Odessey to Runes (Duplicate)',\n    shortSummary:\n      'This is a test for the UI of the unopened assessment overview. It links to the mock Mission 0',\n    status: AssessmentStatuses.not_attempted,\n    story: 'mission-1',\n    xp: 0,\n    gradingStatus: GradingStatuses.none\n  }\n];\n\nconst mockOpenedAssessmentsOverviews: AssessmentOverview[] = [\n  {\n    category: AssessmentCategories.Mission,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/300/',\n    grade: 2,\n    id: 1,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2018-06-18T05:24:26.026Z',\n    title: 'An Odessey to Runes',\n    shortSummary: `\n  *Lorem ipsum* dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n  incididunt ut labore et dolore magna aliqua.\n  \n  \\`\\`\\`\n  const a = 5;\n  \\`\\`\\`\n  \n  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\n  _doloremque laudantium_, totam rem aperiam, eaque ipsa quae ab illo inventore\n  [veritatis et quasi architecto](google.com) beatae vitae dicta sunt\n  \\`explicabo\\`.\n  \n  `,\n    status: AssessmentStatuses.attempted,\n    story: 'mission-1',\n    xp: 1,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    category: AssessmentCategories.Mission,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/?text=World&font=lobster',\n    grade: 3,\n    id: 2,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2018-07-18T05:24:26.026Z',\n    title: 'The Secret to Streams',\n    shortSummary:\n      'Once upon a time, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec vulputate sapien. Fusce vel lacus fermentum, efficitur ipsum.',\n    status: AssessmentStatuses.attempting,\n    story: 'mission-2',\n    xp: 2,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    category: AssessmentCategories.Sidequest,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/?text=Hello',\n    grade: 4,\n    id: 3,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2018-07-18T05:24:26.026Z',\n    title: 'A sample Sidequest',\n    shortSummary:\n      'Once upon a time, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec vulputate sapien. Fusce vel lacus fermentum, efficitur ipsum.',\n    status: AssessmentStatuses.not_attempted,\n    story: 'sidequest-2.1',\n    xp: 3,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    category: AssessmentCategories.Path,\n    closeAt: '2069-04-20T01:23:45.111Z',\n    coverImage: 'https://fakeimg.pl/700x400/417678,64/?text=%E3%83%91%E3%82%B9&font=noto',\n    grade: 0,\n    id: 6,\n    maxGrade: 0,\n    maxXp: 200,\n    openAt: '2018-01-01T00:00:00.000Z',\n    title: 'Basic logic gates',\n    shortSummary:\n      'This mock path serves as a demonstration of the support provided for mock programming path functionality.',\n    status: AssessmentStatuses.not_attempted,\n    story: null,\n    xp: 0,\n    gradingStatus: GradingStatuses.excluded\n  },\n  {\n    category: AssessmentCategories.Practical,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/?text=Hello',\n    grade: 4,\n    id: 5,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2018-07-18T05:24:26.026Z',\n    title: 'A sample Practical',\n    shortSummary:\n      'Once upon a time, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec vulputate sapien. Fusce vel lacus fermentum, efficitur ipsum.',\n    status: AssessmentStatuses.not_attempted,\n    story: 'sidequest-2.1',\n    xp: 3,\n    gradingStatus: GradingStatuses.none,\n    private: true\n  }\n];\n\nconst mockClosedAssessmentOverviews: AssessmentOverview[] = [\n  {\n    category: AssessmentCategories.Mission,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000/000',\n    grade: 2700,\n    id: 4,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'A closed Mission',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment is partially graded (undergoing manual grading). It should render as an orange clock.',\n    status: AssessmentStatuses.submitted,\n    story: 'mission-3',\n    xp: 800,\n    gradingStatus: GradingStatuses.grading\n  },\n  {\n    category: AssessmentCategories.Sidequest,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000,128/000,255',\n    grade: 1950,\n    id: 5,\n    maxGrade: 3000,\n    maxXp: 1000,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'Closed (not graded) Sidequest',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment is not graded. It should render as a red cross.',\n    status: AssessmentStatuses.submitted,\n    story: null,\n    xp: 500,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    category: AssessmentCategories.Sidequest,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000,128/000,255',\n    grade: 300,\n    id: 5,\n    maxGrade: 700,\n    maxXp: 500,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'Closed (fully graded) Sidequest',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment is fully graded. It should render as a green tick. This sidequest links to the mock Sidequest 4.',\n    status: AssessmentStatuses.submitted,\n    story: null,\n    xp: 150,\n    gradingStatus: GradingStatuses.graded\n  },\n  {\n    category: AssessmentCategories.Sidequest,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000/000',\n    grade: 0,\n    id: 5,\n    maxGrade: 0,\n    maxXp: 0,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'Ungraded assessment',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment does not require manual grading (e.g. paths and contests). It should render as a blue disable sign. This sidequest links to the mock Sidequest 4.',\n    status: AssessmentStatuses.submitted,\n    story: null,\n    xp: 100,\n    gradingStatus: GradingStatuses.excluded\n  }\n];\n\nexport const mockAssessmentOverviews = [\n  ...mockUnopenedAssessmentsOverviews,\n  ...mockOpenedAssessmentsOverviews,\n  ...mockClosedAssessmentOverviews\n];\n\nconst mockGlobals: Array<[string, any]> = [\n  ['testNumber', 3.141592653589793],\n  ['testString', 'who dat boi'],\n  ['testBooleanTrue', true],\n  ['testBooleanFalse', false],\n  ['testBooleanUndefined', undefined],\n  ['testBooleanNull', null],\n  ['testObject', { a: 1, b: 2 }],\n  ['testArray', [1, 2, 'a', 'b']]\n];\n\nconst mockSoundLibrary: Library = {\n  chapter: 4,\n  external: {\n    name: ExternalLibraryName.SOUNDS,\n    symbols: externalLibraries.get(ExternalLibraryName.SOUNDS)!\n  },\n  globals: mockGlobals\n};\n\nexport const mockRuneLibrary: Library = {\n  chapter: 1,\n  external: {\n    name: ExternalLibraryName.RUNES,\n    symbols: externalLibraries.get(ExternalLibraryName.RUNES)!\n  },\n  globals: mockGlobals\n};\n\nconst mockCurveLibrary: Library = {\n  chapter: 4,\n  external: {\n    name: ExternalLibraryName.CURVES,\n    symbols: externalLibraries.get(ExternalLibraryName.CURVES)!\n  },\n  globals: mockGlobals\n};\n\nconst mockToneMatrixLibrary: Library = {\n  chapter: 4,\n  external: {\n    name: ExternalLibraryName.SOUNDS,\n    symbols: ['get_matrix']\n  },\n  globals: mockGlobals\n};\n\nexport const mockAssessmentQuestions: Array<IProgrammingQuestion | IMCQQuestion> = [\n  {\n    autogradingResults: [],\n    answer: null,\n    content: `\n  This question has an id of \\`0\\`.\n  \n  \\`\\`\\`\n  What's your favourite dinner food?\n  \\`\\`\\`\n  `,\n    roomId: null,\n    id: 0,\n    library: mockSoundLibrary,\n    prepend: `const pizza = \"pizza\";\n  const sushi = \"sushi\";\n  const chickenrice = \"chicken rice\";`,\n    postpend: \"// This is a mock Postpend! You shouldn't be able to see me!\",\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `answer();`,\n        score: 1,\n        answer: `\"pizza\"`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `answer();`,\n        score: 1,\n        answer: `\"sushi\"`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `answer();`,\n        score: 1,\n        answer: `\"chicken rice\"`\n      }\n    ],\n    solutionTemplate: `function answer() {\n      // Write something here!\n  }\n  `,\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2\n  },\n  {\n    autogradingResults: [],\n    answer: `function areaOfCircle(x) {\n      return square(x) * pi;\n  }\n  \n  function volumeOfSphere(x) {\n      return 4 / 3 * cube(x) * pi;\n  }`,\n    roomId: '19422043',\n    content: 'Hello and welcome to this assessment! This is the 1st question.',\n    id: 1,\n    library: mockRuneLibrary,\n    prepend: `const square = x => x * x;\n  const cube = x => x * x * x;\n  const pi = 3.1415928;`,\n    postpend: '',\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `areaOfCircle(5);`,\n        score: 1,\n        answer: `78.53982`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `volumeOfSphere(5);`,\n        score: 1,\n        answer: `523.5988`\n      }\n    ],\n    solutionTemplate: `function areaOfCircle(x) {\n      // return area of circle\n  }\n  \n  function volumeOfSphere(x) {\n      // return volume of sphere\n  }`,\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2\n  },\n  {\n    answer: 3,\n    roomId: '19422046',\n    content:\n      'This is the 3rd question. Oddly enough, it is an ungraded MCQ question that uses the curves library! Option C has a null hint!',\n    choices: [\n      {\n        content: '**Option** `A`',\n        hint: '_hint_ A is `here`'\n      },\n      {\n        content: '### B',\n        hint: 'hint B'\n      },\n      {\n        content: 'C',\n        hint: null\n      },\n      {\n        content: 'D',\n        hint: 'hint D'\n      }\n    ],\n    id: 2,\n    library: mockCurveLibrary,\n    type: 'mcq',\n    solution: 0,\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2\n  },\n  {\n    answer: 3,\n    roomId: null,\n    content:\n      'This is the 4rth question. Oddly enough, it is a graded MCQ question that uses the curves library!',\n    choices: [\n      {\n        content: 'A',\n        hint: null\n      },\n      {\n        content: 'B',\n        hint: null\n      },\n      {\n        content: 'C',\n        hint: null\n      },\n      {\n        content: 'D',\n        hint: null\n      }\n    ],\n    id: 3,\n    library: mockCurveLibrary,\n    type: 'mcq',\n    solution: null,\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    roomId: '19422032',\n    content: 'You have reached the last question! Have some fun with the tone matrix...',\n    id: 4,\n    library: mockToneMatrixLibrary,\n    prepend: '',\n    postpend: '',\n    testcases: [],\n    solutionTemplate: '5th question mock solution template',\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2\n  }\n];\n\nexport const mockClosedAssessmentQuestions: Array<IProgrammingQuestion | IMCQQuestion> = [\n  {\n    answer: `function fibonacci(n) {\n      if (n <= 2) {\n          return 1;\n      } else {\n          return fibonacci(n-1) + fibonacci(n-2);\n      }\n  }`,\n    roomId: '19422032',\n    content: 'You can see autograding results!!!',\n    id: 0,\n    library: mockCurveLibrary,\n    prepend: '',\n    postpend: \"// This is a mock Postpend! You shouldn't be able to see me!\",\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `fibonacci(3);`,\n        score: 1,\n        answer: `2`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `fibonacci(4);`,\n        score: 1,\n        answer: `3`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `fibonacci(5);`,\n        score: 1,\n        answer: `5`\n      }\n    ],\n    solutionTemplate: `function fibonacci(n) {\n      // Your answer here\n  }`,\n    type: 'programming',\n    grader: {\n      name: 'avenger',\n      id: 1\n    },\n    gradedAt: '2038-06-18T05:24:26.026Z',\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2,\n    comments: `Good job. You are awarded the full marks!\n  \n  ----\n  ## markdown test\n  \n  # header\n  \n  **bold**\n  \n  _italics_\n  \n  * list\n  \n  1. numbered list\n  \n  - [] checkboxes\n  \n  > quote\n  \n      code\n  \n  [link to Source Academy](https://sourceacademy.nus.edu.sg)  \n  \n  ![](image-url-goes-here)`,\n    autogradingResults: [\n      {\n        resultType: 'pass'\n      },\n      {\n        resultType: 'fail',\n        expected: '8',\n        actual: '5'\n      },\n      {\n        resultType: 'error',\n        errors: [\n          {\n            errorType: 'timeout'\n          },\n          {\n            errorType: 'syntax',\n            line: 1,\n            location: 'student',\n            errorLine: 'function fibonacci(n) {',\n            errorExplanation: 'Just kidding!'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    answer: `function recurse(rune, n) {\n      return n <= 1 ? rune : make_cross(recurse(rune, n - 1));\n  }`,\n    roomId: '19422033',\n    content: 'This is a runes question - there are no testcases nor autograding results.',\n    id: 1,\n    library: mockRuneLibrary,\n    prepend: '',\n    postpend: '',\n    testcases: [],\n    solutionTemplate: `function recurse(rune, n) {\n      // Your answer here\n  }`,\n    type: 'programming',\n    grader: {\n      name: 'some avenger',\n      id: 1\n    },\n    gradedAt: '2038-06-18T05:24:26.026Z',\n    xp: 0,\n    grade: 0,\n    maxGrade: 2,\n    maxXp: 2,\n    comments: `You open the Report Card, not knowing what to expect...\n  \n      ## WOW!\n      Amazing grasp of runes. We can now move on to the next assignment.\n      \n      <br/>\n      \n      Robot Dog: \\`woof\\`\n      \n      You look at the display of the robot dog.\n      \n          FEED ME\n      1. Bread\n      2. Water\n      \n      <br/>\n      \n      * I am hungry.\n      * I am thirsty.\n      \n      <br/>\n      <br/>\n          \n      New message from **Avenger**!\n      \n      > _Cadet, please meet me at Level X-05, outside the pod bay doors. There is an important mission awaiting us._\n      \n      > _May the [Source](https://sourceacademy.nus.edu.sg) be with you._\n      \n      > Best regards, Avocado A. Avenger\n      \n      #### Upcoming Tasks\n      - [] Meet Avenger Avenger at Level X-05\n      - [] Open the Pod Bay Doors`,\n    autogradingResults: []\n  }\n];\n\nexport const mockPathQuestions: Array<IProgrammingQuestion | IMCQQuestion> = [\n  {\n    answer: null,\n    roomId: null,\n    content: 'As a recap: which of the following is not a valid logic gate?',\n    choices: [\n      {\n        content: 'XOR gate',\n        hint: 'This is the exclusive-OR gate!'\n      },\n      {\n        content: 'IF gate',\n        hint: 'Correct!'\n      },\n      {\n        content: 'AND gate',\n        hint: 'This logic gate exists!'\n      },\n      {\n        content: 'OR gate',\n        hint: 'This logic gate exists!'\n      }\n    ],\n    id: 0,\n    library: mockRuneLibrary,\n    type: 'mcq',\n    solution: 1,\n    xp: 0,\n    grade: 0,\n    maxGrade: 0,\n    maxXp: 0\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    roomId: null,\n    content: `An AND gate is a digital logic gate that implements logical conjunction on its inputs. It returns a single output that is HIGH (active) iff all the inputs to the AND gate are HIGH (active).\n  \n  In this question, let us model an AND gate as a function, and treat HIGH (active) inputs as the boolean value \\`true\\` and LOW (inactive) inputs as the boolean value \\`false\\`.\n  \n  As an AND gate is not restricted to exactly two inputs, our function shall be the same. Implement the function \\`AND(inputs)\\` which takes in the list \\`inputs\\` (a list of boolean values), and returns the output of the AND gate as a boolean. You may assume the list \\`inputs\\` is of minimum length 2.\n  \n  This question makes use of the sentinel function method to throw custom errors for each testcase.`,\n    id: 1,\n    library: mockRuneLibrary,\n    prepend: `const OR = (x, y) => x || y;`,\n    postpend: `\n  const __AND = (xs) => {\n    if (AND(list(true, true)) === undefined) {\n      error('Your function is empty!');\n    } else {}\n    \n    const result = AND(xs);\n  \n    if (!is_boolean(result)) {\n      error('Your function does not return a boolean!');\n    } else {}\n    \n    if (equal(xs, list(true, false)) && result) {\n      error('Check the truth table for an AND gate again!');\n    } else if (equal(xs, list(true, true, false)) && result) {\n      error('Are you using all inputs in the list?');\n    } else if (equal(xs, list(true, true, true)) && !result) {\n      error('Are you sure your base case is correct?');\n    } else if (AND(list(true, true)) === AND(list(false, false))) {\n      error('Oi! Do not hardcode values!');\n    } else {\n      return result;\n    }\n  };`,\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `__AND(list(true, false));`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__AND(list(true, true, false));`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__AND(list(true, OR(true, false), OR(true, true)));`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.hidden,\n        program: `__AND(list(true, OR(false, true), AND(list(true, false)), false));`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.hidden,\n        program: `__AND(list(true, OR(true, false), OR(true, AND(list(false, true))), true));`,\n        score: 0,\n        answer: `true`\n      }\n    ],\n    solutionTemplate: `function AND(inputs) {\n      // Your answer here!\n  }`,\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 0,\n    maxXp: 0\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    roomId: null,\n    content: `The XOR (exclusive-OR) gate is a digital logic gate that accepts two inputs and returns a single output that is HIGH (active) iff one of the inputs are HIGH (active), but not both.\n  \n  In this question, let us model the XOR gate as a function. Implement the function \\`XOR(x, y)\\` which takes two boolean inputs \\`x\\` and \\`y\\` and which returns the output of the XOR gate as a boolean.\n  \n  This question makes use of the wrapping container method to throw custom errors for each testcase.`,\n    id: 2,\n    library: mockRuneLibrary,\n    prepend: ``,\n    postpend: `\n  const __XOR = (x, y) => {\n    if (XOR(false, false) === undefined) {\n      error('Your function is empty!');\n    } else {}\n    \n    const result = XOR(x, y);\n  \n    if (!is_boolean(result)) {\n      error('Your function does not return a boolean!');\n    } else {}\n    \n    if (((x && !y) || (y && !x)) && !result) {\n      error('Check your truth tables!');\n    } else if (XOR(false, false) === XOR(false, true)) {\n      error('Oi! Do not hardcode values!');\n    } else {\n      return result;\n    }\n  };`,\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `__XOR(true, false);`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__XOR(false, true);`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.hidden,\n        program: `__XOR(true, XOR(true, false));`,\n        score: 0,\n        answer: `false`\n      }\n    ],\n    solutionTemplate: `function XOR(x, y) {\n      // Your answer here!\n  }`,\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 0,\n    maxXp: 0\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    roomId: null,\n    content: `The NOR logic gate is special in that it is an _universal logic gate_, that is to say, they can be composed to form any other logic gate.\n  \n  Implement the AND logic gate **using ONLY the NOR logic gate**, as the \\`NOR_AND(x, y)\\` function that takes in two booleans as input.\n  \n  The \\`NOR\\` function modeled after a NOR gate is provided for you - it accepts two boolean values and returns \\`true\\` iff both inputs are \\`false\\`.`,\n    id: 3,\n    library: mockRuneLibrary,\n    prepend: `\n  let counter = 0;\n  const NOR = (x, y) => {\n    counter = counter + 1;\n    return !(x || y);\n  };`,\n    postpend: `\n  const __NOR_AND = (x, y) => {\n    if (NOR_AND(false, false) === undefined) {\n      error('Your function is empty!');\n    } else {}\n    \n    counter = 0;\n    const result = NOR_AND(x, y);\n  \n    if (!is_boolean(result)) {\n      error('Your function does not return a boolean!');\n    } else {}\n    \n    if (!x && y && result) {\n      error('Check your truth tables!');\n    } else if (x && y && !result && counter > 0) {\n      error('Nope! Try again :)');\n    } else if (x && y && !result) {\n      error('...You did not use NOR and still got it wrong!');\n    } else if (x && y && result && counter !== 3) {\n      error('Did you use NOR in your solution? >:(');\n    } else if (x && !y && counter !== 6) {\n      error('Incorrect number of calls.');\n    } else {\n      return result;\n    }\n  };`,\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `__NOR_AND(false, true);`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__NOR_AND(true, true);`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.hidden,\n        program: `__NOR_AND(true, NOR_AND(false, true));`,\n        score: 0,\n        answer: `false`\n      }\n    ],\n    solutionTemplate: `function NOR_AND(x, y) {\n      // Your answer here!\n  }`,\n    type: 'programming',\n    xp: 0,\n    grade: 0,\n    maxGrade: 0,\n    maxXp: 0\n  }\n];\n\n/*\n * A few Assessments to try out in workspaces.\n */\nexport const mockAssessments: Assessment[] = [\n  {\n    category: 'Mission',\n    id: 1,\n    longSummary:\n      'This is the mission briefing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis vestibulum. Etiam in egestas dolor. Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum, vel ornare metus turpis sed justo. Vivamus at tellus sed ex convallis commodo at in lectus. Pellentesque pharetra pulvinar sapien pellentesque facilisis. Curabitur efficitur malesuada urna sed aliquam. Quisque massa metus, aliquam in sagittis non, cursus in sem. Morbi vel nunc at nunc pharetra lobortis. Aliquam feugiat ultricies ipsum vel sollicitudin. Vivamus nulla massa, hendrerit sit amet nibh quis, porttitor convallis nisi. ',\n    missionPDF: 'www.google.com',\n    questions: mockAssessmentQuestions,\n    title: 'An Odessey to Runes'\n  },\n  {\n    category: 'Mission',\n    id: 2,\n    longSummary:\n      'This is the mission briefing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis vestibulum. Etiam in egestas dolor. Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum, vel ornare metus turpis sed justo. Vivamus at tellus sed ex convallis commodo at in lectus. Pellentesque pharetra pulvinar sapien pellentesque facilisis. Curabitur efficitur malesuada urna sed aliquam. Quisque massa metus, aliquam in sagittis non, cursus in sem. Morbi vel nunc at nunc pharetra lobortis. Aliquam feugiat ultricies ipsum vel sollicitudin. Vivamus nulla massa, hendrerit sit amet nibh quis, porttitor convallis nisi. ',\n    missionPDF: 'www.google.com',\n    questions: mockAssessmentQuestions,\n    title: 'The Secret to Streams'\n  },\n  {\n    category: AssessmentCategories.Sidequest,\n    id: 3,\n    longSummary: `###This is the sidequest briefing.\n  \n  *Lorem ipsum* dolor sit amet, consectetur adipiscing elit.\n  \n  > Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin\n  enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis\n  vestibulum.\n  \n  - Etiam in egestas dolor.\n  - Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum,\n    vel ornare metus turpis sed justo.\n  - Vivamus at tellus sed ex convallis commodo at in lectus.\n  \n  \\`\\`\\`\n  Pellentesque\n  pharetra\n  pulvinar\n  sapien\n  \\`\\`\\``,\n    missionPDF: 'www.google.com',\n    questions: mockAssessmentQuestions,\n    title: 'A sample Sidequest'\n  },\n  {\n    category: AssessmentCategories.Mission,\n    id: 4,\n    longSummary:\n      'This is the closed mission briefing. The save button should not be there. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis vestibulum. Etiam in egestas dolor. Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum, vel ornare metus turpis sed justo. Vivamus at tellus sed ex convallis commodo at in lectus. Pellentesque pharetra pulvinar sapien pellentesque facilisis. Curabitur efficitur malesuada urna sed aliquam. Quisque massa metus, aliquam in sagittis non, cursus in sem. Morbi vel nunc at nunc pharetra lobortis. Aliquam feugiat ultricies ipsum vel sollicitudin. Vivamus nulla massa, hendrerit sit amet nibh quis, porttitor convallis nisi. ',\n    missionPDF: 'www.google.com',\n    questions: mockClosedAssessmentQuestions,\n    title: 'A Closed Mission'\n  },\n  {\n    category: AssessmentCategories.Sidequest,\n    id: 5,\n    longSummary:\n      'This is the closed sidequest briefing. The save button should not exist. This is a placeholder sidequest for testing rendering of grading statuses.',\n    missionPDF: 'www.google.com',\n    questions: mockClosedAssessmentQuestions,\n    title: 'A Closed Sidequest'\n  },\n  {\n    category: AssessmentCategories.Path,\n    id: 6,\n    longSummary: `### Basic logic gates\n  \n  This path is intended to demonstrate concepts from the lecture **Logic Circuits**. You are strongly encouraged to attempt this path to check your understanding, prior to the next Studio session. For this, you will be granted a small amount of XP!\n  \n  The path comprises 4 questions and is fully autograded and guided, and there are **no private test cases** - there will be no manual review by default. Please consult your Avenger if you require assistance!</TEXT>`,\n    missionPDF: 'www.google.com',\n    questions: mockPathQuestions,\n    title: 'A sample guided path'\n  }\n];\n","import { AssessmentCategories } from '../assessment/AssessmentTypes';\nimport { Notification, NotificationTypes } from '../notificationBadge/NotificationBadgeTypes';\n\n/**\n * Deprecated, check backend for roles\n */\nexport enum Roles {\n  student = 'student',\n  trainer = 'trainer',\n  admin = 'admin'\n}\nexport type Role = keyof typeof Roles;\n\n/**\n * Mock for fetching a role, given an access token. A null\n * value is returned for invalid tokens. Fetching a particular\n * role can be simluated using an optional paramter.\n *\n * @param accessToken a valid access token for the cadet backend.\n * @param mockRole a role to mock retrieval for.\n */\nexport const mockFetchRole = (accessToken: string, role: Role = Roles.trainer): Role | null => {\n  return role;\n};\n\n/**\n * Represents the information for a student.\n * TODO move this to a separate file once API specs are confirmed.\n */\nexport type StudentInfo = {\n  id: number;\n  totalXP: number;\n};\n\nconst mockStudentInfo = [\n  {\n    id: 0,\n    totalXP: 69\n  },\n  {\n    id: 1,\n    totalXP: 1000\n  }\n];\n\n/**\n * Mock for fetching a trainer/admin's student information. A null value\n * is returned for invalid token or role.\n *\n * @param accessToken a valid access token for the cadet backend.\n */\nexport const mockFetchStudentInfo = (accessToken: string): StudentInfo[] | null => {\n  // mocks backend role fetching\n  const permittedRoles: Role[] = [Roles.admin, Roles.trainer];\n  const role: Role | null = mockFetchRole(accessToken);\n  if (role === null || !permittedRoles.includes(role)) {\n    return null;\n  } else {\n    return mockStudentInfo;\n  }\n};\n\nexport const mockNotifications: Notification[] = [\n  {\n    id: 1,\n    type: NotificationTypes.deadline,\n    assessment_id: 3,\n    assessment_type: AssessmentCategories.Sidequest,\n    assessment_title: 'The Secret to Streams'\n  },\n  {\n    id: 2,\n    type: NotificationTypes.autograded,\n    assessment_id: 4,\n    assessment_type: AssessmentCategories.Mission,\n    assessment_title: 'A Closed Mission'\n  },\n  {\n    id: 3,\n    type: NotificationTypes.graded,\n    assessment_id: 4,\n    assessment_type: AssessmentCategories.Mission,\n    assessment_title: 'A Closed Mission'\n  },\n  {\n    id: 4,\n    type: NotificationTypes.new,\n    assessment_id: 6,\n    assessment_type: AssessmentCategories.Path,\n    assessment_title: 'Basic Logic'\n  },\n  {\n    id: 5,\n    type: NotificationTypes.new,\n    assessment_id: 7,\n    assessment_type: AssessmentCategories.Mission,\n    assessment_title: 'Symphony of the Winds'\n  },\n  {\n    id: 6,\n    type: NotificationTypes.submitted,\n    submission_id: 1,\n    assessment_type: AssessmentCategories.Mission,\n    assessment_title: 'Mission 0'\n  },\n  {\n    id: 7,\n    type: NotificationTypes.submitted,\n    submission_id: 2,\n    assessment_type: AssessmentCategories.Mission,\n    assessment_title: 'Mission 1'\n  },\n  {\n    id: 8,\n    type: NotificationTypes.submitted,\n    submission_id: 3,\n    assessment_type: AssessmentCategories.Mission,\n    assessment_title: 'Mission 0'\n  }\n];\n","import { GradingSummary } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview } from '../../features/grading/GradingTypes';\nimport { Testcase, TestcaseTypes } from '../assessment/AssessmentTypes';\nimport { mockRuneLibrary } from './AssessmentMocks';\nimport { mockFetchRole, Role, Roles } from './UserMocks';\n\nexport const mockGradingOverviews: GradingOverview[] = [\n  {\n    gradeAdjustment: 0,\n    xpAdjustment: 0,\n    assessmentCategory: 'Mission',\n    assessmentId: 0,\n    assessmentName: 'Mission 0 ',\n    currentGrade: 69,\n    currentXp: 69,\n    xpBonus: 10,\n    initialGrade: 69,\n    initialXp: 69,\n    maxGrade: 100,\n    maxXp: 100,\n    studentId: 0,\n    studentName: 'Al Gorithm',\n    submissionId: 1,\n    submissionStatus: 'submitted',\n    groupName: '1D',\n    gradingStatus: 'graded',\n    questionCount: 6,\n    gradedCount: 6\n  },\n  {\n    gradeAdjustment: -2,\n    xpAdjustment: -2,\n    assessmentCategory: 'Mission',\n    assessmentId: 1,\n    assessmentName: 'Mission 1',\n    currentGrade: -2,\n    currentXp: -2,\n    xpBonus: 12,\n    initialGrade: 0,\n    initialXp: 0,\n    maxGrade: 400,\n    maxXp: 400,\n    studentId: 0,\n    studentName: 'Dee Sign',\n    submissionId: 2,\n    submissionStatus: 'submitted',\n    groupName: '1F',\n    gradingStatus: 'grading',\n    questionCount: 6,\n    gradedCount: 2\n  },\n  {\n    gradeAdjustment: 4,\n    xpAdjustment: 4,\n    assessmentCategory: 'Mission',\n    assessmentId: 0,\n    assessmentName: 'Mission 0',\n    currentGrade: 1000,\n    currentXp: 1000,\n    xpBonus: 12,\n    initialGrade: 996,\n    initialXp: 996,\n    maxGrade: 1000,\n    maxXp: 1000,\n    studentId: 1,\n    studentName: 'May Trix',\n    submissionId: 3,\n    submissionStatus: 'submitted',\n    groupName: '1F',\n    gradingStatus: 'none',\n    questionCount: 6,\n    gradedCount: 0\n  }\n];\n\n/**\n * Mock for fetching a trainer/admin's student grading information.\n * A null value is returned for invalid token or role.\n *\n * @param accessToken a valid access token for the cadet backend.\n * @param group a boolean if true, only fetches submissions from the grader's group\n */\nexport const mockFetchGradingOverview = (\n  accessToken: string,\n  group: boolean\n): GradingOverview[] | null => {\n  // mocks backend role fetching\n  const permittedRoles: Role[] = [Roles.admin, Roles.trainer];\n  const role: Role | null = mockFetchRole(accessToken);\n  if (role === null || !permittedRoles.includes(role)) {\n    return null;\n  } else {\n    return group\n      ? [mockGradingOverviews[0]]\n      : mockGradingOverviews.sort((subX: GradingOverview, subY: GradingOverview) =>\n          subX.assessmentId !== subY.assessmentId\n            ? subY.assessmentId - subX.assessmentId\n            : subY.submissionId - subX.submissionId\n        );\n  }\n};\n\nexport const mockTestcases: Testcase[] = [\n  { type: TestcaseTypes.public, program: `remainder(12, 7);`, score: 1, answer: `5` },\n  { type: TestcaseTypes.public, program: `remainder(6, 1);`, score: 2, answer: `0` },\n  { type: TestcaseTypes.private, program: `remainder(-15, 6);`, score: 2, answer: `-3` },\n  { type: TestcaseTypes.private, program: `remainder(17, 23) === 17;`, score: 2, answer: `true` }\n];\n\nconst mockGrading: Grading = [\n  {\n    question: {\n      answer: `function remainder(n, d) {\n  return (n - d) < 0 ? n : remainder(n - d, d);\n}`,\n      content: `\nHello and welcome to this assessment! This is the *0th question*.\n\n\\`\\`\\`\n>>> import this\n\\`\\`\\`\n`,\n      prepend: '// THIS IS A PREPEND',\n      postpend: '// THIS IS A POSTPEND',\n      testcases: mockTestcases,\n      roomId: null,\n      id: 0,\n      library: mockRuneLibrary,\n      solutionTemplate: '0th question mock solution template',\n      solution: `This is how the 0th question is solved. [7 points]\n\nfunction remainder(n, d) {\n  return n % d;\n}`,\n      type: 'programming',\n      maxGrade: 1000,\n      maxXp: 1000,\n      grader: {\n        name: 'avenger',\n        id: 1\n      },\n      gradedAt: '2038-06-18T05:24:26.026Z',\n      xp: 1,\n      grade: 1,\n      autogradingResults: [\n        {\n          resultType: 'pass'\n        },\n        {\n          resultType: 'fail',\n          expected: '8',\n          actual: '5'\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'timeout'\n            },\n            {\n              errorType: 'syntax',\n              line: 1,\n              location: 'student',\n              errorLine: 'function fibonacci(n) {',\n              errorExplanation: 'Just kidding!'\n            }\n          ]\n        }\n      ]\n    },\n    grade: {\n      gradeAdjustment: 0,\n      xpAdjustment: 0,\n      grade: 0,\n      xp: 0,\n      roomId: '19422040',\n      comments: `Good job. You are awarded the full marks!\n\n----\n## markdown test\n\n# header\n\n**bold**\n\n_italics_\n\n* list\n\n1. numbered list\n\n- [] checkboxes\n\n> quote\n\n    code\n\n[link to Source Academy](https://sourceacademy.nus.edu.sg)\n\n![](image-url-goes-here)\n      `,\n      grader: {\n        name: 'HARTIN MENZ',\n        id: 100\n      },\n      gradedAt: '2019-08-16T13:26:32+00:00'\n    },\n    student: {\n      name: 'Al Gorithm',\n      id: 0\n    }\n  },\n  {\n    question: {\n      prepend: '',\n      postpend: '',\n      testcases: [],\n      answer: \"This student's answer to the 1st question\",\n      roomId: null,\n      content: 'Hello and welcome to this assessment! This is the 1st question.',\n      id: 1,\n      library: mockRuneLibrary,\n      solutionTemplate: '1st question mock solution template',\n      solution: null,\n      type: 'programming',\n      maxGrade: 200,\n      maxXp: 200,\n      grader: {\n        name: 'avenger',\n        id: 1\n      },\n      gradedAt: '2038-06-18T05:24:26.026Z',\n      xp: 1,\n      grade: 1,\n      autogradingResults: [\n        {\n          resultType: 'pass'\n        },\n        {\n          resultType: 'fail',\n          expected: '8',\n          actual: '5'\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'timeout'\n            },\n            {\n              errorType: 'syntax',\n              line: 1,\n              location: 'student',\n              errorLine: 'function fibonacci(n) {',\n              errorExplanation: 'Just kidding!'\n            }\n          ]\n        }\n      ]\n    },\n    grade: {\n      gradeAdjustment: 0,\n      xpAdjustment: 0,\n      grade: 100,\n      xp: 100,\n      roomId: '19422040',\n      comments: `You open the Report Card, not knowing what to expect...\n\n## WOW!\nAmazing grasp of runes. We can now move on to the next assignment.\n\n<br/>\n\nRobot Dog: \\`woof\\`\n\nYou look at the display of the robot dog.\n\n    FEED ME\n1. Bread\n2. Water\n\n<br/>\n\n* I am hungry.\n* I am thirsty.\n\n<br/>\n<br/>\n\nNew message from **Avenger**!\n\n> _Cadet, please meet me at Level X-05, outside the pod bay doors. There is an important mission awaiting us._\n\n> _May the [Source](https://sourceacademy.nus.edu.sg) be with you._\n\n> Best regards, Avocado A. Avenger\n\n#### Upcoming Tasks\n- [] Meet Avenger Avenger at Level X-05\n- [] Open the Pod Bay Doors\n      `\n    },\n    student: {\n      name: 'Al Gorithm',\n      id: 0\n    }\n  },\n  {\n    question: {\n      // C is the answer\n      prepend: '',\n      postpend: '',\n      testcases: [],\n      answer: 3,\n      roomId: null,\n      solution: 2,\n      content:\n        'Hello and welcome to this assessment! This is the 2nd question. Oddly enough, it is an MCQ question!',\n      choices: [\n        {\n          content: 'A',\n          hint: 'hint A'\n        },\n        {\n          content: 'B',\n          hint: 'hint B'\n        },\n        {\n          content: 'C',\n          hint: 'hint C'\n        },\n        {\n          content: 'D',\n          hint: 'hint D'\n        }\n      ],\n      id: 2,\n      library: mockRuneLibrary,\n      type: 'mcq',\n      maxGrade: 100,\n      maxXp: 100,\n      grader: {\n        name: 'avenger',\n        id: 1\n      },\n      gradedAt: '2038-06-18T05:24:26.026Z',\n      xp: 1,\n      grade: 1,\n      autogradingResults: [\n        {\n          resultType: 'pass'\n        },\n        {\n          resultType: 'fail',\n          expected: '8',\n          actual: '5'\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'timeout'\n            },\n            {\n              errorType: 'syntax',\n              line: 1,\n              location: 'student',\n              errorLine: 'function fibonacci(n) {',\n              errorExplanation: 'Just kidding!'\n            }\n          ]\n        }\n      ]\n    },\n    grade: {\n      gradeAdjustment: 0,\n      xpAdjustment: 0,\n      grade: 50,\n      xp: 50,\n      roomId: '19422030'\n    },\n    student: {\n      name: 'Al Gorithm',\n      id: 0\n    }\n  }\n];\n\n/**\n * Mock for fetching a trainer/admin's student grading information.\n * A null value is returned for invalid token or role.\n *\n * @param accessToken a valid access token for the cadet backend.\n */\nexport const mockFetchGrading = (accessToken: string, submissionId: number): Grading | null => {\n  // mocks backend role fetching\n  const permittedRoles: Role[] = [Roles.admin, Roles.trainer];\n  const role: Role | null = mockFetchRole(accessToken);\n  if (role === null || !permittedRoles.includes(role)) {\n    return null;\n  } else {\n    return mockGrading;\n  }\n};\n\nexport const mockGradingSummary: GradingSummary = [\n  {\n    leaderName: 'John',\n    groupName: 'Mock Group 1',\n    ungradedMissions: 123,\n    submittedMissions: 200,\n    ungradedSidequests: 100,\n    submittedSidequests: 117\n  },\n  {\n    leaderName: 'Molly',\n    groupName: 'Mock Group 2',\n    ungradedMissions: 1232,\n    submittedMissions: 205430,\n    ungradedSidequests: 345,\n    submittedSidequests: 11547\n  },\n  {\n    leaderName: 'Lenny',\n    groupName: 'Mock Group 3',\n    ungradedMissions: 1532,\n    submittedMissions: 22200,\n    ungradedSidequests: 134500,\n    submittedSidequests: 6777\n  }\n];\n","import { GradingSummary } from '../../features/dashboard/DashboardTypes';\n\nexport const mockGradingSummary: GradingSummary = [\n  {\n    leaderName: 'John',\n    groupName: 'Mock Group 1',\n    ungradedMissions: 123,\n    submittedMissions: 200,\n    ungradedSidequests: 100,\n    submittedSidequests: 117\n  },\n  {\n    leaderName: 'Molly',\n    groupName: 'Mock Group 2',\n    ungradedMissions: 1232,\n    submittedMissions: 205430,\n    ungradedSidequests: 345,\n    submittedSidequests: 11547\n  },\n  {\n    leaderName: 'Lenny',\n    groupName: 'Mock Group 3',\n    ungradedMissions: 1532,\n    submittedMissions: 22200,\n    ungradedSidequests: 134500,\n    submittedSidequests: 6777\n  }\n];\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n\nimport { FETCH_GROUP_GRADING_SUMMARY } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview, GradingQuestion } from '../../features/grading/GradingTypes';\nimport { store } from '../../pages/createStore';\nimport { GameState, OverallState, Role } from '../application/ApplicationTypes';\nimport {\n  ACKNOWLEDGE_NOTIFICATIONS,\n  FETCH_ASSESSMENT,\n  FETCH_AUTH,\n  FETCH_GRADING,\n  FETCH_GRADING_OVERVIEWS,\n  FETCH_NOTIFICATIONS,\n  SUBMIT_ANSWER,\n  SUBMIT_GRADING,\n  SUBMIT_GRADING_AND_CONTINUE,\n  UNSUBMIT_SUBMISSION\n} from '../application/types/SessionTypes';\nimport { FETCH_ASSESSMENT_OVERVIEWS, Question } from '../assessment/AssessmentTypes';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../notificationBadge/NotificationBadgeTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { history } from '../utils/HistoryHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { mockAssessmentOverviews, mockAssessments } from './AssessmentMocks';\nimport { mockFetchGrading, mockFetchGradingOverview } from './GradingMocks';\nimport { mockGradingSummary } from './GroupMocks';\nimport { mockNotifications } from './UserMocks';\n\nexport function* mockBackendSaga(): SagaIterator {\n  yield takeEvery(FETCH_AUTH, function* (action: ReturnType<typeof actions.fetchAuth>) {\n    const tokens = {\n      accessToken: 'accessToken',\n      refreshToken: 'refreshToken'\n    };\n    const user = {\n      name: 'DevStaff',\n      role: 'staff' as Role,\n      group: '1F',\n      story: {\n        story: 'mission-1',\n        playStory: true\n      },\n      grade: 0,\n      gameState: {} as GameState\n    };\n    store.dispatch(actions.setTokens(tokens));\n    store.dispatch(actions.setUser(user));\n    yield history.push('/academy');\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT_OVERVIEWS, function* () {\n    yield put(actions.updateAssessmentOverviews([...mockAssessmentOverviews]));\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT, function* (action: ReturnType<typeof actions.fetchAssessment>) {\n    const id = action.payload;\n    const assessment = mockAssessments[id - 1];\n    yield put(actions.updateAssessment({ ...assessment }));\n  });\n\n  yield takeEvery(FETCH_GRADING_OVERVIEWS, function* (\n    action: ReturnType<typeof actions.fetchGradingOverviews>\n  ) {\n    const accessToken = yield select((state: OverallState) => state.session.accessToken);\n    const filterToGroup = action.payload;\n    const gradingOverviews = yield call(() => mockFetchGradingOverview(accessToken, filterToGroup));\n    if (gradingOverviews !== null) {\n      yield put(actions.updateGradingOverviews([...gradingOverviews]));\n    }\n  });\n\n  yield takeEvery(FETCH_GRADING, function* (action: ReturnType<typeof actions.fetchGrading>) {\n    const submissionId = action.payload;\n    const accessToken = yield select((state: OverallState) => state.session.accessToken);\n    const grading = yield call(() => mockFetchGrading(accessToken, submissionId));\n    if (grading !== null) {\n      yield put(actions.updateGrading(submissionId, [...grading]));\n    }\n  });\n\n  yield takeEvery(SUBMIT_ANSWER, function* (action: ReturnType<typeof actions.submitAnswer>) {\n    const questionId = action.payload.id;\n    const answer = action.payload.answer;\n    // Now, update the answer for the question in the assessment in the store\n    const assessmentId = yield select(\n      (state: OverallState) => state.workspaces.assessment.currentAssessment!\n    );\n    const assessment = yield select((state: OverallState) =>\n      state.session.assessments.get(assessmentId)\n    );\n    const newQuestions = assessment.questions.slice().map((question: Question) => {\n      if (question.id === questionId) {\n        question.answer = answer;\n      }\n      return question;\n    });\n    const newAssessment = {\n      ...assessment,\n      questions: newQuestions\n    };\n    yield put(actions.updateAssessment(newAssessment));\n    yield call(showSuccessMessage, 'Saved!', 1000);\n    return yield put(actions.updateHasUnsavedChanges('assessment' as WorkspaceLocation, false));\n  });\n\n  yield takeEvery(UNSUBMIT_SUBMISSION, function* (\n    action: ReturnType<typeof actions.unsubmitSubmission>\n  ) {\n    const { submissionId } = action.payload;\n    const overviews: GradingOverview[] = yield select(\n      (state: OverallState) => state.session.gradingOverviews || []\n    );\n    const index = overviews.findIndex(\n      overview =>\n        overview.submissionId === submissionId && overview.submissionStatus === 'submitted'\n    );\n    if (index === -1) {\n      yield call(showWarningMessage, '400: Bad Request');\n      return;\n    }\n    const newOverviews = (overviews as GradingOverview[]).map(overview => {\n      if (overview.submissionId === submissionId) {\n        return { ...overview, submissionStatus: 'attempted' };\n      }\n      return overview;\n    });\n    yield call(showSuccessMessage, 'Unsubmitted!', 1000);\n    yield put(actions.updateGradingOverviews(newOverviews));\n  });\n\n  const sendGrade = function* (\n    action: ReturnType<typeof actions.submitGrading | typeof actions.submitGradingAndContinue>\n  ) {\n    const { submissionId, questionId, gradeAdjustment, xpAdjustment, comments } = action.payload;\n    // Now, update the grade for the question in the Grading in the store\n    const grading: Grading = yield select((state: OverallState) =>\n      state.session.gradings.get(submissionId)\n    );\n    const newGrading = grading.slice().map((gradingQuestion: GradingQuestion) => {\n      if (gradingQuestion.question.id === questionId) {\n        gradingQuestion.grade = {\n          gradeAdjustment,\n          xpAdjustment,\n          roomId: gradingQuestion.grade.roomId,\n          grade: gradingQuestion.grade.grade,\n          xp: gradingQuestion.grade.xp,\n          comments\n        };\n      }\n      return gradingQuestion;\n    });\n    yield put(actions.updateGrading(submissionId, newGrading));\n    yield call(showSuccessMessage, 'Submitted!', 1000);\n  };\n\n  const sendGradeAndContinue = function* (\n    action: ReturnType<typeof actions.submitGradingAndContinue>\n  ) {\n    const { submissionId } = action.payload;\n    yield* sendGrade(action);\n\n    const currentQuestion = yield select(\n      (state: OverallState) => state.workspaces.grading.currentQuestion\n    );\n    /**\n     * Move to next question for grading: this only works because the\n     * SUBMIT_GRADING_AND_CONTINUE Redux action is currently only\n     * used in the Grading Workspace\n     *\n     * If the questionId is out of bounds, the componentDidUpdate callback of\n     * GradingWorkspace will cause a redirect back to '/academy/grading'\n     */\n    yield history.push(`/academy/grading/${submissionId}/${(currentQuestion || 0) + 1}`);\n  };\n\n  yield takeEvery(SUBMIT_GRADING, sendGrade);\n\n  yield takeEvery(SUBMIT_GRADING_AND_CONTINUE, sendGradeAndContinue);\n\n  yield takeEvery(ACKNOWLEDGE_NOTIFICATIONS, function* (\n    action: ReturnType<typeof actions.acknowledgeNotifications>\n  ) {\n    const notificationFilter: NotificationFilterFunction | undefined = action.payload.withFilter;\n\n    const notifications: Notification[] = yield select(\n      (state: OverallState) => state.session.notifications\n    );\n\n    let notificationsToAcknowledge = notifications;\n\n    if (notificationFilter) {\n      notificationsToAcknowledge = notificationFilter(notifications);\n    }\n\n    if (notificationsToAcknowledge.length === 0) {\n      return;\n    }\n\n    const ids = notificationsToAcknowledge.map(n => n.id);\n\n    const newNotifications: Notification[] = notifications.filter(\n      notification => !ids.includes(notification.id)\n    );\n\n    yield put(actions.updateNotifications(newNotifications));\n  });\n\n  yield takeEvery(FETCH_NOTIFICATIONS, function* (\n    action: ReturnType<typeof actions.fetchNotifications>\n  ) {\n    yield put(actions.updateNotifications(mockNotifications));\n  });\n\n  yield takeEvery(FETCH_GROUP_GRADING_SUMMARY, function* () {\n    yield put(actions.updateGroupGradingSummary([...mockGradingSummary]));\n  });\n}\n","import Constants from './Constants';\n\nexport function computeEndpointUrl(providerId: string): string | undefined {\n  const ep = Constants.authProviders.get(providerId);\n  if (!ep) {\n    return undefined;\n  }\n  try {\n    const epUrl = new URL(ep.endpoint);\n    epUrl.searchParams.set('redirect_uri', computeRedirectUri(providerId)!);\n    return epUrl.toString();\n  } catch (e) {\n    // in dev, sometimes the endpoint is a dummy; allow that\n    return ep.endpoint || '';\n  }\n}\n\nexport function computeRedirectUri(providerId: string): string | undefined {\n  const ep = Constants.authProviders.get(providerId);\n  if (!ep) {\n    return undefined;\n  }\n  const port = window.location.port === '' ? '' : `:${window.location.port}`;\n  const callback = `${window.location.protocol}//${window.location.hostname}${port}/login${\n    ep.isDefault ? '' : '?provider=' + encodeURIComponent(providerId)\n  }`;\n  return callback;\n}\n\nexport function getClientId(providerId: string): string | undefined {\n  const ep = Constants.authProviders.get(providerId);\n  if (!ep) {\n    return undefined;\n  }\n  try {\n    const epUrl = new URL(ep.endpoint);\n    return epUrl.searchParams.get('client_id') || undefined;\n  } catch (e) {\n    // in dev, sometimes the endpoint is a dummy; allow that\n    return ep.endpoint || undefined;\n  }\n}\n\nexport function getDefaultProvider():\n  | [string, NonNullable<ReturnType<typeof Constants.authProviders.get>>]\n  | undefined {\n  return [...Constants.authProviders.entries()].find(([_, { isDefault }]) => isDefault);\n}\n","/*eslint no-eval: \"error\"*/\n/*eslint-env browser*/\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n\nimport { OverallState, Role } from '../../commons/application/ApplicationTypes';\nimport {\n  Assessment,\n  AssessmentOverview,\n  AssessmentStatuses,\n  FETCH_ASSESSMENT_OVERVIEWS,\n  Question,\n  SUBMIT_ASSESSMENT\n} from '../../commons/assessment/AssessmentTypes';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../../commons/notificationBadge/NotificationBadgeTypes';\nimport { CHANGE_CHAPTER, WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport { FETCH_GROUP_GRADING_SUMMARY } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview, GradingQuestion } from '../../features/grading/GradingTypes';\nimport {\n  CHANGE_DATE_ASSESSMENT,\n  DELETE_ASSESSMENT,\n  PUBLISH_ASSESSMENT,\n  UPLOAD_ASSESSMENT\n} from '../../features/groundControl/GroundControlTypes';\nimport { FETCH_SOURCECAST_INDEX } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { SAVE_SOURCECAST_DATA } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { DELETE_SOURCECAST_ENTRY } from '../../features/sourceRecorder/sourcereel/SourcereelTypes';\nimport {\n  ACKNOWLEDGE_NOTIFICATIONS,\n  FETCH_ASSESSMENT,\n  FETCH_AUTH,\n  FETCH_GRADING,\n  FETCH_GRADING_OVERVIEWS,\n  FETCH_NOTIFICATIONS,\n  SUBMIT_ANSWER,\n  SUBMIT_GRADING,\n  SUBMIT_GRADING_AND_CONTINUE,\n  UNSUBMIT_SUBMISSION\n} from '../application/types/SessionTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { computeRedirectUri, getClientId, getDefaultProvider } from '../utils/AuthHelper';\nimport { history } from '../utils/HistoryHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport {\n  changeChapter,\n  changeDateAssessment,\n  deleteAssessment,\n  deleteSourcecastEntry,\n  getAssessment,\n  getAssessmentOverviews,\n  getGrading,\n  getGradingOverviews,\n  getGradingSummary,\n  getNotifications,\n  getSourcecastIndex,\n  getUser,\n  handleResponseError,\n  postAcknowledgeNotifications,\n  postAnswer,\n  postAssessment,\n  postAuth,\n  postGrading,\n  postSourcecast,\n  postUnsubmit,\n  publishAssessment,\n  uploadAssessment\n} from './RequestsSaga';\n\nfunction* BackendSaga(): SagaIterator {\n  yield takeEvery(FETCH_AUTH, function* (action: ReturnType<typeof actions.fetchAuth>) {\n    const { code, providerId: payloadProviderId } = action.payload;\n    const providerId = payloadProviderId || (getDefaultProvider() || [null])[0];\n    if (!providerId) {\n      yield call(\n        showWarningMessage,\n        'Could not log in; invalid provider or no providers configured.'\n      );\n      return yield history.push('/');\n    }\n    const clientId = getClientId(providerId);\n    const redirectUrl = computeRedirectUri(providerId);\n    const tokens = yield call(postAuth, code, providerId, clientId, redirectUrl);\n    if (!tokens) {\n      return yield history.push('/');\n    }\n\n    const user = yield call(getUser, tokens);\n    if (!user) {\n      return yield history.push('/');\n    }\n\n    // Old: Use dispatch instead of saga's put to guarantee the reducer has\n    // finished setting values in the state before /academy begins rendering\n    // New: Changed to yield put\n    yield put(actions.setTokens(tokens));\n    yield put(actions.setUser(user));\n    yield history.push('/academy');\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT_OVERVIEWS, function* () {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const assessmentOverviews = yield call(getAssessmentOverviews, tokens);\n    if (assessmentOverviews) {\n      yield put(actions.updateAssessmentOverviews(assessmentOverviews));\n    }\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT, function* (action: ReturnType<typeof actions.fetchAssessment>) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const id = action.payload;\n    const assessment: Assessment = yield call(getAssessment, id, tokens);\n    if (assessment) {\n      yield put(actions.updateAssessment(assessment));\n    }\n  });\n\n  yield takeEvery(SUBMIT_ANSWER, function* (action: ReturnType<typeof actions.submitAnswer>) {\n    const role = yield select((state: OverallState) => state.session.role!);\n    if (role !== Role.Student) {\n      return yield call(showWarningMessage, 'Answer rejected - only students can submit answers.');\n    }\n\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const questionId = action.payload.id;\n    const answer = action.payload.answer;\n    const resp = yield call(postAnswer, questionId, answer, tokens);\n\n    const codes: Map<number, string> = new Map([\n      [400, \"Answer rejected - can't save an empty answer.\"],\n      [403, 'Answer rejected - assessment not open or already finalised.']\n    ]);\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp, codes);\n      return;\n    }\n\n    yield call(showSuccessMessage, 'Saved!', 1000);\n    // Now, update the answer for the question in the assessment in the store\n    const assessmentId = yield select(\n      (state: OverallState) => state.workspaces.assessment.currentAssessment!\n    );\n    const assessment = yield select((state: OverallState) =>\n      state.session.assessments.get(assessmentId)\n    );\n    const newQuestions = assessment.questions.slice().map((question: Question) => {\n      if (question.id === questionId) {\n        return { ...question, answer };\n      }\n      return question;\n    });\n    const newAssessment = {\n      ...assessment,\n      questions: newQuestions\n    };\n    yield put(actions.updateAssessment(newAssessment));\n    return yield put(actions.updateHasUnsavedChanges('assessment' as WorkspaceLocation, false));\n  });\n\n  yield takeEvery(SUBMIT_ASSESSMENT, function* (\n    action: ReturnType<typeof actions.submitAssessment>\n  ) {\n    const role: Role = yield select((state: OverallState) => state.session.role);\n    if (role !== Role.Student) {\n      return yield call(\n        showWarningMessage,\n        'Submission rejected - only students can submit assessments.'\n      );\n    }\n\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const assessmentId = action.payload;\n    const resp = yield call(postAssessment, assessmentId, tokens);\n\n    const codes: Map<number, string> = new Map([\n      [400, 'Not allowed to finalise - some questions are unattempted.'],\n      [403, 'Not allowed to finalise - assessment not open or already finalised.']\n    ]);\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp, codes);\n      return;\n    }\n\n    yield call(showSuccessMessage, 'Submitted!', 2000);\n    // Now, update the status of the assessment overview in the store\n    const overviews: AssessmentOverview[] = yield select(\n      (state: OverallState) => state.session.assessmentOverviews\n    );\n    const newOverviews = overviews.map(overview => {\n      if (overview.id === assessmentId) {\n        return { ...overview, status: AssessmentStatuses.submitted };\n      }\n      return overview;\n    });\n    return yield put(actions.updateAssessmentOverviews(newOverviews));\n  });\n\n  yield takeEvery(FETCH_GRADING_OVERVIEWS, function* (\n    action: ReturnType<typeof actions.fetchGradingOverviews>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n\n    const filterToGroup = action.payload;\n\n    const gradingOverviews = yield call(getGradingOverviews, tokens, filterToGroup);\n    if (gradingOverviews) {\n      yield put(actions.updateGradingOverviews(gradingOverviews));\n    }\n  });\n\n  yield takeEvery(FETCH_GRADING, function* (action: ReturnType<typeof actions.fetchGrading>) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const id = action.payload;\n    const grading = yield call(getGrading, id, tokens);\n    if (grading) {\n      yield put(actions.updateGrading(id, grading));\n    }\n  });\n\n  /**\n   * Unsubmits the submission and updates the grading overviews of the new status.\n   */\n  yield takeEvery(UNSUBMIT_SUBMISSION, function* (\n    action: ReturnType<typeof actions.unsubmitSubmission>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const { submissionId } = action.payload;\n\n    const resp: Response = yield postUnsubmit(submissionId, tokens);\n\n    const codes: Map<number, string> = new Map([\n      [400, 'Not allowed to unsubmit - submission incomplete or not submitted.'],\n      [403, \"Not allowed to unsubmit - not this student's Avenger or an Admin.\"]\n    ]);\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp, codes);\n      return;\n    }\n\n    const overviews = yield select((state: OverallState) => state.session.gradingOverviews || []);\n    const newOverviews = (overviews as GradingOverview[]).map(overview => {\n      if (overview.submissionId === submissionId) {\n        return { ...overview, submissionStatus: 'attempted' };\n      }\n      return overview;\n    });\n    yield call(showSuccessMessage, 'Unsubmit successful', 1000);\n    yield put(actions.updateGradingOverviews(newOverviews));\n  });\n\n  const sendGrade = function* (\n    action:\n      | ReturnType<typeof actions.submitGrading>\n      | ReturnType<typeof actions.submitGradingAndContinue>\n  ) {\n    const role = yield select((state: OverallState) => state.session.role!);\n    if (role === Role.Student) {\n      return yield call(showWarningMessage, 'Only staff can submit answers.');\n    }\n    const { submissionId, questionId, gradeAdjustment, xpAdjustment, comments } = action.payload;\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const resp = yield postGrading(\n      submissionId,\n      questionId,\n      gradeAdjustment,\n      xpAdjustment,\n      tokens,\n      comments\n    );\n\n    const codes: Map<number, string> = new Map([\n      [400, 'Grading rejected - missing permissions or invalid grade parameters.'],\n      [405, 'Not allowed to grade - submission incomplete or not submitted.']\n    ]);\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp, codes);\n      return;\n    }\n\n    yield call(showSuccessMessage, 'Submitted!', 1000);\n    // Now, update the grade for the question in the Grading in the store\n    const grading: Grading = yield select((state: OverallState) =>\n      state.session.gradings.get(submissionId)\n    );\n    const newGrading = grading.slice().map((gradingQuestion: GradingQuestion) => {\n      if (gradingQuestion.question.id === questionId) {\n        gradingQuestion.grade = {\n          gradeAdjustment,\n          xpAdjustment,\n          roomId: gradingQuestion.grade.roomId,\n          grade: gradingQuestion.grade.grade,\n          xp: gradingQuestion.grade.xp,\n          comments\n        };\n      }\n      return gradingQuestion;\n    });\n    yield put(actions.updateGrading(submissionId, newGrading));\n  };\n\n  const sendGradeAndContinue = function* (\n    action: ReturnType<typeof actions.submitGradingAndContinue>\n  ) {\n    const { submissionId } = action.payload;\n    yield* sendGrade(action);\n\n    const currentQuestion = yield select(\n      (state: OverallState) => state.workspaces.grading.currentQuestion\n    );\n    /**\n     * Move to next question for grading: this only works because the\n     * SUBMIT_GRADING_AND_CONTINUE Redux action is currently only\n     * used in the Grading Workspace\n     *\n     * If the questionId is out of bounds, the componentDidUpdate callback of\n     * GradingWorkspace will cause a redirect back to '/academy/grading'\n     */\n    yield history.push(`/academy/grading/${submissionId}/${(currentQuestion || 0) + 1}`);\n  };\n\n  yield takeEvery(SUBMIT_GRADING, sendGrade);\n\n  yield takeEvery(SUBMIT_GRADING_AND_CONTINUE, sendGradeAndContinue);\n\n  yield takeEvery(FETCH_NOTIFICATIONS, function* (\n    action: ReturnType<typeof actions.fetchNotifications>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n\n    const notifications = yield call(getNotifications, tokens);\n\n    yield put(actions.updateNotifications(notifications));\n  });\n\n  yield takeEvery(ACKNOWLEDGE_NOTIFICATIONS, function* (\n    action: ReturnType<typeof actions.acknowledgeNotifications>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n\n    const notificationFilter: NotificationFilterFunction | undefined = action.payload.withFilter;\n\n    const notifications: Notification[] = yield select(\n      (state: OverallState) => state.session.notifications\n    );\n\n    let notificationsToAcknowledge = notifications;\n\n    if (notificationFilter) {\n      notificationsToAcknowledge = notificationFilter(notifications);\n    }\n\n    if (notificationsToAcknowledge.length === 0) {\n      return;\n    }\n\n    const ids = notificationsToAcknowledge.map(n => n.id);\n\n    const newNotifications: Notification[] = notifications.filter(\n      notification => !ids.includes(notification.id)\n    );\n\n    yield put(actions.updateNotifications(newNotifications));\n\n    const resp: Response | null = yield call(postAcknowledgeNotifications, tokens, ids);\n\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp);\n      return;\n    }\n  });\n\n  yield takeEvery(DELETE_SOURCECAST_ENTRY, function* (\n    action: ReturnType<typeof actions.deleteSourcecastEntry>\n  ) {\n    const role: Role = yield select((state: OverallState) => state.session.role!);\n    if (role === Role.Student) {\n      return yield call(showWarningMessage, 'Only staff can delete sourcecasts.');\n    }\n\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const { id } = action.payload;\n    const resp: Response = yield deleteSourcecastEntry(id, tokens);\n\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp);\n      return;\n    }\n\n    const sourcecastIndex = yield call(getSourcecastIndex, tokens);\n    if (sourcecastIndex) {\n      yield put(actions.updateSourcecastIndex(sourcecastIndex, action.payload.workspaceLocation));\n    }\n    yield call(showSuccessMessage, 'Deleted successfully!', 1000);\n  });\n\n  yield takeEvery(FETCH_SOURCECAST_INDEX, function* (\n    action: ReturnType<typeof actions.fetchSourcecastIndex>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const sourcecastIndex = yield call(getSourcecastIndex, tokens);\n    if (sourcecastIndex) {\n      yield put(actions.updateSourcecastIndex(sourcecastIndex, action.payload.workspaceLocation));\n    }\n  });\n\n  yield takeEvery(SAVE_SOURCECAST_DATA, function* (\n    action: ReturnType<typeof actions.saveSourcecastData>\n  ) {\n    const role = yield select((state: OverallState) => state.session.role!);\n    if (role === Role.Student) {\n      return yield call(showWarningMessage, 'Only staff can save sourcecast.');\n    }\n    const { title, description, audio, playbackData } = action.payload;\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const resp = yield postSourcecast(title, description, audio, playbackData, tokens);\n\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp, new Map());\n      return;\n    }\n\n    yield call(showSuccessMessage, 'Saved successfully!', 1000);\n    yield history.push('/sourcecast');\n  });\n\n  yield takeEvery(CHANGE_CHAPTER, function* (action: ReturnType<typeof actions.changeChapter>) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n\n    const chapter = action.payload;\n    const resp: Response = yield call(changeChapter, chapter.chapter, chapter.variant, tokens);\n\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp);\n      return;\n    }\n\n    yield put(actions.updateChapter(chapter.chapter, chapter.variant));\n    yield call(showSuccessMessage, 'Updated successfully!', 1000);\n  });\n\n  yield takeEvery(FETCH_GROUP_GRADING_SUMMARY, function* (\n    action: ReturnType<typeof actions.fetchGroupGradingSummary>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const groupOverviews = yield call(getGradingSummary, tokens);\n    if (groupOverviews) {\n      yield put(actions.updateGroupGradingSummary(groupOverviews));\n    }\n  });\n\n  yield takeEvery(CHANGE_DATE_ASSESSMENT, function* (\n    action: ReturnType<typeof actions.changeDateAssessment>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const id = action.payload.id;\n    const closeAt = action.payload.closeAt;\n    const openAt = action.payload.openAt;\n    const respMsg: string | null = yield changeDateAssessment(id, closeAt, openAt, tokens);\n    if (respMsg == null) {\n      yield handleResponseError(respMsg);\n      return;\n    } else if (respMsg !== 'OK') {\n      yield call(showWarningMessage, respMsg, 5000);\n      return;\n    }\n\n    yield put(actions.fetchAssessmentOverviews());\n    yield call(showSuccessMessage, 'Updated successfully!', 1000);\n  });\n\n  yield takeEvery(DELETE_ASSESSMENT, function* (\n    action: ReturnType<typeof actions.deleteAssessment>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const id = action.payload;\n    const resp: Response = yield deleteAssessment(id, tokens);\n\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp);\n      return;\n    }\n\n    yield put(actions.fetchAssessmentOverviews());\n    yield call(showSuccessMessage, 'Deleted successfully!', 1000);\n  });\n\n  yield takeEvery(PUBLISH_ASSESSMENT, function* (\n    action: ReturnType<typeof actions.publishAssessment>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const id = action.payload.id;\n    const togglePublishTo = action.payload.togglePublishTo;\n    const resp: Response = yield publishAssessment(id, togglePublishTo, tokens);\n\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp);\n      return;\n    }\n\n    yield put(actions.fetchAssessmentOverviews());\n\n    if (togglePublishTo) {\n      yield call(showSuccessMessage, 'Published successfully!', 1000);\n    } else {\n      yield call(showSuccessMessage, 'Unpublished successfully!', 1000);\n    }\n  });\n\n  yield takeEvery(UPLOAD_ASSESSMENT, function* (\n    action: ReturnType<typeof actions.uploadAssessment>\n  ) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const file = action.payload.file;\n    const forceUpdate = action.payload.forceUpdate;\n    const respMsg = yield uploadAssessment(file, tokens, forceUpdate);\n    if (!respMsg) {\n      yield handleResponseError(respMsg);\n    } else if (respMsg === 'OK') {\n      yield call(showSuccessMessage, 'Uploaded successfully!', 2000);\n    } else if (respMsg === 'Force Update OK') {\n      yield call(showSuccessMessage, 'Assessment force updated successfully!', 2000);\n    } else {\n      yield call(showWarningMessage, respMsg, 10000);\n      return;\n    }\n    yield put(actions.fetchAssessmentOverviews());\n  });\n\n  /* yield takeEvery(actionTypes.FETCH_TEST_STORIES, function*(\n    action: ReturnType<typeof actions.fetchTestStories>\n  ) {\n    // TODO: implement when stories backend is implemented\n  }); */\n\n  // Related to game, disabled for now\n  /*\n  yield takeEvery(SAVE_USER_STATE, function*(action: ReturnType<typeof actions.saveUserData>) {\n    const tokens = yield select((state: OverallState) => ({\n      accessToken: state.session.accessToken,\n      refreshToken: state.session.refreshToken\n    }));\n    const gameState: GameState = action.payload;\n    const resp = yield putUserGameState(gameState, tokens);\n    if (!resp || !resp.ok) {\n      yield handleResponseError(resp);\n      return;\n    }\n    yield put(actions.setGameState(gameState));\n  });\n  */\n}\n\nexport default BackendSaga;\n","/*eslint no-eval: \"error\"*/\n/*eslint-env browser*/\nimport { call } from 'redux-saga/effects';\n\nimport { GameState } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport {\n  Assessment,\n  AssessmentCategory,\n  AssessmentOverview,\n  GradingStatus,\n  IProgrammingQuestion,\n  QuestionType,\n  QuestionTypes\n} from '../../commons/assessment/AssessmentTypes';\nimport { GradingSummary } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview, GradingQuestion } from '../../features/grading/GradingTypes';\nimport { PlaybackData, SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { store } from '../../pages/createStore';\nimport { Notification } from '../notificationBadge/NotificationBadgeTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { castLibrary } from '../utils/CastBackend';\nimport Constants from '../utils/Constants';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\n/**\n * @property accessToken - backend access token\n * @property errorMessage - message to showWarningMessage on failure\n * @property body - request body, for HTTP POST\n * @property noContentType - set to true when sending multipart data\n * @property noHeaderAccept - if Accept: application/json should be omitted\n * @property refreshToken - backend refresh token\n * @property shouldRefresh - if should attempt to refresh access token\n *\n * If shouldRefresh, accessToken and refreshToken are required.\n */\ntype RequestOptions = {\n  accessToken?: string;\n  errorMessage?: string;\n  body?: object;\n  noContentType?: boolean;\n  noHeaderAccept?: boolean;\n  refreshToken?: string;\n  shouldAutoLogout?: boolean;\n  shouldRefresh?: boolean;\n};\n\ntype Tokens = {\n  accessToken: string;\n  refreshToken: string;\n};\n/**\n * POST /auth\n */\nexport async function postAuth(\n  code: string,\n  providerId: string,\n  clientId?: string,\n  redirectUri?: string\n): Promise<Tokens | null> {\n  const resp = await request('auth', 'POST', {\n    body: {\n      code,\n      provider: providerId,\n      ...(clientId ? { client_id: clientId } : {}),\n      ...(redirectUri ? { redirect_uri: redirectUri } : {})\n    },\n    errorMessage: 'Could not login. Please contact the module administrator.'\n  });\n  if (!resp) {\n    return null;\n  }\n  const tokens = await resp.json();\n  return {\n    accessToken: tokens.access_token,\n    refreshToken: tokens.refresh_token\n  };\n}\n\n/**\n * POST /auth/refresh\n */\nasync function postRefresh(refreshToken: string): Promise<Tokens | null> {\n  const resp = await request('auth/refresh', 'POST', {\n    body: { refresh_token: refreshToken }\n  });\n  if (!resp) {\n    return null;\n  }\n  const tokens = await resp.json();\n  return {\n    accessToken: tokens.access_token,\n    refreshToken: tokens.refresh_token\n  };\n}\n\n/**\n * GET /user\n */\nexport async function getUser(tokens: Tokens): Promise<object | null> {\n  const resp = await request('user', 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n  return await resp.json();\n}\n\n/**\n * PUT /user/game_states/\n */\nexport async function putUserGameState(\n  gameStates: GameState,\n  tokens: Tokens\n): Promise<Response | null> {\n  const resp = await request('user/game_states/save', 'PUT', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    body: {\n      gameStates: JSON.stringify(gameStates)\n    }\n  });\n  return resp;\n}\n\n/**\n * GET /assessments\n */\nexport async function getAssessmentOverviews(tokens: Tokens): Promise<AssessmentOverview[] | null> {\n  const resp = await request('assessments', 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const assessmentOverviews = await resp.json();\n  return assessmentOverviews.map((overview: any) => {\n    /**\n     * backend has property ->     type: 'mission' | 'sidequest' | 'path' | 'contest'\n     *              we have -> category: 'Mission' | 'Sidequest' | 'Path' | 'Contest'\n     */\n    overview.category = capitalise(overview.type);\n    delete overview.type;\n\n    overview.gradingStatus = computeGradingStatus(\n      overview.category,\n      overview.status,\n      overview.gradedCount,\n      overview.questionCount\n    );\n    delete overview.gradedCount;\n    delete overview.questionCount;\n\n    return overview as AssessmentOverview;\n  });\n}\n\n/**\n * GET /assessments/${assessmentId}\n */\nexport async function getAssessment(id: number, tokens: Tokens): Promise<Assessment | null> {\n  let resp = await request(`assessments/${id}`, 'POST', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  // Attempt to load password-protected assessment\n  while (resp && resp.status === 403) {\n    const input = window.prompt('Please enter password.', '');\n    if (!input) {\n      resp = null;\n      window.history.back();\n      return null;\n    }\n\n    resp = await request(`assessments/${id}`, 'POST', {\n      accessToken: tokens.accessToken,\n      refreshToken: tokens.refreshToken,\n      body: {\n        password: input\n      },\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    });\n  }\n\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  const assessment = (await resp.json()) as Assessment;\n  // backend has property ->     type: 'mission' | 'sidequest' | 'path' | 'contest'\n  //              we have -> category: 'Mission' | 'Sidequest' | 'Path' | 'Contest'\n  assessment.category = capitalise((assessment as any).type) as AssessmentCategory;\n  delete (assessment as any).type;\n  assessment.questions = assessment.questions.map(q => {\n    if (q.type === QuestionTypes.programming) {\n      const question = q as IProgrammingQuestion;\n      question.autogradingResults = question.autogradingResults || [];\n      question.prepend = question.prepend || '';\n      question.postpend = question.postpend || '';\n      question.testcases = question.testcases || [];\n      q = question;\n    }\n\n    // If the backend returns :nil (null) for grader, then the question is not graded\n    // Delete the grader and gradedAt attributes\n    if (q.grader === null) {\n      delete q.grader;\n      delete q.gradedAt;\n    }\n\n    // Make library.external.name uppercase\n    q.library.external.name = q.library.external.name.toUpperCase() as ExternalLibraryName;\n    // Make globals into an Array of (string, value)\n    q.library.globals = Object.entries(q.library.globals as object).map(entry => {\n      try {\n        entry[1] = (window as any).eval(entry[1]);\n      } catch (e) {}\n      return entry;\n    });\n    return q;\n  });\n  return assessment;\n}\n\n/**\n * POST /assessments/question/${questionId}/submit\n */\nexport async function postAnswer(\n  id: number,\n  answer: string | number,\n  tokens: Tokens\n): Promise<Response | null> {\n  const resp = await request(`assessments/question/${id}/submit`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: { answer: `${answer}` },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n}\n\n/**\n * POST /assessments/${assessmentId}/submit\n */\nexport async function postAssessment(id: number, tokens: Tokens): Promise<Response | null> {\n  const resp = await request(`assessments/${id}/submit`, 'POST', {\n    accessToken: tokens.accessToken,\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false, // 400 if some questions unattempted\n    shouldRefresh: true\n  });\n  return resp;\n}\n\n/*\n * GET /grading\n * @params group - a boolean if true gets the submissions from the grader's group\n * @returns {Array} GradingOverview[]\n */\nexport async function getGradingOverviews(\n  tokens: Tokens,\n  group: boolean\n): Promise<GradingOverview[] | null> {\n  const resp = await request(`grading?group=${group}`, 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n  if (!resp) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const gradingOverviews = await resp.json();\n  return gradingOverviews\n    .map((overview: any) => {\n      const gradingOverview: GradingOverview = {\n        assessmentId: overview.assessment.id,\n        assessmentName: overview.assessment.title,\n        assessmentCategory: capitalise(overview.assessment.type) as AssessmentCategory,\n        studentId: overview.student.id,\n        studentName: overview.student.name,\n        submissionId: overview.id,\n        submissionStatus: overview.status,\n        groupName: overview.student.groupName,\n        // Grade\n        initialGrade: overview.grade,\n        gradeAdjustment: overview.adjustment,\n        currentGrade: overview.grade + overview.adjustment,\n        maxGrade: overview.assessment.maxGrade,\n        gradingStatus: 'none',\n        questionCount: overview.assessment.questionCount,\n        gradedCount: overview.gradedCount,\n        // XP\n        initialXp: overview.xp,\n        xpAdjustment: overview.xpAdjustment,\n        currentXp: overview.xp + overview.xpAdjustment,\n        maxXp: overview.assessment.maxXp,\n        xpBonus: overview.xpBonus\n      };\n      gradingOverview.gradingStatus = computeGradingStatus(\n        gradingOverview.assessmentCategory,\n        gradingOverview.submissionStatus,\n        gradingOverview.gradedCount,\n        gradingOverview.questionCount\n      );\n      return gradingOverview;\n    })\n    .sort((subX: GradingOverview, subY: GradingOverview) =>\n      subX.assessmentId !== subY.assessmentId\n        ? subY.assessmentId - subX.assessmentId\n        : subY.submissionId - subX.submissionId\n    );\n}\n\n/**\n * GET /grading/${submissionId}\n * @returns {Grading}\n */\nexport async function getGrading(submissionId: number, tokens: Tokens): Promise<Grading | null> {\n  const resp = await request(`grading/${submissionId}`, 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n  if (!resp) {\n    return null;\n  }\n  const gradingResult = await resp.json();\n  const grading: Grading = gradingResult.map((gradingQuestion: any) => {\n    const { student, question, grade } = gradingQuestion;\n\n    const result = {\n      question: {\n        answer: question.answer,\n        autogradingResults: question.autogradingResults || [],\n        choices: question.choices,\n        content: question.content,\n        roomId: null,\n        id: question.id,\n        library: castLibrary(question.library),\n        solution: gradingQuestion.solution || question.solution || null,\n        solutionTemplate: question.solutionTemplate,\n        prepend: question.prepend || '',\n        postpend: question.postpend || '',\n        testcases: question.testcases || [],\n        type: question.type as QuestionType,\n        maxGrade: question.maxGrade,\n        maxXp: question.maxXp\n      },\n      student,\n      grade: {\n        grade: grade.grade,\n        xp: grade.xp,\n        roomId: grade.roomId || '',\n        gradeAdjustment: grade.adjustment,\n        xpAdjustment: grade.xpAdjustment,\n        comments: grade.comments\n      }\n    } as GradingQuestion;\n\n    if (gradingQuestion.grade.grader !== null) {\n      result.grade.grader = gradingQuestion.grade.grader;\n      result.grade.gradedAt = gradingQuestion.grade.gradedAt;\n    }\n\n    return result;\n  });\n  return grading;\n}\n\n/**\n * POST /grading/{submissionId}/{questionId}\n */\nexport const postGrading = async (\n  submissionId: number,\n  questionId: number,\n  gradeAdjustment: number,\n  xpAdjustment: number,\n  tokens: Tokens,\n  comments?: string\n) => {\n  const resp = await request(`grading/${submissionId}/${questionId}`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: {\n      grading: {\n        adjustment: gradeAdjustment,\n        xpAdjustment,\n        comments\n      }\n    },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n};\n\n/**\n * POST /grading/{submissionId}/unsubmit\n */\nexport async function postUnsubmit(submissionId: number, tokens: Tokens) {\n  const resp = await request(`grading/${submissionId}/unsubmit`, 'POST', {\n    accessToken: tokens.accessToken,\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n}\n\n/**\n * GET /notification\n */\nexport async function getNotifications(tokens: Tokens) {\n  const resp: Response | null = await request('notification', 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false\n  });\n  let notifications: Notification[] = [];\n\n  if (!resp || !resp.ok) {\n    return notifications;\n  }\n\n  const result = await resp.json();\n  notifications = result.map((notification: any) => {\n    return {\n      id: notification.id,\n      type: notification.type,\n      assessment_id: notification.assessment_id || undefined,\n      assessment_type: notification.assessment\n        ? capitalise(notification.assessment.type)\n        : undefined,\n      assessment_title: notification.assessment ? notification.assessment.title : undefined,\n      submission_id: notification.submission_id || undefined\n    } as Notification;\n  });\n\n  return notifications;\n}\n\n/**\n * POST /notification/acknowledge\n */\nexport async function postAcknowledgeNotifications(tokens: Tokens, ids: number[]) {\n  const resp: Response | null = await request(`notification/acknowledge`, 'POST', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    body: { notificationIds: ids },\n    shouldAutoLogout: false\n  });\n\n  return resp;\n}\n\n/**\n * DELETE /sourcecast\n */\nexport async function deleteSourcecastEntry(id: number, tokens: Tokens) {\n  const resp = await request(`sourcecast/${id}`, 'DELETE', {\n    accessToken: tokens.accessToken,\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n}\n\n/**\n * GET /sourcecast\n */\nexport async function getSourcecastIndex(tokens: Tokens): Promise<SourcecastData[] | null> {\n  const resp = await request('sourcecast', 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n  const index = await resp.json();\n  return index;\n}\n\n/**\n * POST /sourcecast\n */\nexport const postSourcecast = async (\n  title: string,\n  description: string,\n  audio: Blob,\n  playbackData: PlaybackData,\n  tokens: Tokens\n) => {\n  const formData = new FormData();\n  const filename = Date.now().toString() + '.wav';\n  formData.append('sourcecast[title]', title);\n  formData.append('sourcecast[description]', description);\n  formData.append('sourcecast[audio]', audio, filename);\n  formData.append('sourcecast[playbackData]', JSON.stringify(playbackData));\n  const resp = await request(`sourcecast`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: formData,\n    noContentType: true,\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n};\n\nexport async function changeDateAssessment(\n  id: number,\n  closeAt: string,\n  openAt: string,\n  tokens: Tokens\n) {\n  const resp = await request(`assessments/update/${id}`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: { closeAt, openAt },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp ? await resp.text() : null;\n}\n\nexport async function deleteAssessment(id: number, tokens: Tokens) {\n  const resp = await request(`assessments/${id}`, 'DELETE', {\n    accessToken: tokens.accessToken,\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n}\n\nexport async function publishAssessment(id: number, togglePublishTo: boolean, tokens: Tokens) {\n  const resp = await request(`assessments/publish/${id}`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: { togglePublishTo },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n}\n\nexport const uploadAssessment = async (file: File, tokens: Tokens, forceUpdate: boolean) => {\n  const formData = new FormData();\n  formData.append('assessment[file]', file);\n  formData.append('forceUpdate', String(forceUpdate));\n  const resp = await request(`assessments`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: formData,\n    noContentType: true,\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp ? await resp.text() : null;\n};\n\nexport async function getGradingSummary(tokens: Tokens): Promise<GradingSummary | null> {\n  const resp = await request('grading/summary', 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return await resp.json();\n}\n\n/**\n * GET /chapter\n */\nexport async function fetchChapter(): Promise<Response | null> {\n  const resp = await request('chapter', 'GET', {\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return await resp.json();\n}\n\n/**\n * POST /chapter/update/1\n */\nexport async function changeChapter(chapterno: number, variant: string, tokens: Tokens) {\n  const resp = await request(`chapter/update/1`, 'POST', {\n    accessToken: tokens.accessToken,\n    body: { chapterno, variant },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n}\n\n/**\n * @returns {(Response|null)} Response if successful, otherwise null.\n *\n * @see @type{RequestOptions} for options to this function.\n *\n * If opts.shouldRefresh, an initial response status of < 200 or > 299 will\n * cause this function to call postRefresh to attempt to setToken with fresh\n * tokens.\n *\n * If fetch throws an error, or final response has status code < 200 or > 299,\n * this function will cause the user to logout.\n */\nasync function request(\n  path: string,\n  method: string,\n  opts: RequestOptions\n): Promise<Response | null> {\n  const headers = new Headers();\n  if (!opts.noHeaderAccept) {\n    headers.append('Accept', 'application/json');\n  }\n  if (opts.accessToken) {\n    headers.append('Authorization', `Bearer ${opts.accessToken}`);\n  }\n  const fetchOpts: any = { method, headers };\n  if (opts.body) {\n    if (opts.noContentType) {\n      // Content Type is not needed for sending multipart data\n      fetchOpts.body = opts.body;\n    } else {\n      headers.append('Content-Type', 'application/json');\n      fetchOpts.body = JSON.stringify(opts.body);\n    }\n  }\n  try {\n    const resp = await fetch(`${Constants.backendUrl}/v1/${path}`, fetchOpts);\n    // response.ok is (200 <= response.status <= 299)\n    // response.status of > 299 does not raise error; so deal with in in the try clause\n    if (opts.shouldRefresh && resp && resp.status === 401) {\n      const newTokens = await postRefresh(opts.refreshToken!);\n      store.dispatch(actions.setTokens(newTokens!));\n      const newOpts = {\n        ...opts,\n        accessToken: newTokens!.accessToken,\n        shouldRefresh: false\n      };\n      return request(path, method, newOpts);\n    }\n    if (resp && !resp.ok && opts.shouldAutoLogout === false) {\n      // this clause is mostly for SUBMIT_ANSWER; show an error message instead\n      // and ask student to manually logout, so that they have a chance to save\n      // their answers\n      return resp;\n    }\n    if (!resp || !resp.ok) {\n      throw new Error('API call failed or got non-OK response');\n    }\n    return resp;\n  } catch (e) {\n    store.dispatch(actions.logOut());\n    showWarningMessage(opts.errorMessage ? opts.errorMessage : 'Please login again.');\n    return null;\n  }\n}\n\n/**\n * Handles display of warning notifications for failed HTTP requests, i.e. those with no response\n * or a HTTP error status code (not 2xx).\n *\n * @param   {(Response|null)}     resp    Result of the failed HTTP request\n * @param   {Map<number, string>} codes   Optional Map for status codes to custom warning messages\n */\nexport function* handleResponseError(resp: Response | null, codes?: Map<number, string>) {\n  // Default: check if the response is null\n  if (!resp) {\n    yield call(showWarningMessage, \"Couldn't reach our servers. Are you online?\");\n    return;\n  }\n\n  let errorMessage: string;\n\n  // Show a generic message if the failed response is missing a status code\n  if (!resp.status) {\n    errorMessage = 'Something went wrong (received response with no status code)';\n  } else if (codes && codes.has(resp.status)) {\n    // If the optional map was supplied, check the response against it with its status code\n    errorMessage = codes.get(resp.status)!;\n  } else {\n    // Otherwise match on the status code for common status codes\n    switch (resp.status) {\n      case 401:\n        errorMessage = 'Session expired. Please login again.';\n        break;\n      default:\n        errorMessage = `Something went wrong (got ${resp.status} response)`;\n        break;\n    }\n  }\n\n  yield call(showWarningMessage, errorMessage);\n}\n\nconst capitalise = (text: string) => text.charAt(0).toUpperCase() + text.slice(1);\n\nconst computeGradingStatus = (\n  category: AssessmentCategory,\n  submissionStatus: any,\n  numGraded: number,\n  numQuestions: number\n): GradingStatus =>\n  ['Mission', 'Sidequest', 'Practical'].includes(category) && submissionStatus === 'submitted'\n    ? numGraded === 0\n      ? 'none'\n      : numGraded === numQuestions\n      ? 'graded'\n      : 'grading'\n    : 'excluded';\n","import { SagaIterator } from 'redux-saga';\nimport { call, takeEvery } from 'redux-saga/effects';\n\nimport { LOGIN } from '../application/types/SessionTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { computeEndpointUrl } from '../utils/AuthHelper';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\nexport default function* LoginSaga(): SagaIterator {\n  yield takeEvery(LOGIN, updateLoginHref);\n}\n\nfunction* updateLoginHref({ payload: providerId }: ReturnType<typeof actions.login>) {\n  const epUrl = computeEndpointUrl(providerId);\n  if (!epUrl) {\n    yield call(showWarningMessage, 'Could not log in; invalid provider name provided.');\n    return undefined;\n  }\n  window.location.href = epUrl;\n  return undefined;\n}\n","import { Button, Classes, Dialog, IButtonProps, IDialogProps, Intent } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface ConfirmDialogProps<T> {\n  title?: string;\n  contents?: React.ReactNode;\n  choices: Array<{ key: T; label: string; intent?: Intent; props?: IButtonProps }>;\n  largeButtons?: boolean;\n  escapeResponse?: T;\n  onResponse: (response: T) => void;\n  isOpen?: boolean;\n  props?: IDialogProps;\n}\n\nexport function ConfirmDialog<T>(\n  props: ConfirmDialogProps<T>\n): React.ReactElement<ConfirmDialogProps<T>> {\n  const buttons = props.choices.map((choice, i) => (\n    <Button\n      key={i}\n      onClick={() => props.onResponse && props.onResponse(choice.key)}\n      intent={choice.intent}\n      fill={props.largeButtons}\n      className={classNames(props.largeButtons && 'large-button')}\n      {...choice.props}\n    >\n      {choice.label}\n    </Button>\n  ));\n  const { escapeResponse } = props;\n  const escapeHandler =\n    typeof escapeResponse === 'undefined'\n      ? undefined\n      : () => props.onResponse && props.onResponse(escapeResponse);\n  return (\n    <Dialog\n      className={classNames(Classes.DARK, 'ConfirmDialog')}\n      title={props.title}\n      isCloseButtonShown={typeof props.title === 'undefined' ? undefined : false}\n      canEscapeKeyClose={!!escapeHandler}\n      onClose={escapeHandler}\n      isOpen={props.isOpen}\n      {...props.props}\n    >\n      <div className={Classes.DIALOG_BODY}>{props.contents}</div>\n      <div className={Classes.DIALOG_FOOTER}>\n        {props.largeButtons && buttons}\n        {!props.largeButtons && <div className={Classes.DIALOG_FOOTER_ACTIONS}>{buttons}</div>}\n      </div>\n    </Dialog>\n  );\n}\n","import { InputGroup, Intent } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { ConfirmDialog, ConfirmDialogProps } from './ConfirmDialog';\n\nexport interface PromptDialogProps<T>\n  extends Omit<ConfirmDialogProps<T>, 'onResponse' | 'choices'> {\n  defaultValue?: string;\n  enterResponse?: T;\n  onResponse: (buttonResponse: T, value: string) => void;\n  validationFunction?: (value: string) => boolean;\n  choices: Array<ConfirmDialogProps<T>['choices'][0] & { disableOnInvalid?: boolean }>;\n}\n\nexport function PromptDialog<T>(\n  props: PromptDialogProps<T>\n): React.ReactElement<PromptDialogProps<T>> {\n  const { enterResponse, validationFunction } = props;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [isValid, setIsValid] = React.useState(\n    !validationFunction || validationFunction(props.defaultValue || '')\n  );\n  React.useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    setIsValid(!validationFunction || validationFunction(inputRef.current.value));\n  }, [validationFunction]);\n\n  const returnResponse = (buttonResponse: T) => {\n    if (\n      buttonResponse === props.escapeResponse ||\n      !validationFunction ||\n      validationFunction(inputRef.current!.value)\n    ) {\n      props.onResponse(buttonResponse, inputRef.current?.value || '');\n    }\n  };\n\n  const choices: typeof props.choices = props.choices.map(choice => ({\n    ...choice,\n    props: {\n      ...choice.props,\n      disabled: choice.disableOnInvalid && !isValid\n    }\n  }));\n  const handleEnter = enterResponse\n    ? (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.keyCode === 13) {\n          returnResponse(enterResponse);\n        }\n      }\n    : undefined;\n  const handleValidate = validationFunction\n    ? (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (validationFunction(e.target.value) !== isValid) {\n          setIsValid(!isValid);\n        }\n      }\n    : undefined;\n  return (\n    <ConfirmDialog\n      {...props}\n      onResponse={returnResponse}\n      choices={choices}\n      contents={\n        <>\n          {props.contents}\n          <InputGroup\n            autoFocus\n            defaultValue={props.defaultValue}\n            inputRef={inputRef}\n            onKeyDown={handleEnter}\n            onChange={handleValidate}\n            intent={isValid ? Intent.NONE : Intent.DANGER}\n          />\n        </>\n      }\n    />\n  );\n}\n","import { Intent } from '@blueprintjs/core';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ConfirmDialog, ConfirmDialogProps } from '../dialogs/ConfirmDialog';\nimport { PromptDialog, PromptDialogProps } from '../dialogs/PromptDialog';\n\n// The below is based off the Blueprint Toaster:\n// https://github.com/palantir/blueprint/blob/develop/packages/core/src/components/toast/toaster.tsx\n\ninterface DialogHelperState {\n  dialog: ReturnType<typeof React.createElement> | null;\n  dialogOnClose: (() => void) | null;\n}\n\nclass DialogHelper extends React.PureComponent<{}, DialogHelperState> {\n  public state: DialogHelperState = {\n    dialog: null,\n    dialogOnClose: null\n  };\n\n  public static create(): DialogHelper {\n    const containerElement = document.createElement('div');\n    document.body.appendChild(containerElement);\n    const dialogHelper = ReactDOM.render<{}>(<DialogHelper />, containerElement) as DialogHelper;\n    if (dialogHelper == null) {\n      throw new Error('Could not create DialogHelper - are you in a React lifecycle method?');\n    }\n    return dialogHelper;\n  }\n\n  public show(dialog: DialogHelperState['dialog'], onClose?: () => void) {\n    this.setState(() => ({ dialog, dialogOnClose: onClose || null }));\n  }\n\n  public close() {\n    if (this.state.dialogOnClose) {\n      this.state.dialogOnClose();\n    }\n    this.setState(() => ({ dialog: null, dialogOnClose: null }));\n  }\n\n  public render() {\n    return this.state.dialog;\n  }\n}\n\nconst singleton = DialogHelper.create();\n\nexport function showDialog(dialog: DialogHelperState['dialog'], dialogOnClose?: () => void) {\n  singleton.show(dialog, dialogOnClose);\n}\n\nexport function closeDialog() {\n  singleton.close();\n}\n\nexport function promisifyDialog<P, R>(\n  DialogComponent: React.ComponentType<P>,\n  propFn: (resolve: (response: R) => void) => P\n): Promise<R> {\n  return new Promise<R>((resolve, reject) => {\n    showDialog(<DialogComponent {...propFn(resolve)} />, reject);\n  }).finally(closeDialog);\n}\n\nexport function showConfirmDialog<T>(\n  props: Omit<ConfirmDialogProps<T>, 'onResponse'> &\n    Partial<Pick<ConfirmDialogProps<T>, 'onResponse'>>\n): Promise<T> {\n  return promisifyDialog<ConfirmDialogProps<T>, T>(ConfirmDialog, resolve => ({\n    ...props,\n    onResponse: resolve,\n    isOpen: true\n  }));\n}\n\nexport function showSimpleConfirmDialog(props: {\n  title?: string;\n  contents?: React.ReactNode;\n  positiveLabel?: string;\n  negativeLabel?: string;\n  props?: Partial<ConfirmDialogProps<boolean>>;\n}): Promise<boolean> {\n  return showConfirmDialog<boolean>({\n    title: props.title,\n    contents: props.contents,\n    choices: [\n      { key: false, label: props.negativeLabel || 'No' },\n      {\n        key: true,\n        label: props.positiveLabel || 'Yes',\n        intent: Intent.SUCCESS,\n        props: { type: 'submit' }\n      }\n    ],\n    escapeResponse: false,\n    ...props.props\n  });\n}\n\nexport function showSimplePromptDialog(props: {\n  title?: string;\n  contents?: React.ReactNode;\n  positiveLabel?: string;\n  negativeLabel?: string;\n  props?: Partial<PromptDialogProps<boolean>>;\n}) {\n  return promisifyDialog<PromptDialogProps<boolean>, { buttonResponse: boolean; value: string }>(\n    PromptDialog,\n    resolve => ({\n      title: props.title,\n      contents: props.contents,\n      choices: [\n        { key: false, label: props.negativeLabel || 'Cancel' },\n        {\n          key: true,\n          label: props.positiveLabel || 'Accept',\n          intent: Intent.SUCCESS,\n          disableOnInvalid: true\n        }\n      ],\n      escapeResponse: false,\n      enterResponse: true,\n      onResponse: (buttonResponse, value) => resolve({ buttonResponse, value }),\n      isOpen: true,\n      ...props.props\n    })\n  );\n}\n","import { Intent } from '@blueprintjs/core';\nimport * as React from 'react';\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, select, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { playgroundUpdatePersistenceFile } from 'src/features/playground/PlaygroundActions';\n\nimport {\n  PERSISTENCE_INITIALISE,\n  PERSISTENCE_OPEN_PICKER,\n  PERSISTENCE_SAVE_FILE,\n  PERSISTENCE_SAVE_FILE_AS,\n  PersistenceFile\n} from '../../features/persistence/PersistenceTypes';\nimport { store } from '../../pages/createStore';\nimport { OverallState } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { LOGOUT_GOOGLE } from '../application/types/SessionTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport Constants from '../utils/Constants';\nimport { showSimpleConfirmDialog, showSimplePromptDialog } from '../utils/DialogHelper';\nimport {\n  dismiss,\n  showMessage,\n  showSuccessMessage,\n  showWarningMessage\n} from '../utils/NotificationsHelper';\nimport { AsyncReturnType } from '../utils/TypeHelper';\n\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\nconst SCOPES = 'profile https://www.googleapis.com/auth/drive.file';\nconst UPLOAD_PATH = 'https://www.googleapis.com/upload/drive/v3/files';\n\n// Special ID value for the Google Drive API.\nconst ROOT_ID = 'root';\n\nconst MIME_SOURCE = 'text/plain';\n// const MIME_FOLDER = 'application/vnd.google-apps.folder';\n\nexport function* persistenceSaga(): SagaIterator {\n  yield takeLatest(LOGOUT_GOOGLE, function* () {\n    yield put(playgroundUpdatePersistenceFile(undefined));\n    yield call(ensureInitialised);\n    yield call([gapi.auth2.getAuthInstance(), 'signOut']);\n  });\n\n  yield takeLatest(PERSISTENCE_OPEN_PICKER, function* () {\n    let toastKey: string | undefined;\n    try {\n      yield call(ensureInitialisedAndAuthorised);\n\n      const { id, name, picked } = yield call(pickFile, 'Pick a file to open');\n      if (!picked) {\n        return;\n      }\n      const confirmOpen: boolean = yield call(showSimpleConfirmDialog, {\n        title: 'Opening from Google Drive',\n        contents: (\n          <p>\n            Opening <strong>{name}</strong> will overwrite the current contents of your workspace.\n            Are you sure?\n          </p>\n        ),\n        positiveLabel: 'Open',\n        negativeLabel: 'Cancel'\n      });\n      if (!confirmOpen) {\n        return;\n      }\n\n      toastKey = yield call(showMessage, {\n        message: 'Opening file...',\n        timeout: 0,\n        intent: Intent.PRIMARY\n      });\n\n      const { result: meta } = yield call([gapi.client.drive.files, 'get'], {\n        fileId: id,\n        fields: 'appProperties'\n      });\n      const contents = yield call([gapi.client.drive.files, 'get'], { fileId: id, alt: 'media' });\n      yield put(actions.updateEditorValue(contents.body, 'playground'));\n      yield put(actions.playgroundUpdatePersistenceFile({ id, name, lastSaved: new Date() }));\n      if (meta && meta.appProperties) {\n        yield put(\n          actions.chapterSelect(\n            parseInt(meta.appProperties.chapter || '4', 10),\n            meta.appProperties.variant || 'default',\n            'playground'\n          )\n        );\n        yield put(\n          actions.externalLibrarySelect(\n            Object.values(ExternalLibraryName).find(v => v === meta.appProperties.external) ||\n              ExternalLibraryName.NONE,\n            'playground'\n          )\n        );\n      }\n\n      yield call(showSuccessMessage, `Loaded ${name}.`, 1000);\n    } catch (ex) {\n      console.error(ex);\n      yield call(showWarningMessage, `Error while opening file.`, 1000);\n    } finally {\n      if (toastKey) {\n        dismiss(toastKey);\n      }\n    }\n  });\n\n  yield takeLatest(PERSISTENCE_SAVE_FILE_AS, function* () {\n    let toastKey: string | undefined;\n    try {\n      yield call(ensureInitialisedAndAuthorised);\n\n      const [code, chapter, variant, external] = yield select((state: OverallState) => [\n        state.workspaces.playground.editorValue,\n        state.workspaces.playground.context.chapter,\n        state.workspaces.playground.context.variant,\n        state.workspaces.playground.externalLibrary\n      ]);\n\n      const pickedDir: PickFileResult = yield call(\n        pickFile,\n        'Pick a folder, or cancel to pick the root folder',\n        {\n          pickFolders: true,\n          showFolders: true,\n          showFiles: false\n        }\n      );\n\n      const saveToDir: PersistenceFile = pickedDir.picked\n        ? pickedDir\n        : { id: ROOT_ID, name: 'My Drive' };\n\n      const pickedFile: PickFileResult = yield call(\n        pickFile,\n        `Saving to ${saveToDir.name}; pick a file to overwrite, or cancel to save as a new file`,\n        {\n          pickFolders: false,\n          showFolders: false,\n          showFiles: true,\n          rootFolder: saveToDir.id\n        }\n      );\n\n      if (pickedFile.picked) {\n        const reallyOverwrite: boolean = yield call(showSimpleConfirmDialog, {\n          title: 'Saving to Google Drive',\n          contents: (\n            <span>\n              Really overwrite <strong>{pickedFile.name}</strong>?\n            </span>\n          )\n        });\n        if (!reallyOverwrite) {\n          return;\n        }\n        yield put(actions.playgroundUpdatePersistenceFile(pickedFile));\n        yield put(actions.persistenceSaveFile(pickedFile));\n      } else {\n        const response: AsyncReturnType<typeof showSimplePromptDialog> = yield call(\n          showSimplePromptDialog,\n          {\n            title: 'Saving to Google Drive',\n            contents: (\n              <>\n                <p>\n                  Saving to folder <strong>{saveToDir.name}</strong>.\n                </p>\n                <p>Save as name?</p>\n              </>\n            ),\n            positiveLabel: 'Save as new file',\n            negativeLabel: 'Cancel',\n            props: {\n              validationFunction: value => !!value\n            }\n          }\n        );\n\n        if (!response.buttonResponse) {\n          return;\n        }\n\n        const config: IPlaygroundConfig = {\n          chapter,\n          variant,\n          external\n        };\n\n        toastKey = yield call(showMessage, {\n          message: `Saving as ${response.value}...`,\n          timeout: 0,\n          intent: Intent.PRIMARY\n        });\n\n        const newFile = yield call(\n          createFile,\n          response.value,\n          saveToDir.id,\n          MIME_SOURCE,\n          code,\n          config\n        );\n\n        yield put(actions.playgroundUpdatePersistenceFile({ ...newFile, lastSaved: new Date() }));\n        yield call(\n          showSuccessMessage,\n          `${response.value} successfully saved to Google Drive.`,\n          1000\n        );\n      }\n    } catch (ex) {\n      console.error(ex);\n      yield call(showWarningMessage, `Error while saving file.`, 1000);\n    } finally {\n      if (toastKey) {\n        dismiss(toastKey);\n      }\n    }\n  });\n\n  yield takeEvery(PERSISTENCE_SAVE_FILE, function* ({\n    payload: { id, name }\n  }: ReturnType<typeof actions.persistenceSaveFile>) {\n    let toastKey: string | undefined;\n    try {\n      toastKey = yield call(showMessage, {\n        message: `Saving as ${name}...`,\n        timeout: 0,\n        intent: Intent.PRIMARY\n      });\n\n      yield call(ensureInitialisedAndAuthorised);\n\n      const [code, chapter, variant, external] = yield select((state: OverallState) => [\n        state.workspaces.playground.editorValue,\n        state.workspaces.playground.context.chapter,\n        state.workspaces.playground.context.variant,\n        state.workspaces.playground.externalLibrary\n      ]);\n\n      const config: IPlaygroundConfig = {\n        chapter,\n        variant,\n        external\n      };\n      yield call(updateFile, id, name, MIME_SOURCE, code, config);\n      yield put(actions.playgroundUpdatePersistenceFile({ id, name, lastSaved: new Date() }));\n      yield call(showSuccessMessage, `${name} successfully saved to Google Drive.`, 1000);\n    } catch (ex) {\n      console.error(ex);\n      yield call(showWarningMessage, `Error while saving file.`, 1000);\n    } finally {\n      if (toastKey) {\n        dismiss(toastKey);\n      }\n    }\n  });\n\n  yield takeEvery(PERSISTENCE_INITIALISE, ensureInitialised);\n}\n\ninterface IPlaygroundConfig {\n  chapter: string;\n  variant: string;\n  external: string;\n}\n\n// Reason for this: we don't want to initialise and load the gapi JS until\n// it is actually needed\n// Note the following properties of Promises:\n// - It is okay to call .then() multiple times on the same promise\n// - It is okay to call resolve() multiple times (the subsequent resolves have\n//   no effect\n// See ECMA 262: https://www.ecma-international.org/ecma-262/6.0/#sec-promise-resolve-functions\n// These two properties make a Promise a good way to have a lazy singleton\n// (in this case, the singleton is not an object but the initialisation of the\n// gapi library)\nlet startInitialisation: () => void;\nconst initialisationPromise: Promise<void> = new Promise(res => {\n  startInitialisation = res;\n}).then(initialise);\n\nfunction handleUserChanged(user: gapi.auth2.GoogleUser) {\n  store.dispatch(\n    actions.setGoogleUser(user.isSignedIn() ? user.getBasicProfile().getEmail() : undefined)\n  );\n}\n\nasync function initialise() {\n  await new Promise((resolve, reject) =>\n    gapi.load('client:auth2', { callback: resolve, onerror: reject })\n  );\n  await gapi.client.init({\n    apiKey: Constants.googleApiKey,\n    clientId: Constants.googleClientId,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  });\n  gapi.auth2.getAuthInstance().currentUser.listen(handleUserChanged);\n  handleUserChanged(gapi.auth2.getAuthInstance().currentUser.get());\n}\n\nfunction* ensureInitialised() {\n  startInitialisation();\n  yield initialisationPromise;\n}\n\nfunction* ensureInitialisedAndAuthorised() {\n  yield call(ensureInitialised);\n  if (!gapi.auth2.getAuthInstance().isSignedIn.get()) {\n    yield gapi.auth2.getAuthInstance().signIn();\n  }\n}\n\ntype PickFileResult =\n  | { id: string; name: string; mimeType: string; parentId: string; picked: true }\n  | { picked: false };\n\nfunction pickFile(\n  title: string,\n  options?: {\n    pickFolders?: boolean;\n    showFolders?: boolean;\n    showFiles?: boolean;\n    rootFolder?: string;\n  }\n): Promise<PickFileResult> {\n  const pickFolders = typeof options?.pickFolders === 'undefined' ? false : options?.pickFolders;\n  const showFolders = typeof options?.showFolders === 'undefined' ? true : options?.showFolders;\n  const showFiles = typeof options?.showFiles === 'undefined' ? true : options?.showFiles;\n  return new Promise(res => {\n    gapi.load('picker', () => {\n      const view = new google.picker.DocsView(\n        showFiles ? google.picker.ViewId.DOCS : google.picker.ViewId.FOLDERS\n      );\n      if (options?.rootFolder) {\n        view.setParent(options.rootFolder);\n      }\n      view.setOwnedByMe(true);\n      view.setIncludeFolders(showFolders);\n      view.setSelectFolderEnabled(pickFolders);\n      view.setMode(google.picker.DocsViewMode.LIST);\n\n      const picker = new google.picker.PickerBuilder()\n        .setTitle(title)\n        .enableFeature(google.picker.Feature.NAV_HIDDEN)\n        .addView(view)\n        .setOAuthToken(\n          gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token\n        )\n        .setAppId(Constants.googleAppId!)\n        .setDeveloperKey(Constants.googleApiKey!)\n        .setCallback((data: any) => {\n          switch (data[google.picker.Response.ACTION]) {\n            case google.picker.Action.PICKED: {\n              const { id, name, mimeType, parentId } = data.docs[0];\n              res({ id, name, mimeType, parentId, picked: true });\n              break;\n            }\n            case google.picker.Action.CANCEL: {\n              res({ picked: false });\n              break;\n            }\n          }\n        })\n        .build();\n      picker.setVisible(true);\n    });\n  });\n}\n\nfunction createFile(\n  filename: string,\n  parent: string,\n  mimeType: string,\n  contents: string = '',\n  config: IPlaygroundConfig | {}\n): Promise<PersistenceFile> {\n  const name = filename;\n  const meta = {\n    name,\n    mimeType,\n    parents: [parent],\n    appProperties: {\n      source: true,\n      ...config\n    }\n  };\n\n  const { body, headers } = createMultipartBody(meta, contents, mimeType);\n\n  return gapi.client\n    .request({\n      path: UPLOAD_PATH,\n      method: 'POST',\n      params: {\n        uploadType: 'multipart'\n      },\n      headers,\n      body\n    })\n    .then(({ result }) => ({ id: result.id, name: result.name }));\n}\n\nfunction updateFile(\n  id: string,\n  name: string,\n  mimeType: string,\n  contents: string = '',\n  config: IPlaygroundConfig | {}\n): Promise<any> {\n  const meta = {\n    name,\n    mimeType,\n    appProperties: {\n      source: true,\n      ...config\n    }\n  };\n\n  const { body, headers } = createMultipartBody(meta, contents, mimeType);\n\n  return gapi.client.request({\n    path: UPLOAD_PATH + '/' + id,\n    method: 'PATCH',\n    params: {\n      uploadType: 'multipart'\n    },\n    headers,\n    body\n  });\n}\n\nfunction createMultipartBody(\n  meta: any,\n  contents: string,\n  contentsMime: string\n): { body: string; boundary: string; headers: { [name: string]: string } } {\n  const metaJson = JSON.stringify(meta);\n  let boundary: string;\n  do {\n    boundary = generateBoundary();\n  } while (metaJson.includes(boundary) || contents.includes(boundary));\n\n  const body = `--${boundary}\nContent-Type: application/json; charset=utf-8\n\n${JSON.stringify(meta)}\n--${boundary}\nContent-Type: ${contentsMime}\n\n${contents}\n--${boundary}--\n`;\n\n  return { body, boundary, headers: { 'Content-Type': `multipart/related; boundary=${boundary}` } };\n}\n\n// Adapted from\n// https://github.com/form-data/form-data/blob/master/lib/form_data.js\n\n// Copyright (c) 2012 Felix Geisendörfer (felix@debuggable.com) and contributors\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nfunction generateBoundary(): string {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  let boundary = '--------------------------';\n  for (let i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  return boundary;\n}\n\n// End adapted part\n\nexport default persistenceSaga;\n","import { Variant } from 'js-slang/dist/types';\nimport { compressToEncodedURIComponent } from 'lz-string';\nimport * as qs from 'query-string';\nimport { SagaIterator } from 'redux-saga';\nimport { call, delay, put, race, select, takeEvery } from 'redux-saga/effects';\n\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport {\n  changeQueryString,\n  shortenURL,\n  updateShortURL\n} from '../../features/playground/PlaygroundActions';\nimport { GENERATE_LZ_STRING, SHORTEN_URL } from '../../features/playground/PlaygroundTypes';\nimport { defaultEditorValue, OverallState } from '../application/ApplicationTypes';\nimport Constants from '../utils/Constants';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\n\nexport default function* PlaygroundSaga(): SagaIterator {\n  yield takeEvery(GENERATE_LZ_STRING, updateQueryString);\n\n  yield takeEvery(SHORTEN_URL, function* (action: ReturnType<typeof shortenURL>) {\n    const queryString = yield select((state: OverallState) => state.playground.queryString);\n    const keyword = action.payload;\n    const errorMsg = 'ERROR';\n\n    let resp, timeout;\n\n    //we catch and move on if there are errors (plus have a timeout in case)\n    try {\n      const { result, hasTimedOut } = yield race({\n        result: call(shortenURLRequest, queryString, keyword),\n        hasTimedOut: delay(10000)\n      });\n\n      resp = result;\n      timeout = hasTimedOut;\n    } catch (_) {}\n\n    if (!resp || timeout) {\n      yield put(updateShortURL(errorMsg));\n      return yield call(showWarningMessage, 'Something went wrong trying to create the link.');\n    }\n\n    if (resp.status !== 'success' && !resp.shorturl) {\n      yield put(updateShortURL(errorMsg));\n      return yield call(showWarningMessage, resp.message);\n    }\n\n    if (resp.status !== 'success') {\n      yield call(showSuccessMessage, resp.message);\n    }\n    yield put(updateShortURL(resp.shorturl));\n  });\n}\n\nfunction* updateQueryString() {\n  const code: string | null = yield select(\n    (state: OverallState) => state.workspaces.playground.editorValue\n  );\n  if (!code || code === defaultEditorValue) {\n    yield put(changeQueryString(''));\n    return;\n  }\n  const codeString: string = code as string;\n  const chapter: number = yield select(\n    (state: OverallState) => state.workspaces.playground.context.chapter\n  );\n  const variant: Variant = yield select(\n    (state: OverallState) => state.workspaces.playground.context.variant\n  );\n  const external: ExternalLibraryName = yield select(\n    (state: OverallState) => state.workspaces.playground.externalLibrary\n  );\n  const execTime: number = yield select(\n    (state: OverallState) => state.workspaces.playground.execTime\n  );\n  const newQueryString: string = qs.stringify({\n    prgrm: compressToEncodedURIComponent(codeString),\n    chap: chapter,\n    variant,\n    ext: external,\n    exec: execTime\n  });\n  yield put(changeQueryString(newQueryString));\n}\n\n/**\n * Gets short url from microservice\n * @returns {(Response|null)} Response if successful, otherwise null.\n */\nexport async function shortenURLRequest(\n  queryString: string,\n  keyword: string\n): Promise<Response | null> {\n  let url = `${window.location.protocol}//${window.location.hostname}/playground#${queryString}`;\n  if (window.location.port !== '') {\n    url = `${window.location.protocol}//${window.location.hostname}:${window.location.port}/playground#${queryString}`;\n  }\n\n  const params = {\n    signature: Constants.urlShortenerSignature,\n    action: 'shorturl',\n    format: 'json',\n    keyword,\n    url\n  };\n  const fetchOpts: RequestInit = {\n    method: 'POST',\n    body: Object.entries(params).reduce((formData, [k, v]) => {\n      formData.append(k, v!);\n      return formData;\n    }, new FormData())\n  };\n\n  const resp = await fetch(Constants.urlShortener!, fetchOpts);\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  const res = await resp.json();\n  return res;\n}\n","import {\n  Context,\n  findDeclaration,\n  getNames,\n  interrupt,\n  parseError,\n  Result,\n  resume,\n  runInContext\n} from 'js-slang';\nimport { TRY_AGAIN } from 'js-slang/dist/constants';\nimport { InterruptedError } from 'js-slang/dist/errors/errors';\nimport { parse } from 'js-slang/dist/parser/parser';\nimport { manualToggleDebugger } from 'js-slang/dist/stdlib/inspector';\nimport { typeCheck } from 'js-slang/dist/typeChecker/typeChecker';\nimport { Variant } from 'js-slang/dist/types';\nimport { validateAndAnnotate } from 'js-slang/dist/validator/validator';\nimport { random } from 'lodash';\nimport Phaser from 'phaser';\nimport { SagaIterator } from 'redux-saga';\nimport { call, delay, put, race, select, take, takeEvery } from 'redux-saga/effects';\nimport * as Sourceror from 'sourceror';\n\nimport { PlaygroundState } from '../../features/playground/PlaygroundTypes';\nimport { OverallState, styliseChapter } from '../application/ApplicationTypes';\nimport { externalLibraries, ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  BEGIN_DEBUG_PAUSE,\n  BEGIN_INTERRUPT_EXECUTION,\n  DEBUG_RESET,\n  DEBUG_RESUME,\n  EVAL_TESTCASE_FAILURE,\n  EVAL_TESTCASE_SUCCESS,\n  HIGHLIGHT_LINE\n} from '../application/types/InterpreterTypes';\nimport { Testcase, TestcaseType, TestcaseTypes } from '../assessment/AssessmentTypes';\nimport { INVALID_EDITOR_SESSION_ID } from '../collabEditing/CollabEditingTypes';\nimport { Documentation } from '../documentation/Documentation';\nimport { SideContentType } from '../sideContent/SideContentTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport {\n  getBlockExtraMethodsString,\n  getDifferenceInMethods,\n  getRestoreExtraMethodsString,\n  getStoreExtraMethodsString,\n  highlightLine,\n  inspectorUpdate,\n  makeElevatedContext,\n  visualiseEnv\n} from '../utils/JsSlangHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport { notifyProgramEvaluated } from '../workspace/WorkspaceActions';\nimport {\n  BEGIN_CLEAR_CONTEXT,\n  CHAPTER_SELECT,\n  ENSURE_LIBRARIES_LOADED,\n  EVAL_EDITOR,\n  EVAL_REPL,\n  EVAL_SILENT,\n  EVAL_TESTCASE,\n  NAV_DECLARATION,\n  PLAYGROUND_EXTERNAL_SELECT,\n  PROMPT_AUTOCOMPLETE,\n  TOGGLE_EDITOR_AUTORUN,\n  UPDATE_EDITOR_BREAKPOINTS,\n  WorkspaceLocation\n} from '../workspace/WorkspaceTypes';\n\nlet breakpoints: string[] = [];\nexport default function* WorkspaceSaga(): SagaIterator {\n  let context: Context;\n\n  yield takeEvery(EVAL_EDITOR, function* (action: ReturnType<typeof actions.evalEditor>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const code: string = yield select((state: OverallState) => {\n      const prependCode = state.workspaces[workspaceLocation].editorPrepend;\n      const editorCode = state.workspaces[workspaceLocation].editorValue!;\n      return [prependCode, editorCode] as [string, string];\n    });\n    const [prepend, tempvalue] = code;\n    const exploded = tempvalue.split('\\n');\n    for (const i in breakpoints) {\n      if (typeof i === 'string') {\n        const index: number = +i;\n        exploded[index] = 'debugger;' + exploded[index];\n      }\n    }\n    const value = exploded.join('\\n');\n    const chapter: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.chapter\n    );\n    const execTime: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].execTime\n    );\n    const symbols: string[] = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.externalSymbols\n    );\n    const globals: Array<[string, any]> = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].globals\n    );\n    const variant: Variant = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.variant\n    );\n    const library = {\n      chapter,\n      variant,\n      external: {\n        name: ExternalLibraryName.NONE,\n        symbols\n      },\n      globals\n    };\n    // End any code that is running right now.\n    yield put(actions.beginInterruptExecution(workspaceLocation));\n    // Clear the context, with the same chapter and externalSymbols as before.\n    yield put(actions.beginClearContext(library, workspaceLocation));\n    yield put(actions.clearReplOutput(workspaceLocation));\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n\n    // Evaluate the prepend silently with a privileged context, if it exists\n    if (prepend.length) {\n      const elevatedContext = makeElevatedContext(context);\n      yield call(evalCode, prepend, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n      // Block use of methods from privileged context\n      yield* blockExtraMethods(elevatedContext, context, execTime, workspaceLocation);\n    }\n\n    yield call(evalCode, value, context, execTime, workspaceLocation, EVAL_EDITOR);\n  });\n\n  yield takeEvery(PROMPT_AUTOCOMPLETE, function* (\n    action: ReturnType<typeof actions.promptAutocomplete>\n  ) {\n    const workspaceLocation = action.payload.workspaceLocation;\n\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n\n    const code: string = yield select((state: OverallState) => {\n      const prependCode = state.workspaces[workspaceLocation].editorPrepend;\n      const editorCode = state.workspaces[workspaceLocation].editorValue!;\n      return [prependCode, editorCode] as [string, string];\n    });\n    const [prepend, editorValue] = code;\n\n    // Deal with prepended code\n    let autocompleteCode;\n    let prependLength = 0;\n    if (!prepend) {\n      autocompleteCode = editorValue;\n    } else {\n      prependLength = prepend.split('\\n').length;\n      autocompleteCode = prepend + '\\n' + editorValue;\n    }\n\n    const [editorNames, displaySuggestions] = yield call(\n      getNames,\n      autocompleteCode,\n      action.payload.row + prependLength,\n      action.payload.column,\n      context\n    );\n\n    if (!displaySuggestions) {\n      yield call(action.payload.callback);\n      return;\n    }\n\n    const editorSuggestions = editorNames.map((name: any) => ({\n      caption: name.name,\n      value: name.name,\n      meta: name.meta,\n      score: name.score ? name.score + 1000 : 1000 // Prioritize suggestions from code\n    }));\n\n    let chapterName = context.chapter.toString();\n    if (context.variant !== 'default') {\n      chapterName += '_' + context.variant;\n    }\n\n    const builtinSuggestions = Documentation.builtins[chapterName] || [];\n\n    const extLib = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].externalLibrary\n    );\n\n    const extLibSuggestions = Documentation.externalLibraries[extLib] || [];\n\n    yield call(\n      action.payload.callback,\n      null,\n      editorSuggestions.concat(builtinSuggestions, extLibSuggestions)\n    );\n  });\n\n  yield takeEvery(TOGGLE_EDITOR_AUTORUN, function* (\n    action: ReturnType<typeof actions.toggleEditorAutorun>\n  ) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const isEditorAutorun = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].isEditorAutorun\n    );\n    yield call(showWarningMessage, 'Autorun ' + (isEditorAutorun ? 'Started' : 'Stopped'), 750);\n  });\n\n  yield takeEvery(INVALID_EDITOR_SESSION_ID, function* (\n    action: ReturnType<typeof actions.invalidEditorSessionId>\n  ) {\n    yield call(showWarningMessage, 'Invalid ID Input', 1000);\n  });\n\n  yield takeEvery(EVAL_REPL, function* (action: ReturnType<typeof actions.evalRepl>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const code: string = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].replValue\n    );\n    const execTime: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].execTime\n    );\n    yield put(actions.beginInterruptExecution(workspaceLocation));\n    yield put(actions.clearReplInput(workspaceLocation));\n    yield put(actions.sendReplInputToOutput(code, workspaceLocation));\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n    yield call(evalCode, code, context, execTime, workspaceLocation, EVAL_REPL);\n  });\n\n  yield takeEvery(DEBUG_RESUME, function* (action: ReturnType<typeof actions.debuggerResume>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const code: string = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].editorValue\n    );\n    const execTime: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].execTime\n    );\n    yield put(actions.beginInterruptExecution(workspaceLocation));\n    /** Clear the context, with the same chapter and externalSymbols as before. */\n    yield put(actions.clearReplOutput(workspaceLocation));\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n    yield put(actions.highlightEditorLine([], workspaceLocation));\n    yield call(evalCode, code, context, execTime, workspaceLocation, DEBUG_RESUME);\n  });\n\n  yield takeEvery(DEBUG_RESET, function* (action: ReturnType<typeof actions.debuggerReset>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n    yield put(actions.clearReplOutput(workspaceLocation));\n    inspectorUpdate(undefined);\n    highlightLine(undefined);\n    yield put(actions.clearReplOutput(workspaceLocation));\n    context.runtime.break = false;\n    lastDebuggerResult = undefined;\n  });\n\n  yield takeEvery(HIGHLIGHT_LINE, function* (\n    action: ReturnType<typeof actions.highlightEditorLine>\n  ) {\n    const workspaceLocation = action.payload.highlightedLines;\n    highlightLine(workspaceLocation[0]);\n    yield;\n  });\n\n  yield takeEvery(UPDATE_EDITOR_BREAKPOINTS, function* (\n    action: ReturnType<typeof actions.setEditorBreakpoint>\n  ) {\n    breakpoints = action.payload.breakpoints;\n    yield;\n  });\n\n  yield takeEvery(EVAL_TESTCASE, function* (action: ReturnType<typeof actions.evalTestcase>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const index = action.payload.testcaseId;\n    const code: string = yield select((state: OverallState) => {\n      // tslint:disable: no-shadowed-variable\n      const prepend = state.workspaces[workspaceLocation].editorPrepend;\n      const value = state.workspaces[workspaceLocation].editorValue!;\n      const postpend = state.workspaces[workspaceLocation].editorPostpend;\n      const testcase = state.workspaces[workspaceLocation].editorTestcases[index].program;\n      return [prepend, value, postpend, testcase] as [string, string, string, string];\n      // tslint:enable: no-shadowed-variable\n    });\n    const [prepend, value, postpend, testcase] = code;\n    const type: TestcaseType = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].editorTestcases[index].type\n    );\n    const execTime: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].execTime\n    );\n\n    // Do not interrupt execution of other testcases (potential race condition)\n    // No need to clear the context, since a shard context will be used for testcase execution\n    // Do NOT clear the REPL output!\n\n    /**\n     *  Shard a new privileged context elevated to use Source chapter 4 for testcases - enables\n     *  grader programs in postpend to run as expected without raising interpreter errors\n     *  But, do not persist this context to the workspace state - this prevent students from using\n     *  this elevated context to run dis-allowed code beyond the current chapter from the REPL\n     */\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n\n    // Execute prepend silently in privileged context\n    const elevatedContext = makeElevatedContext(context);\n    yield call(evalCode, prepend, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n\n    // Block use of methods from privileged context using a randomly generated blocking key\n    // Then execute student program silently in the original workspace context\n    const blockKey = String(random(1048576, 68719476736));\n    yield* blockExtraMethods(elevatedContext, context, execTime, workspaceLocation, blockKey);\n    yield call(evalCode, value, context, execTime, workspaceLocation, EVAL_SILENT);\n\n    // Halt execution if the student's code in the editor results in an error\n    if (context.errors.length) {\n      return;\n    }\n\n    // Execute postpend silently back in privileged context, if it exists\n    if (postpend) {\n      // TODO: consider doing a swap. If the user has modified any of the variables,\n      // i.e. reusing any of the \"reserved\" names, prevent it from being accessed in the REPL.\n      yield* restoreExtraMethods(elevatedContext, context, execTime, workspaceLocation, blockKey);\n      yield call(evalCode, postpend, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n      yield* blockExtraMethods(elevatedContext, context, execTime, workspaceLocation, blockKey);\n    }\n    // Finally execute the testcase function call in the privileged context\n    yield* evalTestCode(testcase, elevatedContext, execTime, workspaceLocation, index, type);\n  });\n\n  yield takeEvery(CHAPTER_SELECT, function* (action: ReturnType<typeof actions.chapterSelect>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const newChapter = action.payload.chapter;\n    const oldVariant = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.variant\n    );\n    const newVariant = action.payload.variant;\n    const oldChapter = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.chapter\n    );\n\n    const symbols: string[] = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.externalSymbols\n    );\n    const globals: Array<[string, any]> = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].globals\n    );\n    if (newChapter !== oldChapter || newVariant !== oldVariant) {\n      const library = {\n        chapter: newChapter,\n        variant: newVariant,\n        external: {\n          name: ExternalLibraryName.NONE,\n          symbols\n        },\n        globals\n      };\n      yield put(actions.beginClearContext(library, workspaceLocation));\n      yield put(actions.clearReplOutput(workspaceLocation));\n      yield put(actions.debuggerReset(workspaceLocation));\n      yield call(showSuccessMessage, `Switched to ${styliseChapter(newChapter, newVariant)}`, 1000);\n    }\n  });\n\n  /**\n   * Note that the PLAYGROUND_EXTERNAL_SELECT action is made to\n   * select the library for playground.\n   * This is because assessments do not have a chapter & library select, the question\n   * specifies the chapter and library to be used.\n   *\n   * To abstract this to assessments, the state structure must be manipulated to store\n   * the external library name in a WorkspaceState (as compared to IWorkspaceManagerState).\n   *\n   * @see IWorkspaceManagerState @see WorkspaceState\n   */\n  yield takeEvery(PLAYGROUND_EXTERNAL_SELECT, function* (\n    action: ReturnType<typeof actions.externalLibrarySelect>\n  ) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const chapter = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context.chapter\n    );\n    const globals: Array<[string, any]> = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].globals\n    );\n    const newExternalLibraryName = action.payload.externalLibraryName;\n    const oldExternalLibraryName = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].externalLibrary\n    );\n    const symbols = externalLibraries.get(newExternalLibraryName)!;\n    const library = {\n      chapter,\n      external: {\n        name: newExternalLibraryName,\n        symbols\n      },\n      globals\n    };\n    if (newExternalLibraryName !== oldExternalLibraryName) {\n      yield put(actions.changeExternalLibrary(newExternalLibraryName, workspaceLocation));\n      yield put(actions.beginClearContext(library, workspaceLocation));\n      yield put(actions.clearReplOutput(workspaceLocation));\n      yield call(showSuccessMessage, `Switched to ${newExternalLibraryName} library`, 1000);\n    }\n  });\n\n  /**\n   * Ensures that the external JS libraries have been loaded by waiting\n   * with a timeout. An error message will be shown\n   * if the libraries are not loaded. This is particularly useful\n   * when dealing with external library pre-conditions, e.g when the\n   * website has just loaded and there is a need to reset the js-slang context,\n   * but it cannot be determined if the global JS files are loaded yet.\n   *\n   * The presence of JS libraries are checked using the presence of a global\n   * function \"getReadyWebGLForCanvas\", that is used in CLEAR_CONTEXT to prepare\n   * the canvas for rendering in a specific mode.\n   *\n   * @see webGLgraphics.js under 'public/externalLibs/graphics' for information on\n   * the function.\n   *\n   * @returns true if the libraries are loaded before timeout\n   * @returns false if the loading of the libraries times out\n   */\n  function* checkWebGLAvailable() {\n    function* helper() {\n      while (true) {\n        if ((window as any).getReadyWebGLForCanvas !== undefined) {\n          break;\n        }\n        yield delay(250);\n      }\n      return true;\n    }\n    // Create a race condition between the js files being loaded and a timeout.\n    const { loadedScripts, timeout } = yield race({\n      loadedScripts: call(helper),\n      timeout: delay(4000)\n    });\n    if (timeout !== undefined && loadedScripts === undefined) {\n      yield call(showWarningMessage, 'Error loading libraries', 750);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Makes a call to checkWebGLAvailable to ensure that the Graphics libraries are loaded.\n   * To abstract this to other libraries, add a call to the all() effect.\n   */\n  yield takeEvery(ENSURE_LIBRARIES_LOADED, function* (\n    action: ReturnType<typeof actions.ensureLibrariesLoaded>\n  ) {\n    yield* checkWebGLAvailable();\n  });\n\n  /**\n   * Handles the side effect of resetting the WebGL context when context is reset.\n   *\n   * @see webGLgraphics.js under 'public/externalLibs/graphics' for information on\n   * the function.\n   */\n  yield takeEvery(BEGIN_CLEAR_CONTEXT, function* (\n    action: ReturnType<typeof actions.beginClearContext>\n  ) {\n    yield* checkWebGLAvailable();\n    const externalLibraryName = action.payload.library.external.name;\n    switch (externalLibraryName) {\n      case ExternalLibraryName.RUNES:\n        (window as any).loadLib('RUNES');\n        (window as any).getReadyWebGLForCanvas('3d');\n        break;\n      case ExternalLibraryName.CURVES:\n        (window as any).loadLib('CURVES');\n        (window as any).getReadyWebGLForCanvas('curve');\n        break;\n      case ExternalLibraryName.MACHINELEARNING:\n        (window as any).loadLib('MACHINELEARNING');\n        break;\n    }\n    const globals: Array<[string, any]> = action.payload.library.globals as Array<[string, any]>;\n    for (const [key, value] of globals) {\n      window[key] = value;\n    }\n    action.payload.library.moduleParams = {\n      runes: {},\n      phaser: Phaser\n    };\n    yield put(actions.endClearContext(action.payload.library, action.payload.workspaceLocation));\n    yield undefined;\n  });\n\n  yield takeEvery(NAV_DECLARATION, function* (\n    action: ReturnType<typeof actions.navigateToDeclaration>\n  ) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const code: string = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].editorValue\n    );\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n\n    const result = findDeclaration(code, context, {\n      line: action.payload.cursorPosition.row + 1,\n      column: action.payload.cursorPosition.column\n    });\n    if (result) {\n      yield put(\n        actions.moveCursor(action.payload.workspaceLocation, {\n          row: result.start.line - 1,\n          column: result.start.column\n        })\n      );\n    }\n  });\n}\n\nlet lastDebuggerResult: any;\nlet lastNonDetResult: Result;\nfunction* updateInspector(workspaceLocation: WorkspaceLocation): SagaIterator {\n  try {\n    const start = lastDebuggerResult.context.runtime.nodes[0].loc.start.line - 1;\n    const end = lastDebuggerResult.context.runtime.nodes[0].loc.end.line - 1;\n    yield put(actions.highlightEditorLine([start, end], workspaceLocation));\n    inspectorUpdate(lastDebuggerResult);\n    visualiseEnv(lastDebuggerResult);\n  } catch (e) {\n    yield put(actions.highlightEditorLine([], workspaceLocation));\n    // most likely harmless, we can pretty much ignore this.\n    // half of the time this comes from execution ending or a stack overflow and\n    // the context goes missing.\n  }\n}\n\nexport function* blockExtraMethods(\n  elevatedContext: Context,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  unblockKey?: string\n) {\n  // Extract additional methods available in the elevated context relative to the context\n  const toBeBlocked = getDifferenceInMethods(elevatedContext, context);\n  if (unblockKey) {\n    const storeValues = getStoreExtraMethodsString(toBeBlocked, unblockKey);\n    yield call(evalCode, storeValues, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n  }\n\n  const nullifier = getBlockExtraMethodsString(toBeBlocked);\n  yield call(evalCode, nullifier, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n}\n\nexport function* restoreExtraMethods(\n  elevatedContext: Context,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  unblockKey: string\n) {\n  const toUnblock = getDifferenceInMethods(elevatedContext, context);\n  const restorer = getRestoreExtraMethodsString(toUnblock, unblockKey);\n  yield call(evalCode, restorer, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n}\n\nexport function* evalCode(\n  code: string,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  actionType: string\n): SagaIterator {\n  context.runtime.debuggerOn =\n    (actionType === EVAL_EDITOR || actionType === DEBUG_RESUME) && context.chapter > 2;\n  if (!context.runtime.debuggerOn && context.chapter > 2 && actionType !== EVAL_SILENT) {\n    // Interface not guaranteed to exist, e.g. mission editor.\n    inspectorUpdate(undefined); // effectively resets the interface\n  }\n\n  // Logic for execution of substitution model visualiser\n  const substIsActive: boolean = yield select(\n    (state: OverallState) => (state.playground as PlaygroundState).usingSubst\n  );\n  const substActiveAndCorrectChapter =\n    context.chapter <= 2 && workspaceLocation === 'playground' && substIsActive;\n  if (substActiveAndCorrectChapter) {\n    context.executionMethod = 'interpreter';\n    // icon to blink\n    const icon = document.getElementById(SideContentType.substVisualizer + '-icon');\n    if (icon) {\n      icon.classList.add('side-content-tab-alert');\n    }\n  }\n\n  function call_variant(variant: Variant) {\n    if (variant === 'non-det') {\n      return code.trim() === TRY_AGAIN\n        ? call(resume, lastNonDetResult)\n        : call(runInContext, code, context, {\n            executionMethod: 'interpreter',\n            originalMaxExecTime: execTime,\n            useSubst: substActiveAndCorrectChapter\n          });\n    } else if (variant === 'lazy') {\n      return call(runInContext, code, context, {\n        scheduler: 'preemptive',\n        originalMaxExecTime: execTime,\n        useSubst: substActiveAndCorrectChapter\n      });\n    } else if (variant === 'wasm') {\n      return call(wasm_compile_and_run, code, context);\n    } else {\n      throw new Error('Unknown variant: ' + variant);\n    }\n  }\n  async function wasm_compile_and_run(wasmCode: string, wasmContext: Context): Promise<Result> {\n    return Sourceror.compile(wasmCode, wasmContext)\n      .then((wasmModule: WebAssembly.Module) => Sourceror.run(wasmModule, wasmContext))\n      .then(\n        (returnedValue: any) => ({ status: 'finished', context, value: returnedValue }),\n        _ => ({ status: 'error' })\n      );\n  }\n\n  const isNonDet: boolean = context.variant === 'non-det';\n  const isLazy: boolean = context.variant === 'lazy';\n  const isWasm: boolean = context.variant === 'wasm';\n  const { result, interrupted, paused } = yield race({\n    result:\n      actionType === DEBUG_RESUME\n        ? call(resume, lastDebuggerResult)\n        : isNonDet || isLazy || isWasm\n        ? call_variant(context.variant)\n        : call(runInContext, code, context, {\n            scheduler: 'preemptive',\n            originalMaxExecTime: execTime,\n            useSubst: substActiveAndCorrectChapter\n          }),\n\n    /**\n     * A BEGIN_INTERRUPT_EXECUTION signals the beginning of an interruption,\n     * i.e the trigger for the interpreter to interrupt execution.\n     */\n    interrupted: take(BEGIN_INTERRUPT_EXECUTION),\n    paused: take(BEGIN_DEBUG_PAUSE)\n  });\n\n  if (interrupted) {\n    interrupt(context);\n    /* Redundancy, added ensure that interruption results in an error. */\n    context.errors.push(new InterruptedError(context.runtime.nodes[0]));\n    yield put(actions.debuggerReset(workspaceLocation));\n    yield put(actions.endInterruptExecution(workspaceLocation));\n    yield call(showWarningMessage, 'Execution aborted', 750);\n    return;\n  }\n\n  if (paused) {\n    yield put(actions.endDebuggerPause(workspaceLocation));\n    lastDebuggerResult = manualToggleDebugger(context);\n    yield call(updateInspector, workspaceLocation);\n    yield call(showWarningMessage, 'Execution paused', 750);\n    return;\n  }\n\n  if (actionType === EVAL_EDITOR) {\n    lastDebuggerResult = result;\n  }\n  yield call(updateInspector, workspaceLocation);\n\n  if (\n    result.status !== 'suspended' &&\n    result.status !== 'finished' &&\n    result.status !== 'suspended-non-det'\n  ) {\n    yield put(actions.evalInterpreterError(context.errors, workspaceLocation));\n\n    // we need to parse again, but preserve the errors in context\n    const oldErrors = context.errors;\n    context.errors = [];\n    const parsed = parse(code, context);\n    const typeErrors = parsed && typeCheck(validateAndAnnotate(parsed!, context), context)[1];\n    context.errors = oldErrors;\n    if (typeErrors && typeErrors.length > 0) {\n      yield put(\n        actions.sendReplInputToOutput('Hints:\\n' + parseError(typeErrors), workspaceLocation)\n      );\n    }\n    return;\n  } else if (result.status === 'suspended') {\n    yield put(actions.endDebuggerPause(workspaceLocation));\n    yield put(actions.evalInterpreterSuccess('Breakpoint hit!', workspaceLocation));\n    return;\n  } else if (isNonDet) {\n    if (result.value === 'cut') {\n      result.value = undefined;\n    }\n    lastNonDetResult = result;\n  }\n\n  // Do not write interpreter output to REPL, if executing chunks (e.g. prepend/postpend blocks)\n  if (actionType !== EVAL_SILENT) {\n    yield put(actions.evalInterpreterSuccess(result.value, workspaceLocation));\n  }\n\n  // For EVAL_EDITOR and EVAL_REPL, we send notification to workspace that a program has been evaluated\n  if (actionType === EVAL_EDITOR || actionType === EVAL_REPL) {\n    yield put(notifyProgramEvaluated(result, lastDebuggerResult, code, context, workspaceLocation));\n  }\n\n  /** If successful, then continue to run all testcases IFF evalCode was triggered from\n   *    EVAL_EDITOR (Run button) instead of EVAL_REPL (Eval button)\n   *  Retrieve the index of the active side-content tab\n   */\n  if (actionType === EVAL_EDITOR) {\n    const activeTab: SideContentType = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].sideContentActiveTab\n    );\n    /** If a student is attempting an assessment and has the autograder tab open OR\n     *    a grader is grading a submission and has the autograder tab open,\n     *    RUN all testcases of the current question through the interpreter\n     *  Each testcase runs in its own \"sandbox\" since the Context is cleared for each,\n     *    so side-effects from one testcase don't affect others\n     */\n    if (\n      activeTab === SideContentType.autograder &&\n      (workspaceLocation === 'assessment' || workspaceLocation === 'grading')\n    ) {\n      const testcases: Testcase[] = yield select(\n        (state: OverallState) => state.workspaces[workspaceLocation].editorTestcases\n      );\n      // Avoid displaying message if there are no testcases\n      if (testcases.length > 0) {\n        // Display a message to the user\n        yield call(showSuccessMessage, `Running all testcases!`, 750);\n        for (const idx of testcases.keys()) {\n          yield put(actions.evalTestcase(workspaceLocation, idx));\n          /** Run testcases synchronously - this blocks the generator until result of current\n           *  testcase is known and output to REPL; ensures that HANDLE_CONSOLE_LOG appends\n           *  consoleLogs(from display(...) calls) to the correct testcase result\n           */\n          const { success, error } = yield race({\n            success: take(EVAL_TESTCASE_SUCCESS),\n            error: take(EVAL_TESTCASE_FAILURE)\n          });\n          // Prematurely terminate if execution of current testcase returns an error\n          if (error || !success) {\n            return;\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function* evalTestCode(\n  code: string,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  index: number,\n  type: TestcaseType\n) {\n  yield put(actions.resetTestcase(workspaceLocation, index));\n\n  const { result, interrupted } = yield race({\n    result: call(runInContext, code, context, {\n      scheduler: 'preemptive',\n      originalMaxExecTime: execTime\n    }),\n    /**\n     * A BEGIN_INTERRUPT_EXECUTION signals the beginning of an interruption,\n     * i.e the trigger for the interpreter to interrupt execution.\n     */\n    interrupted: take(BEGIN_INTERRUPT_EXECUTION)\n  });\n\n  if (interrupted) {\n    interrupt(context);\n    // Redundancy, added ensure that interruption results in an error.\n    context.errors.push(new InterruptedError(context.runtime.nodes[0]));\n    yield put(actions.endInterruptExecution(workspaceLocation));\n    yield call(showWarningMessage, `Execution of testcase ${index} aborted`, 750);\n    return;\n  }\n\n  /** result.status here is either 'error' or 'finished'; 'suspended' is not possible\n   *  since debugger is presently disabled in assessment and grading environments\n   */\n  if (result.status === 'error') {\n    yield put(actions.evalInterpreterError(context.errors, workspaceLocation));\n    yield put(actions.evalTestcaseFailure(context.errors, workspaceLocation, index));\n  } else if (result.status === 'finished') {\n    // Execution of the testcase is successful, i.e. no errors were raised\n    yield put(actions.evalInterpreterSuccess(result.value, workspaceLocation));\n    yield put(actions.evalTestcaseSuccess(result.value, workspaceLocation, index));\n  }\n\n  // If a hidden testcase was executed, remove its output from the REPL\n  if (type === TestcaseTypes.hidden) {\n    yield put(actions.clearReplOutputLast(workspaceLocation));\n  }\n}\n","import { SagaIterator } from 'redux-saga';\nimport { fork } from 'redux-saga/effects';\n\nimport { mockBackendSaga } from '../mocks/BackendMocks';\nimport Constants from '../utils/Constants';\nimport BackendSaga from './BackendSaga';\nimport LoginSaga from './LoginSaga';\nimport PersistenceSaga from './PersistenceSaga';\nimport PlaygroundSaga from './PlaygroundSaga';\nimport WorkspaceSaga from './WorkspaceSaga';\n\nexport default function* MainSaga(): SagaIterator {\n  yield fork(Constants.useBackend ? BackendSaga : mockBackendSaga);\n  yield fork(WorkspaceSaga);\n  yield fork(LoginSaga);\n  yield fork(PlaygroundSaga);\n  yield fork(PersistenceSaga);\n}\n","import { Variant } from 'js-slang/dist/types';\nimport { compressToUTF16, decompressFromUTF16 } from 'lz-string';\n\nimport { OverallState } from '../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../commons/application/types/ExternalTypes';\nimport { SessionState } from '../commons/application/types/SessionTypes';\nimport { showWarningMessage } from '../commons/utils/NotificationsHelper';\n\nexport type SavedState = {\n  session: Partial<SessionState>;\n  playgroundEditorValue: string | null;\n  playgroundIsEditorAutorun: boolean;\n  playgroundSourceChapter: number;\n  playgroundSourceVariant: Variant;\n  playgroundExternalLibrary: ExternalLibraryName;\n};\n\nexport const loadStoredState = (): SavedState | undefined => {\n  try {\n    const serializedState = localStorage.getItem('storedState');\n    if (!serializedState) {\n      return undefined;\n    }\n    const decompressed = decompressFromUTF16(serializedState);\n    if (!decompressed) {\n      return undefined;\n    }\n    return JSON.parse(decompressed) as SavedState;\n  } catch (err) {\n    showWarningMessage('Error loading from local storage');\n    return undefined;\n  }\n};\n\nexport const saveState = (state: OverallState) => {\n  try {\n    const stateToBeSaved: SavedState = {\n      session: {\n        accessToken: state.session.accessToken,\n        refreshToken: state.session.refreshToken,\n        role: state.session.role,\n        name: state.session.name\n      },\n      playgroundEditorValue: state.workspaces.playground.editorValue,\n      playgroundIsEditorAutorun: state.workspaces.playground.isEditorAutorun,\n      playgroundSourceChapter: state.workspaces.playground.context.chapter,\n      playgroundSourceVariant: state.workspaces.playground.context.variant,\n      playgroundExternalLibrary: state.workspaces.playground.externalLibrary\n    };\n    const serialized = compressToUTF16(JSON.stringify(stateToBeSaved));\n    localStorage.setItem('storedState', serialized);\n  } catch (err) {\n    showWarningMessage('Error saving to local storage');\n  }\n};\n","import { routerMiddleware } from 'connected-react-router';\nimport { History } from 'history';\nimport { throttle } from 'lodash';\nimport { applyMiddleware, compose, createStore as _createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { defaultState } from '../commons/application/ApplicationTypes';\nimport createRootReducer from '../commons/application/reducers/RootReducer';\nimport MainSaga from '../commons/sagas/MainSaga';\nimport { history as appHistory } from '../commons/utils/HistoryHelper';\nimport { loadStoredState, SavedState, saveState } from './localStorage';\n\nexport const store = createStore(appHistory);\n\nexport function createStore(history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware, routerMiddleware(history)];\n\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        serialize: true,\n        maxAge: 300\n      }) || compose\n    : compose;\n\n  const initialStore = loadStore(loadStoredState()) || defaultState;\n\n  const enhancers = composeEnhancers(applyMiddleware(...middleware));\n\n  const createdStore = _createStore(createRootReducer(history), initialStore, enhancers);\n  sagaMiddleware.run(MainSaga);\n\n  createdStore.subscribe(\n    throttle(() => {\n      saveState(createdStore.getState());\n    }, 1000)\n  );\n\n  return createdStore;\n}\n\nfunction loadStore(loadedStore: SavedState | undefined) {\n  if (!loadedStore) {\n    return undefined;\n  }\n  return {\n    ...defaultState,\n    session: {\n      ...defaultState.session,\n      ...(loadedStore.session ? loadedStore.session : {})\n    },\n    workspaces: {\n      ...defaultState.workspaces,\n      playground: {\n        ...defaultState.workspaces.playground,\n        editorValue: loadedStore.playgroundEditorValue\n          ? loadedStore.playgroundEditorValue\n          : defaultState.workspaces.playground.editorValue,\n        isEditorAutorun: loadedStore.playgroundIsEditorAutorun\n          ? loadedStore.playgroundIsEditorAutorun\n          : defaultState.workspaces.playground.isEditorAutorun,\n        externalLibrary: loadedStore.playgroundExternalLibrary\n          ? loadedStore.playgroundExternalLibrary\n          : defaultState.workspaces.playground.externalLibrary,\n        context: {\n          ...defaultState.workspaces.playground.context,\n          chapter: loadedStore.playgroundSourceChapter\n            ? loadedStore.playgroundSourceChapter\n            : defaultState.workspaces.playground.context.chapter,\n          variant: loadedStore.playgroundSourceVariant\n            ? loadedStore.playgroundSourceVariant\n            : defaultState.workspaces.playground.context.variant\n        }\n      }\n    }\n  };\n}\n","import { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { Library } from '../assessment/AssessmentTypes';\n\n/**\n * Casts a library returned by an API call to a\n * Library used in the frontend.\n */\nexport const castLibrary = (lib: any): Library => ({\n  chapter: lib.chapter,\n  external: {\n    /** external names are lowercase for API results */\n    name: lib.external.name.toUpperCase() as ExternalLibraryName,\n    symbols: lib.external.symbols\n  },\n  /** globals are passed as an object, mapping symbol name -> value */\n  globals: Object.entries(lib.globals as object).map(entry => {\n    /** The value that is passed is evaluated into an actual JS value */\n    try {\n      entry[1] = (window as any).eval(entry[1]);\n    } catch (e) {}\n    return entry;\n  })\n});\n","import FontAssets from '../assets/FontAssets';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { HexColor } from '../utils/StyleUtils';\n\nexport const SampleUserState = {\n  collectibles: ['cookies', 'rat'],\n  achievements: ['trophy', 'coolbeans guy']\n};\n\nexport const emptyUserState = {\n  collectibles: [],\n  assessments: []\n};\n\nexport const userStateStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 35,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n","import { getAssessmentOverviews } from 'src/commons/sagas/RequestsSaga';\nimport { getSourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport ImageAssets from '../assets/ImageAssets';\nimport { screenCenter } from '../commons/CommonConstants';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport GameManager from '../scenes/gameManager/GameManager';\nimport { createButton } from '../utils/ButtonUtils';\nimport { emptyUserState, userStateStyle } from './GameStateConstants';\nimport { UserState } from './GameStateTypes';\n\nexport default class GameUserStateManager {\n  private userState: UserState;\n\n  constructor() {\n    this.userState = emptyUserState;\n  }\n\n  public initialise(gameManager: GameManager) {\n    this.userState = gameManager.saveManager.getLoadedUserState() || emptyUserState;\n  }\n\n  public addToList(listName: string, id: string): void {\n    this.userState[listName].push(id);\n  }\n\n  public getList(listName: string): string[] {\n    return this.userState[listName];\n  }\n\n  public async doesIdExistInList(listName: string, id: string): Promise<boolean> {\n    if (listName === 'assessments' && GameGlobalAPI.getInstance().isStorySimulator()) {\n      return this.askAssessmentComplete(id);\n    }\n    return this.userState[listName].includes(id);\n  }\n\n  public async askAssessmentComplete(assessmentId: string): Promise<boolean> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const assessmentCheckContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.UI, assessmentCheckContainer);\n\n    const activateAssessmentContainer: Promise<boolean> = new Promise(resolve => {\n      assessmentCheckContainer.add(\n        createButton(gameManager, {\n          assetKey: ImageAssets.longButton.key,\n          message: `Assessment#${assessmentId} completed?`,\n          textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.4 },\n          bitMapTextStyle: userStateStyle\n        }).setPosition(screenCenter.x, 100)\n      );\n      assessmentCheckContainer.add(\n        ['Yes', 'No'].map((response, index) =>\n          createButton(gameManager, {\n            assetKey: ImageAssets.shortButton.key,\n            message: response,\n            textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.4 },\n            bitMapTextStyle: userStateStyle,\n            onUp: () => {\n              assessmentCheckContainer.destroy();\n              resolve(response === 'Yes');\n            }\n          }).setPosition(screenCenter.x, index * 200 + 400)\n        )\n      );\n    });\n    const response = await activateAssessmentContainer;\n    return response;\n  }\n\n  public async loadAssessments() {\n    if (GameGlobalAPI.getInstance().isStorySimulator()) {\n      return;\n    }\n    const assessments = await getAssessmentOverviews(getSourceAcademyGame().getAccountInfo());\n    this.userState.assessments = assessments\n      ?.filter(assessment => assessment.status === 'submitted')\n      .map(assessment => assessment.id.toString());\n  }\n}\n","import { ImageAssetMap } from 'src/features/game/assets/AssetsTypes';\n\nconst SSImageAssets: ImageAssetMap = {\n  storySimBg: { key: 'student-room', path: '/locations/deathCube_ext/shields-down.png' },\n  mainMenuOptBanner: { key: 'menu-option', path: '/ui/menuOption.png' },\n  shortButton: { key: 'short-button', path: '/ui/shortButton.png' },\n  invertedButton: { key: 'inverted-button', path: '/ui/invertedColorButton.png' },\n  blueUnderlay: { key: 'blue-underlay', path: '/ui/blueUnderlay.png' },\n  topButton: { key: 'top-button', path: '/ui/topButton.png' },\n  colorIcon: { key: 'color-icon', path: '/ui/colorIcon.png' },\n  imageIcon: { key: 'image-icon', path: '/ui/imageIcon.png' },\n  bboxIcon: { key: 'bbox-icon', path: '/ui/bboxIcon.png' },\n  handIcon: { key: 'hand-icon', path: '/ui/handIcon.png' },\n  listIcon: { key: 'list-icon', path: '/ui/listIcon.png' },\n  eraseIcon: { key: 'erase-icon', path: '/ui/eraserIcon.png' },\n  iconBg: { key: 'icon-bg', path: '/ui/modeIconBg.png' },\n  longButton: { key: 'long-button', path: '/ui/longButton.png' }\n};\n\nexport default SSImageAssets;\n","export enum StorySimState {\n  Default = 'Default',\n  ObjectPlacement = 'ObjectPlacement',\n  AssetUploader = 'AssetUploader',\n  CheckpointSim = 'CheckpointSim',\n  ChapterSequence = 'ChapterSequence'\n}\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport { screenSize } from 'src/features/game/commons/CommonConstants';\nimport { BitmapFontStyle } from 'src/features/game/commons/CommonTypes';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\n\nexport const mainMenuOptStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 35,\n  fill: HexColor.darkBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst SSMainMenuConstants = {\n  maxOptButtonsRow: 2,\n  optButtonsXSpace: screenSize.x * 0.9,\n  optButtonsYSpace: screenSize.y * 0.5,\n  gameTxtStorageName: {\n    defaultChapter: 'defaultChapter',\n    checkpointTxt: 'checkpointTxt'\n  }\n};\n\nexport default SSMainMenuConstants;\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport ImageAssets from 'src/features/game/assets/ImageAssets';\nimport SoundAssets from 'src/features/game/assets/SoundAssets';\nimport { screenCenter, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { addLoadingScreen } from 'src/features/game/effects/LoadingScreen';\nimport GameLayerManager from 'src/features/game/layer/GameLayerManager';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport Parser from 'src/features/game/parser/Parser';\nimport GameSoundManager from 'src/features/game/sound/GameSoundManager';\nimport { createButton } from 'src/features/game/utils/ButtonUtils';\nimport { toS3Path } from 'src/features/game/utils/GameUtils';\nimport { calcTableFormatPos } from 'src/features/game/utils/StyleUtils';\nimport { getStorySimulatorGame } from 'src/pages/academy/storySimulator/subcomponents/storySimulatorGame';\n\nimport SSImageAssets from '../../assets/ImageAssets';\nimport { StorySimState } from '../../StorySimulatorTypes';\nimport mainMenuConstants, { mainMenuOptStyle } from './MainMenuConstants';\n\nclass MainMenu extends Phaser.Scene {\n  private soundManager: GameSoundManager;\n  private layerManager: GameLayerManager;\n\n  constructor() {\n    super('StorySimulatorMenu');\n    this.layerManager = new GameLayerManager();\n    this.soundManager = new GameSoundManager();\n  }\n  public init() {\n    getStorySimulatorGame().setStorySimProps({ mainMenuRef: this });\n    this.layerManager.initialise(this);\n    this.soundManager.initialise(this, getStorySimulatorGame());\n  }\n\n  public async preload() {\n    addLoadingScreen(this);\n    Object.values(ImageAssets).forEach(asset => this.load.image(asset.key, toS3Path(asset.path)));\n    Object.values(SSImageAssets).forEach(asset => this.load.image(asset.key, toS3Path(asset.path)));\n    Object.values(FontAssets).forEach(asset =>\n      this.load.bitmapFont(asset.key, asset.pngPath, asset.fntPath)\n    );\n    this.soundManager.loadSoundAssetMap(SoundAssets);\n  }\n\n  public async create() {\n    this.renderBackground();\n    this.renderOptionButtons();\n  }\n\n  private renderOptionButtons() {\n    const optionsContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    const buttons = this.getOptionButtons();\n\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      maxXSpace: mainMenuConstants.optButtonsXSpace,\n      maxYSpace: mainMenuConstants.optButtonsYSpace,\n      numItemLimit: mainMenuConstants.maxOptButtonsRow,\n      redistributeLast: true\n    });\n\n    optionsContainer.add(\n      buttons.map((button, index) =>\n        this.createOptButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1],\n          button.callback\n        )\n      )\n    );\n    this.layerManager.addToLayer(Layer.UI, optionsContainer);\n  }\n\n  private getOptionButtons() {\n    return [\n      {\n        text: 'Object Placement',\n        callback: () => {\n          getStorySimulatorGame().setStorySimState(StorySimState.ObjectPlacement);\n          this.layerManager.clearAllLayers();\n          this.scene.start('ObjectPlacement');\n        }\n      },\n      {\n        text: 'Simulate Checkpoint',\n        callback: () => {\n          getStorySimulatorGame().setStorySimState(StorySimState.CheckpointSim);\n        }\n      },\n      {\n        text: 'Asset Uploader',\n        callback: () => {\n          getStorySimulatorGame().setStorySimState(StorySimState.AssetUploader);\n        }\n      },\n      {\n        text: 'Chapter Sequencer',\n        callback: () => {\n          getStorySimulatorGame().setStorySimState(StorySimState.ChapterSequence);\n        }\n      }\n    ];\n  }\n\n  private createOptButton(text: string, xPos: number, yPos: number, callback: any) {\n    return createButton(\n      this,\n      {\n        assetKey: SSImageAssets.invertedButton.key,\n        message: text,\n        textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.5 },\n        bitMapTextStyle: mainMenuOptStyle,\n        onUp: callback\n      },\n      this.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  public callGameManager() {\n    const defaultChapterText =\n      sessionStorage.getItem(mainMenuConstants.gameTxtStorageName.defaultChapter) || '';\n    const checkpointTxt =\n      sessionStorage.getItem(mainMenuConstants.gameTxtStorageName.checkpointTxt) || '';\n    if (defaultChapterText === '' && checkpointTxt === '') {\n      return;\n    }\n    this.layerManager.clearAllLayers();\n    Parser.parse(defaultChapterText);\n    if (checkpointTxt) {\n      Parser.parse(checkpointTxt, true);\n    }\n    const gameCheckpoint = Parser.checkpoint;\n\n    this.scene.start('GameManager', {\n      isStorySimulator: true,\n      fullSaveState: undefined,\n      gameCheckpoint,\n      continueGame: false,\n      chapterNum: -1,\n      checkpointNum: -1\n    });\n  }\n\n  private renderBackground() {\n    const backgroundImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      SSImageAssets.storySimBg.key\n    );\n    backgroundImg.setDisplaySize(screenSize.x, screenSize.y);\n    const backgroundUnderlay = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      SSImageAssets.blueUnderlay.key\n    ).setAlpha(0.5);\n    this.layerManager.addToLayer(Layer.Background, backgroundImg);\n    this.layerManager.addToLayer(Layer.Background, backgroundUnderlay);\n  }\n}\n\nexport default MainMenu;\n","import { mandatory } from '../utils/GameUtils';\n\nclass GameInputManager {\n  private scene: Phaser.Scene | undefined;\n  private keyboardListeners: Phaser.Input.Keyboard.Key[];\n  private eventListeners: Phaser.Input.InputPlugin[];\n\n  constructor() {\n    this.keyboardListeners = [];\n    this.eventListeners = [];\n  }\n\n  public initialise(scene: Phaser.Scene) {\n    this.scene = scene;\n  }\n\n  public getScene = () => mandatory(this.scene) as Phaser.Scene;\n\n  public enableMouseInput(active: boolean) {\n    this.getScene().input.mouse.enabled = active;\n  }\n\n  public enableKeyboardInput(active: boolean) {\n    this.getScene().input.keyboard.enabled = active;\n  }\n\n  public registerKeyboardListener(\n    key: string | number | Phaser.Input.Keyboard.Key,\n    event: string | symbol,\n    callback: Function\n  ) {\n    const keyObj = this.getScene().input.keyboard.addKey(key);\n    const keyboardListener = keyObj.addListener(event, callback);\n    this.keyboardListeners.push(keyboardListener);\n  }\n\n  public registerEventListener(event: string | symbol, callback: Function) {\n    const eventListener = this.getScene().input.addListener(event, callback);\n    this.eventListeners.concat(eventListener);\n  }\n\n  public clearListeners() {\n    this.keyboardListeners.forEach(keyboardListener => keyboardListener.removeAllListeners());\n    this.eventListeners.forEach(eventListener => eventListener.removeAllListeners());\n  }\n}\n\nexport default GameInputManager;\n","import { Constants, screenCenter } from 'src/features/game/commons/CommonConstants';\nimport { AssetKey } from 'src/features/game/commons/CommonTypes';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\n\nimport { loadImage } from '../../game/utils/LoaderUtils';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\n\nexport default class SSBackgroundManager {\n  private backgroundAssetPath: string | undefined;\n  private objectPlacement: ObjectPlacement | undefined;\n  public x: number;\n  public y: number;\n\n  public constructor() {\n    this.x = screenCenter.x;\n    this.y = screenCenter.y;\n  }\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n  }\n\n  public async loadBackground() {\n    const shortPath = sessionStorage.getItem('selectedAsset');\n    if (!shortPath || !shortPath.startsWith('/locations/')) {\n      return;\n    }\n    this.backgroundAssetPath = shortPath;\n\n    const backgroundAssetKey = `!${shortPath}`;\n    this.getObjectPlacement().addAsset(backgroundAssetKey, shortPath);\n\n    const assetKeyOnLoad = await loadImage(\n      this.getObjectPlacement(),\n      backgroundAssetKey,\n      Constants.assetsFolder + shortPath\n    );\n    this.renderBackground(assetKeyOnLoad);\n  }\n\n  private renderBackground(backgroundAssetKey: AssetKey) {\n    if (backgroundAssetKey[0] !== '!') {\n      return;\n    }\n\n    this.getObjectPlacement().layerManager.clearLayerContents(Layer.Background);\n    const backgroundSprite = new Phaser.GameObjects.Image(\n      this.getObjectPlacement(),\n      screenCenter.x,\n      screenCenter.y,\n      backgroundAssetKey\n    ).setInteractive();\n    this.getObjectPlacement().layerManager.addToLayer(Layer.Background, backgroundSprite);\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement) as ObjectPlacement;\n\n  public getBackgroundAssetPath() {\n    return this.backgroundAssetPath;\n  }\n\n  public screenLog() {\n    return this.backgroundAssetPath + '\\n';\n  }\n}\n","export enum CursorMode {\n  DrawBBox,\n  DragResizeObj\n}\n","export function toIntString(num: number) {\n  return Math.floor(num).toString();\n}\n","import { ItemId } from 'src/features/game/commons/CommonTypes';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport { resize } from 'src/features/game/utils/SpriteUtils';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\n\nimport { CursorMode } from '../cursorMode/SSCursorModeTypes';\nimport { ICheckpointLoggable } from '../logger/SSLogManagerTypes';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport { toIntString } from '../utils/SSUtils';\nimport { SSBBoxDetail } from './SSBBoxManagerTypes';\n\nexport default class SSBBoxManager implements ICheckpointLoggable {\n  public checkpointTitle = 'boundingBoxes';\n\n  private objectPlacement: ObjectPlacement | undefined;\n  private bboxBeingDrawn: Phaser.GameObjects.Rectangle | undefined;\n  private startingCoordinates: number[] | undefined;\n  private bboxDetailMap: Map<ItemId, SSBBoxDetail>;\n\n  constructor() {\n    this.bboxDetailMap = new Map<ItemId, SSBBoxDetail>();\n  }\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n    this.addBBoxListeners(objectPlacement);\n  }\n\n  private addBBoxListeners(objectPlacement: ObjectPlacement) {\n    this.getObjectPlacement().inputManager.registerEventListener('pointerdown', () => {\n      if (this.getObjectPlacement().isCursorMode(CursorMode.DrawBBox)) {\n        this.bboxBeingDrawn = this.createNewBBox();\n      }\n    });\n\n    this.getObjectPlacement().inputManager.registerEventListener('pointerup', () => {\n      if (this.getObjectPlacement().isCursorMode(CursorMode.DrawBBox) && this.bboxBeingDrawn) {\n        if (this.bboxBeingDrawn.displayWidth <= 2 || this.bboxBeingDrawn.displayHeight <= 2) {\n          this.bboxBeingDrawn.destroy();\n          return;\n        }\n        this.bboxBeingDrawn.x += this.bboxBeingDrawn.displayWidth / 2;\n        this.bboxBeingDrawn.y += this.bboxBeingDrawn.displayHeight / 2;\n        this.bboxBeingDrawn.setOrigin(0.5);\n        this.registerBBox(this.bboxBeingDrawn);\n\n        objectPlacement.input.setDraggable(this.bboxBeingDrawn);\n        this.getObjectPlacement().setActiveSelection(this.bboxBeingDrawn);\n\n        this.startingCoordinates = undefined;\n        this.bboxBeingDrawn = undefined;\n      }\n    });\n  }\n\n  private createNewBBox() {\n    const [x, y] = this.getObjectPlacement().getCoordinates();\n    const bboxBeingDrawn = new Phaser.GameObjects.Rectangle(\n      this.getObjectPlacement(),\n      x,\n      y,\n      1,\n      1,\n      HexColor.white\n    )\n      .setOrigin(0)\n      .setAlpha(0.1)\n      .setInteractive()\n      .setDataEnabled();\n\n    this.startingCoordinates = [x, y];\n    this.getObjectPlacement().layerManager.addToLayer(Layer.BBox, bboxBeingDrawn);\n    return bboxBeingDrawn;\n  }\n\n  private registerBBox(bboxSprite: Phaser.GameObjects.Rectangle) {\n    const itemId = 'bbox' + this.getObjectPlacement().generateItemIdNumber();\n\n    const objectDetail: SSBBoxDetail = {\n      id: itemId,\n      x: bboxSprite.x,\n      y: bboxSprite.y,\n      width: bboxSprite.displayWidth,\n      height: bboxSprite.displayHeight\n    };\n\n    this.bboxDetailMap.set(itemId, objectDetail);\n\n    bboxSprite.data.set('itemId', itemId);\n    bboxSprite.data.set('type', 'bbox');\n  }\n\n  public getLoggables() {\n    return [...this.bboxDetailMap.values()];\n  }\n\n  public getItemById(itemId: ItemId) {\n    return this.bboxDetailMap.get(itemId);\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement) as ObjectPlacement;\n\n  public resizeWhileBeingDrawn(objectPlacement: ObjectPlacement) {\n    if (\n      !this.getObjectPlacement().isCursorMode(CursorMode.DrawBBox) ||\n      !this.startingCoordinates ||\n      !this.bboxBeingDrawn\n    ) {\n      return;\n    }\n    const [startX, startY] = this.startingCoordinates;\n    const currentX = objectPlacement.input.x;\n    const currentY = objectPlacement.input.y;\n    resize(this.bboxBeingDrawn, currentX - startX, currentY - startY);\n  }\n\n  public checkpointTxtLog() {\n    const map: string[] = [];\n    this.bboxDetailMap.forEach((bboxDetail: SSBBoxDetail) => {\n      const bboxDetailArray = [\n        '+' + bboxDetail.id,\n        toIntString(bboxDetail.x),\n        toIntString(bboxDetail.y),\n        toIntString(bboxDetail.width),\n        toIntString(bboxDetail.height)\n      ];\n\n      map.push(bboxDetailArray.join(', '));\n      map.push('    show_dialogue*(click)');\n    });\n    return map;\n  }\n\n  public setAttribute(\n    gameObject: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image,\n    attribute: string,\n    value: number\n  ) {\n    const itemId = gameObject.data.get('itemId');\n    const bboxDetail = this.bboxDetailMap.get(itemId);\n    if (!bboxDetail) return;\n    bboxDetail[attribute] = value;\n  }\n\n  public deleteAll() {\n    this.bboxDetailMap.clear();\n  }\n\n  public delete(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    const itemId = gameObject.data.get('itemId');\n    this.bboxDetailMap.delete(itemId);\n  }\n}\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport { BitmapFontStyle } from 'src/features/game/commons/CommonTypes';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\n\nexport const altTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 20,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nconst iconBgSize = 55;\n\nconst SSCursorModeConstants = {\n  iconBgSize: iconBgSize,\n  iconSize: 40,\n  iconSpacing: 15,\n  inactiveAlpha: 0.7,\n  onHoverAlpha: 1.0,\n  activeAlpha: 0.9,\n  altTextXPos: iconBgSize * 0.8,\n  altTextYPos: -iconBgSize * 0.4,\n  altTextMargin: 10\n};\n\nexport default SSCursorModeConstants;\n","import { Constants } from 'src/features/game/commons/CommonConstants';\nimport CommonTextHover from 'src/features/game/commons/CommonTextHover';\nimport { AssetKey } from 'src/features/game/commons/CommonTypes';\nimport GameSoundManager from 'src/features/game/sound/GameSoundManager';\nimport { createButton } from 'src/features/game/utils/ButtonUtils';\n\nimport SSImageAssets from '../assets/ImageAssets';\nimport SSCursorModeConstants, { altTextStyle } from './SSCursorModeConstants';\nimport { CursorMode } from './SSCursorModeTypes';\n\nexport default class SSCursorMode extends Phaser.GameObjects.Container {\n  private isModes: Array<boolean>;\n  private currCursorMode: CursorMode;\n  private cursorModes: Array<Phaser.GameObjects.Container>;\n  private currActiveModeIdx: number;\n  private soundManager: GameSoundManager | undefined;\n\n  constructor(\n    scene: Phaser.Scene,\n    x?: number,\n    y?: number,\n    soundManager?: GameSoundManager,\n    defaultCursorMode: CursorMode = CursorMode.DragResizeObj\n  ) {\n    super(scene, x, y);\n    this.currCursorMode = defaultCursorMode;\n    this.isModes = new Array<boolean>();\n    this.cursorModes = new Array<Phaser.GameObjects.Container>();\n    this.currActiveModeIdx = Constants.nullSequenceNumber;\n    this.soundManager = soundManager;\n  }\n\n  public getCurrCursorMode() {\n    return this.currCursorMode;\n  }\n\n  public setCursorMode(newMode: CursorMode) {\n    this.currCursorMode = newMode;\n  }\n\n  public addCursorMode(\n    scene: Phaser.Scene,\n    assetKey: AssetKey,\n    isMode: boolean = true,\n    text: string = '',\n    onClick: () => void = Constants.nullFunction,\n    onHover: () => void = Constants.nullFunction,\n    onOut: () => void = Constants.nullFunction\n  ) {\n    // Main container\n    const cursorModeContainer = new Phaser.GameObjects.Container(scene, 0, 0);\n\n    // Update\n    this.isModes.push(isMode);\n    this.cursorModes.push(cursorModeContainer);\n    const currIdx = this.cursorModes.length - 1;\n\n    // On hover text container\n    const hoverText = new CommonTextHover(\n      scene,\n      SSCursorModeConstants.altTextXPos,\n      SSCursorModeConstants.altTextYPos,\n      text,\n      altTextStyle\n    );\n\n    const onUp = () => {\n      if (this.isModes[currIdx]) this.currActiveModeIdx = currIdx;\n      onClick();\n      this.renderCursorModesContainer();\n    };\n\n    const onHoverWrapper = () => {\n      if (text !== '') hoverText.setVisible(true);\n      cursorModeContainer.setAlpha(SSCursorModeConstants.onHoverAlpha);\n      onHover();\n    };\n\n    const onOutWrapper = () => {\n      hoverText.setVisible(false);\n      const activeMode = currIdx === this.currActiveModeIdx && this.isModes[currIdx];\n      cursorModeContainer.setAlpha(\n        activeMode ? SSCursorModeConstants.activeAlpha : SSCursorModeConstants.inactiveAlpha\n      );\n      onOut();\n    };\n\n    const modeButton = createButton(\n      scene,\n      {\n        assetKey: SSImageAssets.iconBg.key,\n        onUp: onUp,\n        onHover: onHoverWrapper,\n        onOut: onOutWrapper,\n        onHoverEffect: false\n      },\n      this.soundManager\n    );\n\n    // Icon\n    const modeIcon = new Phaser.GameObjects.Sprite(scene, 0, 0, assetKey).setDisplaySize(\n      SSCursorModeConstants.iconSize,\n      SSCursorModeConstants.iconSize\n    );\n\n    modeButton.add(modeIcon);\n\n    cursorModeContainer.add([modeButton, hoverText]);\n  }\n\n  public renderCursorModesContainer() {\n    this.removeAll(false);\n    let spacing = 0;\n    this.cursorModes.forEach((mode, index) => {\n      mode.setPosition(0, spacing);\n      const activeMode = index === this.currActiveModeIdx && this.isModes[index];\n      mode.setAlpha(\n        activeMode ? SSCursorModeConstants.activeAlpha : SSCursorModeConstants.inactiveAlpha\n      );\n      this.add(mode);\n      spacing += SSCursorModeConstants.iconBgSize + SSCursorModeConstants.iconSpacing;\n    });\n  }\n}\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport { BitmapFontStyle } from 'src/features/game/commons/CommonTypes';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\n\nexport const loggableStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 27,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n","import { AssetPath } from 'src/features/game/commons/CommonTypes';\n\nexport function getIdFromShortPath(shortPath: AssetPath) {\n  return shortPath.split('/').pop()!.split('.')[0];\n}\n\nexport const padWithTab = (str: string) => '    ' + str;\n","import { AssetPath } from 'src/features/game/commons/CommonTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport StringUtils from 'src/features/game/utils/StringUtils';\n// import { multiplyDimensions } from 'src/features/game/utils/SpriteUtils';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\nimport { createBitmapText } from 'src/features/game/utils/TextUtils';\n\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport { toIntString } from '../utils/SSUtils';\nimport { loggableStyle } from './SSLogConstants';\nimport { getIdFromShortPath, padWithTab } from './SSLogManagerHelper';\nimport { ICheckpointLoggable, IScreenLoggable } from './SSLogManagerTypes';\n\nexport default class SSLogManager {\n  private detailMapContainer: Phaser.GameObjects.Container | undefined;\n  private objectPlacement: ObjectPlacement | undefined;\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n  }\n\n  public printCheckpoint(\n    locationAssetPath: AssetPath = '/locations/yourRoom-dim/normal.png',\n    checkpointLoggers: ICheckpointLoggable[]\n  ) {\n    const locationId = locationAssetPath === '' ? 'default' : getIdFromShortPath(locationAssetPath);\n\n    const loggables = checkpointLoggers.map(checkpointLogger => {\n      const txt = checkpointLogger.checkpointTxtLog();\n      if (!txt) {\n        return '';\n      }\n      const details = `${checkpointLogger.checkpointTitle}\\n${txt\n        .map(padWithTab)\n        .map(padWithTab)\n        .join('\\n')}`;\n\n      return details;\n    });\n\n    const checkpoint = `\nstartingLoc: ${locationId}\n\nobjectives\n    talk\n\nlocations\n    ${locationId}, ${locationAssetPath}, ${StringUtils.toCapitalizedWords(locationAssetPath)}\n\n${locationId}\n    modes: explore\n    actions\n        show_dialogue(welcome)\n${loggables.map(padWithTab).join('\\n')}\n\ndialogues\n    welcome\n        Congrats on creating your scene\n    click\n        Invisible bounding box is right here\n`;\n    alert('Chapter ready!');\n    console.log(checkpoint);\n  }\n\n  public showDetailMap(loggables: IScreenLoggable[]) {\n    this.detailMapContainer = new Phaser.GameObjects.Container(this.getObjectPlacement(), 0, 0);\n\n    loggables.forEach((loggable: IScreenLoggable) => {\n      const loggerRectangle = new Phaser.GameObjects.Rectangle(\n        this.getObjectPlacement(),\n        loggable.x,\n        loggable.y,\n        400,\n        210,\n        HexColor.darkBlue\n      )\n        .setOrigin(0.0, 0.5)\n        .setAlpha(0.9);\n\n      const loggerText = createBitmapText(\n        this.getObjectPlacement(),\n        this.formatObjectDetails(loggable),\n        loggable.x + 20,\n        loggable.y + 10,\n        loggableStyle\n      )\n        .setLetterSpacing(3)\n        .setOrigin(0.0, 0.6);\n\n      this.detailMapContainer!.add([loggerRectangle, loggerText]);\n    });\n    this.getObjectPlacement().add.existing(this.detailMapContainer);\n  }\n\n  private formatObjectDetails(loggable: IScreenLoggable) {\n    return Object.entries(loggable)\n      .map(\n        ([key, value]) =>\n          `${key}: ${typeof value === 'number' ? toIntString(value) : value.toString()}`\n      )\n      .join('\\n');\n  }\n\n  public hideDetailMap() {\n    if (this.detailMapContainer) {\n      this.detailMapContainer.destroy();\n    }\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement) as ObjectPlacement;\n}\n","import { Constants, screenCenter } from 'src/features/game/commons/CommonConstants';\nimport { AssetKey, ItemId } from 'src/features/game/commons/CommonTypes';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory, mapValues } from 'src/features/game/utils/GameUtils';\n\nimport { loadImage } from '../../game/utils/LoaderUtils';\nimport { getIdFromShortPath } from '../logger/SSLogManagerHelper';\nimport { ICheckpointLoggable } from '../logger/SSLogManagerTypes';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport { toIntString } from '../utils/SSUtils';\nimport { SSObjectDetail } from './SSObjectManagerTypes';\n\nexport default class SSObjectManager implements ICheckpointLoggable {\n  public checkpointTitle = 'objects';\n\n  private objectPlacement: ObjectPlacement | undefined;\n  private objectDetailMap: Map<ItemId, SSObjectDetail>;\n\n  constructor() {\n    this.objectDetailMap = new Map<ItemId, SSObjectDetail>();\n  }\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n    this.objectDetailMap = new Map<ItemId, SSObjectDetail>();\n  }\n\n  public async loadObject() {\n    const shortPath = sessionStorage.getItem('selectedAsset');\n    if (!shortPath) return;\n    const objectAssetKey = `#${shortPath}`;\n    this.getObjectPlacement().addAsset(objectAssetKey, shortPath);\n\n    const assetKeyOnLoad = await loadImage(\n      this.getObjectPlacement(),\n      objectAssetKey,\n      Constants.assetsFolder + shortPath\n    );\n    this.renderObject(assetKeyOnLoad);\n  }\n\n  private renderObject(objectAssetKey: string) {\n    if (objectAssetKey[0] !== '#') {\n      return;\n    }\n    const objectSprite = new Phaser.GameObjects.Image(\n      this.getObjectPlacement(),\n      screenCenter.x,\n      screenCenter.y,\n      objectAssetKey\n    )\n      .setInteractive()\n      .setDataEnabled();\n    this.getObjectPlacement().input.setDraggable(objectSprite);\n    this.getObjectPlacement().layerManager.addToLayer(Layer.Objects, objectSprite);\n\n    this.registerObject(objectAssetKey, objectSprite);\n  }\n\n  private registerObject(objectAssetKey: AssetKey, objectSprite: Phaser.GameObjects.Image) {\n    const itemId = this.generateItemId(\n      objectAssetKey,\n      this.getObjectPlacement().generateItemIdNumber()\n    );\n\n    const assetShortPath = mandatory(\n      this.getObjectPlacement().getAssetPath(objectAssetKey)\n    ) as string;\n\n    const objectDetail: SSObjectDetail = {\n      id: itemId,\n      assetKey: objectAssetKey,\n      assetPath: assetShortPath,\n      x: screenCenter.x,\n      y: screenCenter.y\n    };\n\n    this.objectDetailMap.set(itemId, objectDetail);\n\n    objectSprite.data.set('itemId', itemId);\n    objectSprite.data.set('type', 'object');\n\n    this.getObjectPlacement().setActiveSelection(objectSprite);\n  }\n\n  private generateItemId(assetKey: string, objectIdNumber: number) {\n    const itemName = getIdFromShortPath(assetKey);\n    return `${itemName}${objectIdNumber}`;\n  }\n\n  public getLoggables() {\n    return [...this.objectDetailMap.values()];\n  }\n\n  public checkpointTxtLog() {\n    return Array.from(\n      mapValues(this.objectDetailMap, (objectDetail: SSObjectDetail) => {\n        const objectDetailArray = [\n          '+' + objectDetail.id,\n          objectDetail.assetPath,\n          toIntString(objectDetail.x),\n          toIntString(objectDetail.y)\n        ];\n        if (objectDetail.width) {\n          objectDetailArray.push(toIntString(objectDetail.width));\n          objectDetailArray.push(toIntString(objectDetail.height!));\n        }\n        return objectDetailArray.join(', ');\n      }).values()\n    );\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement) as ObjectPlacement;\n\n  public setAttribute(\n    gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n    attribute: string,\n    value: number\n  ) {\n    const itemId = gameObject.data.get('itemId');\n    const itemDetail = this.objectDetailMap.get(itemId);\n    if (!itemDetail) return;\n    itemDetail[attribute] = value;\n  }\n\n  public deleteAll() {\n    this.objectDetailMap.clear();\n  }\n\n  public delete(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    const itemId = gameObject.data.get('itemId');\n    this.objectDetailMap.delete(itemId);\n  }\n}\n","const transformConstants = {\n  activeSelectMargin: 30,\n  scaleFactor: 1.02\n};\n\nexport default transformConstants;\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport { multiplyDimensions } from 'src/features/game/utils/SpriteUtils';\n\nimport { CursorMode } from '../cursorMode/SSCursorModeTypes';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport transformConstants from './SSTransformManagerConstants';\n\nexport default class SSTransformManager {\n  private activeSelection: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle | undefined;\n  private activeSelectRect: Phaser.GameObjects.Rectangle | undefined;\n  private objectPlacement: ObjectPlacement | undefined;\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n    this.trackDraggables(objectPlacement);\n    this.drawActiveSelectRect();\n    this.bindDeleteKey();\n  }\n\n  private drawActiveSelectRect() {\n    this.activeSelectRect = new Phaser.GameObjects.Rectangle(\n      this.getObjectPlacement(),\n      0,\n      0,\n      1,\n      1,\n      0\n    ).setAlpha(0.3);\n    this.getObjectPlacement().layerManager.addToLayer(Layer.Selector, this.activeSelectRect);\n  }\n\n  private trackDraggables(objectPlacement: ObjectPlacement) {\n    objectPlacement.inputManager.registerEventListener(\n      'drag',\n      (\n        pointer: MouseEvent,\n        gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n        dragX: number,\n        dragY: number\n      ) => {\n        if (!objectPlacement.isCursorMode(CursorMode.DrawBBox)) {\n          objectPlacement.getCursorManager().setCursorMode(CursorMode.DragResizeObj);\n          gameObject.x = dragX;\n          gameObject.y = dragY;\n        }\n\n        if (gameObject.data.get('type') === 'object') {\n          objectPlacement.setObjAttribute(gameObject, 'x', dragX);\n          objectPlacement.setObjAttribute(gameObject, 'y', dragY);\n          this.setActiveSelection(gameObject);\n        }\n\n        if (gameObject.data.get('type') === 'bbox') {\n          objectPlacement.setBBoxAttribute(gameObject, 'x', dragX);\n          objectPlacement.setBBoxAttribute(gameObject, 'y', dragY);\n          this.setActiveSelection(gameObject);\n        }\n      }\n    );\n  }\n\n  public resizeActive(enlarge: boolean) {\n    const objectPlacement = this.getObjectPlacement();\n    if (!this.activeSelection || !this.activeSelectRect) {\n      return;\n    }\n    const factor = enlarge ? transformConstants.scaleFactor : 1 / transformConstants.scaleFactor;\n    multiplyDimensions(this.activeSelection, factor);\n    this.activeSelectRect.displayHeight =\n      this.activeSelection.displayHeight + transformConstants.activeSelectMargin;\n    this.activeSelectRect.displayWidth =\n      this.activeSelection.displayWidth + transformConstants.activeSelectMargin;\n\n    if (this.activeSelection.data.get('type') === 'object') {\n      objectPlacement.setObjAttribute(\n        this.activeSelection,\n        'width',\n        Math.abs(this.activeSelection.displayWidth)\n      );\n      objectPlacement.setObjAttribute(\n        this.activeSelection,\n        'height',\n        Math.abs(this.activeSelection.displayHeight)\n      );\n    }\n\n    if (this.activeSelection.data.get('type') === 'bbox') {\n      objectPlacement.setBBoxAttribute(\n        this.activeSelection,\n        'width',\n        Math.abs(this.activeSelection.displayWidth)\n      );\n      objectPlacement.setBBoxAttribute(\n        this.activeSelection,\n        'height',\n        Math.abs(this.activeSelection.displayHeight)\n      );\n    }\n  }\n\n  public setActiveSelection(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    if (!this.activeSelectRect) {\n      return;\n    }\n    this.activeSelectRect!.setAlpha(0.3);\n    this.activeSelection = gameObject;\n    this.activeSelectRect.x = gameObject.x;\n    this.activeSelectRect.y = gameObject.y;\n\n    this.activeSelectRect.displayHeight =\n      gameObject.displayHeight + transformConstants.activeSelectMargin;\n    this.activeSelectRect.displayWidth =\n      gameObject.displayWidth + transformConstants.activeSelectMargin;\n  }\n\n  public deselect() {\n    this.activeSelectRect!.setAlpha(0);\n    this.activeSelection = undefined;\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement) as ObjectPlacement;\n\n  private bindDeleteKey() {\n    const deleteKeys = [\n      Phaser.Input.Keyboard.KeyCodes.BACKSPACE,\n      Phaser.Input.Keyboard.KeyCodes.DELETE\n    ];\n    deleteKeys.forEach(key =>\n      this.getObjectPlacement().inputManager.registerKeyboardListener(key, 'up', () => {\n        this.deleteActiveSelection();\n        this.deselect();\n      })\n    );\n  }\n\n  private deleteActiveSelection() {\n    if (!this.activeSelection) return;\n    switch (this.getType(this.activeSelection)) {\n      case 'object':\n        this.getObjectPlacement().deleteObj(this.activeSelection);\n        break;\n      case 'bbox':\n        this.getObjectPlacement().deleteBBox(this.activeSelection);\n        break;\n    }\n    this.activeSelection.destroy();\n  }\n\n  private getType(gameObject: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image) {\n    return this.activeSelection?.data.get('type');\n  }\n}\n","const objPlacementConstants = {\n  cursorModeXPos: 100,\n  cursorModeYPos: 100\n};\n\nexport default objPlacementConstants;\n","import CommonBackButton from 'src/features/game/commons/CommonBackButton';\nimport { screenCenter, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { AssetKey, AssetPath } from 'src/features/game/commons/CommonTypes';\nimport GameInputManager from 'src/features/game/input/GameInputManager';\nimport GameLayerManager from 'src/features/game/layer/GameLayerManager';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport GameSoundManager from 'src/features/game/sound/GameSoundManager';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport { getStorySimulatorGame } from 'src/pages/academy/storySimulator/subcomponents/storySimulatorGame';\n\nimport SSImageAssets from '../../assets/ImageAssets';\nimport SSBackgroundManager from '../../background/SSBackgroundManager';\nimport SSBBoxManager from '../../boundingBoxes/SSBBoxManager';\nimport SSCursorMode from '../../cursorMode/SSCursorMode';\nimport { CursorMode } from '../../cursorMode/SSCursorModeTypes';\nimport SSLogManager from '../../logger/SSLogManager';\nimport SSObjectManager from '../../objects/SSObjectManager';\nimport { StorySimState } from '../../StorySimulatorTypes';\nimport SSTransformManager from '../../transform/SSTransformManager';\nimport objPlacementConstants from './ObjectPlacementConstants';\n\nexport default class ObjectPlacement extends Phaser.Scene {\n  public layerManager: GameLayerManager;\n  public soundManager: GameSoundManager;\n  public inputManager: GameInputManager;\n  private transformManager: SSTransformManager;\n  private cursorModes: SSCursorMode | undefined;\n  private bboxManager: SSBBoxManager;\n  private objectManager: SSObjectManager;\n  private backgroundManager: SSBackgroundManager;\n  private logManager: SSLogManager;\n\n  private assetMap: Map<AssetKey, AssetPath>;\n  private itemIdNumber: number;\n\n  private openBracket: Phaser.Input.Keyboard.Key | undefined;\n  private closedBracket: Phaser.Input.Keyboard.Key | undefined;\n\n  constructor() {\n    super('ObjectPlacement');\n    this.layerManager = new GameLayerManager();\n    this.soundManager = new GameSoundManager();\n    this.inputManager = new GameInputManager();\n    this.objectManager = new SSObjectManager();\n    this.bboxManager = new SSBBoxManager();\n    this.backgroundManager = new SSBackgroundManager();\n    this.logManager = new SSLogManager();\n    this.transformManager = new SSTransformManager();\n\n    this.cursorModes = undefined;\n    this.itemIdNumber = 0;\n    this.assetMap = new Map<AssetKey, AssetPath>();\n  }\n\n  public init() {\n    this.layerManager = new GameLayerManager();\n    this.soundManager = new GameSoundManager();\n    this.inputManager = new GameInputManager();\n    this.objectManager = new SSObjectManager();\n    this.bboxManager = new SSBBoxManager();\n    this.backgroundManager = new SSBackgroundManager();\n    this.logManager = new SSLogManager();\n    this.transformManager = new SSTransformManager();\n\n    this.cursorModes = undefined;\n    this.itemIdNumber = 0;\n    this.assetMap = new Map<AssetKey, AssetPath>();\n  }\n\n  public create() {\n    this.layerManager.initialise(this);\n    this.soundManager.initialise(this, getStorySimulatorGame());\n    this.inputManager.initialise(this);\n    this.renderBackground();\n    this.createUIButtons();\n    this.backgroundManager.initialise(this);\n    this.objectManager.initialise(this);\n    this.bboxManager.initialise(this);\n    this.transformManager.initialise(this);\n    this.logManager.initialise(this);\n\n    this.openBracket = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.OPEN_BRACKET);\n    this.closedBracket = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.CLOSED_BRACKET);\n  }\n\n  public update() {\n    if (this.openBracket && this.openBracket.isDown) {\n      this.transformManager.resizeActive(false);\n    }\n    if (this.closedBracket && this.closedBracket.isDown) {\n      this.transformManager.resizeActive(true);\n    }\n\n    this.bboxManager.resizeWhileBeingDrawn(this);\n  }\n\n  private createUIButtons() {\n    const uiContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    const backButton = new CommonBackButton(\n      this,\n      () => {\n        this.cleanUp();\n        getStorySimulatorGame().setStorySimState(StorySimState.Default);\n        this.scene.start('StorySimulatorMenu');\n      },\n      0,\n      0,\n      this.soundManager\n    );\n\n    this.cursorModes = new SSCursorMode(\n      this,\n      objPlacementConstants.cursorModeXPos,\n      objPlacementConstants.cursorModeYPos,\n      this.soundManager\n    );\n    this.populateCursorModes();\n\n    uiContainer.add(this.cursorModes);\n    uiContainer.add(backButton);\n\n    this.layerManager.addToLayer(Layer.UI, uiContainer);\n  }\n\n  public renderBackground() {\n    const backgroundImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      SSImageAssets.storySimBg.key\n    );\n    backgroundImg.setDisplaySize(screenSize.x, screenSize.y);\n\n    this.layerManager.addToLayer(Layer.Background, backgroundImg);\n  }\n\n  private populateCursorModes() {\n    if (this.cursorModes) {\n      // Change background\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.colorIcon.key,\n        false,\n        'Set background',\n        async () => await this.backgroundManager.loadBackground()\n      );\n\n      // Add object\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.imageIcon.key,\n        false,\n        'Add selected object',\n        async () => await this.objectManager.loadObject()\n      );\n\n      // Draw BBox\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.bboxIcon.key,\n        true,\n        'Draw bounding boxes',\n        () => this.cursorModes!.setCursorMode(CursorMode.DrawBBox)\n      );\n\n      // Drag/Resize\n      this.cursorModes.addCursorMode(this, SSImageAssets.handIcon.key, true, 'Drag or resize', () =>\n        this.cursorModes!.setCursorMode(CursorMode.DragResizeObj)\n      );\n\n      // Print info\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.listIcon.key,\n        false,\n        'Print coordinates',\n        () =>\n          this.logManager.printCheckpoint(this.backgroundManager.getBackgroundAssetPath(), [\n            this.objectManager,\n            this.bboxManager\n          ]),\n        () =>\n          this.logManager.showDetailMap([\n            ...this.objectManager.getLoggables(),\n            ...this.bboxManager.getLoggables()\n          ]),\n        () => this.logManager.hideDetailMap()\n      );\n\n      // Erase Layers\n      this.cursorModes.addCursorMode(this, SSImageAssets.eraseIcon.key, false, 'Erase all', () => {\n        this.layerManager.clearSeveralLayers([Layer.Background, Layer.BBox, Layer.Objects]);\n        this.objectManager.deleteAll();\n        this.bboxManager.deleteAll();\n        this.transformManager.deselect();\n        this.renderBackground();\n      });\n\n      this.cursorModes.renderCursorModesContainer();\n    }\n  }\n\n  public getCursorManager = () => mandatory(this.cursorModes) as SSCursorMode;\n\n  public getCoordinates(): number[] {\n    return [this.input.x, this.input.y];\n  }\n\n  public isCursorMode(cursorMode: CursorMode) {\n    return this.getCursorManager().getCurrCursorMode() === cursorMode;\n  }\n\n  private cleanUp() {\n    this.inputManager.clearListeners();\n    this.layerManager.clearAllLayers();\n  }\n\n  public addAsset(assetKey: AssetKey, assetPath: AssetPath) {\n    this.assetMap.set(assetKey, assetPath);\n  }\n\n  public getAssetPath(assetKey: AssetKey) {\n    return this.assetMap.get(assetKey);\n  }\n\n  public generateItemIdNumber() {\n    return this.itemIdNumber++;\n  }\n\n  public setActiveSelection(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    this.transformManager.setActiveSelection(gameObject);\n  }\n\n  public setObjAttribute(\n    objectSprite: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n    attribute: string,\n    value: number\n  ) {\n    this.objectManager.setAttribute(objectSprite, attribute, value);\n  }\n\n  public deleteObj(objectSprite: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image) {\n    this.objectManager.delete(objectSprite);\n  }\n\n  public setBBoxAttribute(\n    bboxSprite: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n    attribute: string,\n    value: number\n  ) {\n    this.bboxManager.setAttribute(bboxSprite, attribute, value);\n  }\n\n  public deleteBBox(bboxSprite: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image) {\n    this.bboxManager.delete(bboxSprite);\n  }\n}\n","import * as Phaser from 'phaser';\nimport GameManager from 'src/features/game/scenes/gameManager/GameManager';\nimport MainMenu from 'src/features/storySimulator/scenes/mainMenu/MainMenu';\nimport ObjectPlacement from 'src/features/storySimulator/scenes/ObjectPlacement/ObjectPlacement';\n\nimport { screenSize } from '../../../../features/game/commons/CommonConstants';\nimport { SourceAcademyGame } from '../../game/subcomponents/sourceAcademyGame';\n\nconst config = {\n  debug: true,\n  type: Phaser.WEBGL,\n  width: screenSize.x,\n  height: screenSize.y,\n  physics: {\n    default: 'arcade'\n  },\n  scale: {\n    mode: Phaser.Scale.FIT,\n    parent: 'game-display'\n  }\n};\n\nlet storySimulatorGame: SourceAcademyGame;\nexport const getStorySimulatorGame = () => {\n  return storySimulatorGame;\n};\n\nexport const createStorySimulatorGame = () => {\n  storySimulatorGame = new SourceAcademyGame(config);\n  storySimulatorGame.scene.add('StorySimulatorMenu', MainMenu, true);\n  storySimulatorGame.scene.add('ObjectPlacement', ObjectPlacement);\n  storySimulatorGame.scene.add('GameManager', GameManager);\n  return storySimulatorGame;\n};\n","import { Constants, screenCenter, screenSize } from '../commons/CommonConstants';\nimport { AssetKey } from '../commons/CommonTypes';\nimport { fadeIn } from '../effects/FadeEffect';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { LocationId } from '../location/GameMapTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\n\nexport default class GameBackgroundManager {\n  public observerId: string;\n\n  constructor() {\n    this.observerId = 'GameBackgroundManager';\n  }\n\n  public renderBackgroundLayerContainer(locationId: LocationId) {\n    const assetKey = GameGlobalAPI.getInstance().getLocationAtId(locationId).assetKey;\n\n    this.renderBackgroundImage(assetKey);\n  }\n\n  private renderBackgroundImage(assetKey: AssetKey) {\n    GameGlobalAPI.getInstance().clearSeveralLayers([Layer.Background]);\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    const backgroundAsset = new Phaser.GameObjects.Image(\n      gameManager,\n      screenCenter.x,\n      screenCenter.y,\n      assetKey\n    )\n      .setDisplaySize(screenSize.x, screenSize.y)\n      .setAlpha(0);\n\n    gameManager.add.tween(fadeIn([backgroundAsset], Constants.fadeDuration));\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.Background, backgroundAsset);\n  }\n}\n","import { screenSize } from '../commons/CommonConstants';\n\nexport const entryTweenProps = {\n  y: 0,\n  duration: 300,\n  ease: 'Power2'\n};\n\nexport const exitTweenProps = {\n  y: -screenSize.y,\n  duration: 250,\n  ease: 'Power2'\n};\n","import FontAssets from '../assets/FontAssets';\nimport ImageAssets from '../assets/ImageAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { Color, HexColor } from '../utils/StyleUtils';\nimport { CollectibleProperty } from './GameCollectiblesTypes';\n\nexport const pageBannerTextStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 35,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nexport const listBannerTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  fill: HexColor.darkBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nexport const collectibleTitleStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 50,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const collectibleDescStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '25px',\n  fill: Color.lightBlue,\n  align: 'center',\n  lineSpacing: 10,\n  wordWrap: { width: 500 }\n};\n\nexport const defaultCollectibleProp: CollectibleProperty = {\n  assetKey: ImageAssets.cookies.key,\n  x: 0,\n  y: 0\n};\n\nconst CollectibleConstants = {\n  backButtonYPos: screenSize.y * 0.3,\n  pageYStartPos: -screenSize.y * 0.3,\n  pageYSpacing: 150,\n  pageTextXPos: screenSize.x * 0.3,\n  listYStartPos: -screenSize.y * 0.31,\n  listYSpacing: 100,\n  listTextXPos: -screenSize.x * 0.09,\n  previewXPos: -screenSize.x * 0.3,\n  previewYPos: -screenSize.y * 0.05,\n  previewDim: 430,\n  titleYOffset: -275,\n  descYOffset: 275,\n  arrowDownYPos: screenSize.y * 0.34,\n  arrowXMidPos: screenSize.x * 0.08,\n  arrowXOffset: 80,\n  arrowXScale: 0.4,\n  arrowYScale: 0.3,\n  itemsPerPage: 7\n};\n\nexport default CollectibleConstants;\n","export enum CollectiblePage {\n  Collectibles = 'Collectibles',\n  Achievements = 'Achievements'\n}\n\nexport type CollectibleProperty = {\n  assetKey: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n};\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport { IBaseScene, IGameUI } from '../commons/CommonTypes';\nimport { fadeAndDestroy } from '../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../effects/FlyEffect';\nimport GameLayerManager from '../layer/GameLayerManager';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GamePhaseManager from '../phase/GamePhaseManager';\nimport { GamePhaseType } from '../phase/GamePhaseTypes';\nimport GameSoundManager from '../sound/GameSoundManager';\nimport { createButton } from '../utils/ButtonUtils';\nimport { limitNumber, mandatory, sleep } from '../utils/GameUtils';\nimport { resizeUnderflow } from '../utils/SpriteUtils';\nimport { calcListFormatPos } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport collectibleConstants, {\n  collectibleDescStyle,\n  collectibleTitleStyle,\n  defaultCollectibleProp,\n  listBannerTextStyle,\n  pageBannerTextStyle\n} from './GameCollectiblesConstants';\nimport { getAchievements, getCollectibles } from './GameCollectiblesHelper';\nimport { CollectiblePage, CollectibleProperty } from './GameCollectiblesTypes';\n\nclass GameCollectiblesManager implements IGameUI {\n  private scene: Phaser.Scene | undefined;\n  private layerManager: GameLayerManager | undefined;\n  private soundManager: GameSoundManager | undefined;\n  private phaseManager: GamePhaseManager | undefined;\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n  private previewContainer: Phaser.GameObjects.Container | undefined;\n  private itemsContainer: Phaser.GameObjects.Container | undefined;\n  private pageChosenContainer: Phaser.GameObjects.Container | undefined;\n  private currActivePage: CollectiblePage;\n  private activePageNumber: Map<CollectiblePage, number>;\n\n  constructor() {\n    this.activePageNumber = new Map<CollectiblePage, number>();\n    this.currActivePage = CollectiblePage.Collectibles;\n  }\n\n  public initialise(scene: IBaseScene, phaseManager: GamePhaseManager) {\n    this.scene = scene;\n    this.layerManager = scene.layerManager;\n    this.soundManager = scene.soundManager;\n    this.phaseManager = phaseManager;\n\n    // Set initial page number to zero\n    Object.keys(CollectiblePage).forEach((page, index) => {\n      const pageName = page as CollectiblePage;\n      this.activePageNumber.set(pageName, 0);\n    });\n  }\n\n  private setPage(page: CollectiblePage) {\n    if (this.uiContainer) {\n      if (this.itemsContainer) this.itemsContainer.destroy();\n      if (this.pageChosenContainer) this.pageChosenContainer.destroy();\n\n      // Update\n      this.currActivePage = page;\n      this.itemsContainer = this.createItemsContainer();\n      this.uiContainer.add(this.itemsContainer);\n\n      // Set chosen page banner\n      const bannerPos = this.getPageOptPositions();\n      const chosenIdx = Object.keys(CollectiblePage).findIndex(pg => pg === (page as string));\n      const bannerChosen = new Phaser.GameObjects.Sprite(\n        this.getScene(),\n        bannerPos[chosenIdx][0],\n        bannerPos[chosenIdx][1] + collectibleConstants.pageYStartPos,\n        ImageAssets.collectiblesPageChosen.key\n      );\n      this.pageChosenContainer = new Phaser.GameObjects.Container(this.getScene(), 0, 0, [\n        bannerChosen\n      ]);\n      this.uiContainer.add(this.pageChosenContainer);\n\n      // Set default preview\n      this.setPreview('', defaultCollectibleProp, '');\n    }\n  }\n\n  public async activateUI(): Promise<void> {\n    this.uiContainer = this.createUIContainer();\n    this.getLayerManager().addToLayer(Layer.UI, this.uiContainer);\n\n    // Set initial page\n    this.setPage(this.currActivePage);\n\n    this.uiContainer.setPosition(screenCenter.x, -screenSize.y);\n\n    this.getScene().tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps,\n      y: screenCenter.y\n    });\n  }\n\n  public async deactivateUI(): Promise<void> {\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, this.uiContainer.y);\n\n      this.getScene().tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(exitTweenProps.duration);\n      fadeAndDestroy(this.getScene(), this.uiContainer, { fadeDuration: 50 });\n    }\n  }\n\n  private createUIContainer() {\n    const collectibleContainer = new Phaser.GameObjects.Container(this.getScene(), 0, 0);\n\n    const blackUnderlay = new Phaser.GameObjects.Rectangle(\n      this.getScene(),\n      0,\n      0,\n      screenSize.x,\n      4 * screenSize.y,\n      0\n    )\n      .setAlpha(0.7)\n      .setInteractive();\n\n    const collectiblesBg = new Phaser.GameObjects.Image(\n      this.getScene(),\n      0,\n      0,\n      ImageAssets.collectiblesMenu.key\n    );\n    collectibleContainer.add([blackUnderlay, collectiblesBg]);\n\n    // Add options\n    const pageOptButtons = Object.keys(CollectiblePage).map((page, index) => {\n      return {\n        text: page,\n        callback: () => this.setPage(page as CollectiblePage)\n      };\n    });\n    const pageOptButtonPositions = this.getPageOptPositions();\n    collectibleContainer.add(\n      pageOptButtons.map((button, index) =>\n        this.createPageOpt(\n          button.text,\n          pageOptButtonPositions[index][0],\n          pageOptButtonPositions[index][1] + collectibleConstants.pageYStartPos,\n          button.callback\n        )\n      )\n    );\n\n    // Add back button\n    const backButton = this.createPageOpt(\n      'Back',\n      0,\n      collectibleConstants.backButtonYPos,\n      async () => {\n        if (this.getPhaseManager().isCurrentPhase(GamePhaseType.CollectibleMenu)) {\n          await this.getPhaseManager().popPhase();\n        }\n      }\n    );\n    collectibleContainer.add(backButton);\n\n    // Add page arrows\n    const arrowLeft = createButton(\n      this.getScene(),\n      {\n        assetKey: ImageAssets.arrow.key,\n        onUp: () => this.nextPage(false)\n      },\n      this.soundManager\n    )\n      .setScale(collectibleConstants.arrowXScale, collectibleConstants.arrowYScale)\n      .setRotation((-90 * Math.PI) / 180)\n      .setPosition(\n        collectibleConstants.arrowXMidPos - collectibleConstants.arrowXOffset,\n        collectibleConstants.arrowDownYPos\n      );\n\n    const arrowRight = createButton(\n      this.getScene(),\n      {\n        assetKey: ImageAssets.arrow.key,\n        onUp: () => this.nextPage(true)\n      },\n      this.soundManager\n    )\n      .setScale(collectibleConstants.arrowXScale, collectibleConstants.arrowYScale)\n      .setRotation((90 * Math.PI) / 180)\n      .setPosition(\n        collectibleConstants.arrowXMidPos + collectibleConstants.arrowXOffset,\n        collectibleConstants.arrowDownYPos\n      );\n    collectibleContainer.add([arrowLeft, arrowRight]);\n\n    // Add preview frame\n    const frame = new Phaser.GameObjects.Sprite(\n      this.getScene(),\n      collectibleConstants.previewXPos,\n      collectibleConstants.previewYPos,\n      ImageAssets.popUpFrame.key\n    ).setScale(1.2);\n    collectibleContainer.add(frame);\n\n    return collectibleContainer;\n  }\n\n  private getPageOptPositions() {\n    return calcListFormatPos({\n      numOfItems: Object.keys(CollectiblePage).length,\n      xSpacing: 0,\n      ySpacing: collectibleConstants.pageYSpacing\n    });\n  }\n\n  private setPreview(title: string, prop: CollectibleProperty, description: string = '') {\n    if (this.uiContainer) {\n      if (this.previewContainer) this.previewContainer.destroy();\n      this.previewContainer = new Phaser.GameObjects.Container(this.getScene(), 0, 0);\n\n      // Preview image\n      const previewSprite = new Phaser.GameObjects.Sprite(this.getScene(), 0, 0, prop.assetKey);\n      resizeUnderflow(\n        previewSprite,\n        collectibleConstants.previewDim,\n        collectibleConstants.previewDim\n      );\n      previewSprite\n        .setPosition(collectibleConstants.previewXPos, collectibleConstants.previewYPos)\n        .setOrigin(0.428, 0.468);\n\n      // Preview title\n      const previewTitle = createBitmapText(\n        this.getScene(),\n        title,\n        collectibleConstants.previewXPos,\n        collectibleConstants.previewYPos + collectibleConstants.titleYOffset,\n        collectibleTitleStyle\n      ).setOrigin(0.35, 0.5);\n\n      // Preview description\n      const previewDesc = new Phaser.GameObjects.Text(\n        this.getScene(),\n        collectibleConstants.previewXPos,\n        collectibleConstants.previewYPos + collectibleConstants.descYOffset,\n        description,\n        collectibleDescStyle\n      ).setOrigin(0.45, 0.0);\n\n      this.previewContainer.add([previewSprite, previewTitle, previewDesc]);\n      this.uiContainer.add(this.previewContainer);\n    }\n  }\n\n  private nextPage(next: boolean) {\n    const currPageNum = this.activePageNumber.get(this.currActivePage)!;\n    const newPageNum = limitNumber(\n      next ? currPageNum + 1 : currPageNum - 1,\n      0,\n      Number.MAX_SAFE_INTEGER\n    );\n    const itemLength = this.getItems(newPageNum).length;\n\n    if (itemLength > 0) {\n      this.activePageNumber.set(this.currActivePage, newPageNum);\n      this.setPage(this.currActivePage);\n    }\n  }\n\n  private getScene = () => mandatory(this.scene) as Phaser.Scene;\n  private getLayerManager = () => mandatory(this.layerManager) as GameLayerManager;\n  private getPhaseManager = () => mandatory(this.phaseManager) as GamePhaseManager;\n\n  private createPageOpt(text: string, xPos: number, yPos: number, callback: any) {\n    return createButton(\n      this.getScene(),\n      {\n        assetKey: ImageAssets.collectiblesPage.key,\n        message: text,\n        textConfig: { x: collectibleConstants.pageTextXPos, y: 0, oriX: 0.1, oriY: 0.5 },\n        bitMapTextStyle: pageBannerTextStyle,\n        onUp: callback\n      },\n      this.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  private createItemsContainer() {\n    const itemsContainer = new Phaser.GameObjects.Container(this.getScene(), 0, 0);\n\n    const items = this.getItems(this.activePageNumber.get(this.currActivePage)!);\n    const itemPositions = calcListFormatPos({\n      numOfItems: items.length,\n      xSpacing: 0,\n      ySpacing: collectibleConstants.listYSpacing\n    });\n    itemsContainer.add(\n      items.map((item, index) =>\n        this.createItemButton(\n          item,\n          itemPositions[index][0],\n          itemPositions[index][1] + collectibleConstants.listYStartPos,\n          () => this.setPreview(item, defaultCollectibleProp)\n        )\n      )\n    );\n    return itemsContainer;\n  }\n\n  private createItemButton(obj: string, xPos: number, yPos: number, callback: any) {\n    return createButton(\n      this.getScene(),\n      {\n        assetKey: ImageAssets.collectiblesBanner.key,\n        message: obj,\n        textConfig: { x: collectibleConstants.listTextXPos, y: 0, oriX: 0.0, oriY: 0.55 },\n        bitMapTextStyle: listBannerTextStyle,\n        onUp: callback\n      },\n      this.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  private getItems(pageNum: number) {\n    let itemList: string[];\n    switch (this.currActivePage) {\n      case CollectiblePage.Achievements:\n        itemList = getAchievements();\n        break;\n      case CollectiblePage.Collectibles:\n        itemList = getCollectibles();\n        break;\n      default:\n        itemList = [];\n    }\n\n    const itemStartIdx = pageNum * collectibleConstants.itemsPerPage;\n    return itemList.slice(itemStartIdx, itemStartIdx + collectibleConstants.itemsPerPage);\n  }\n}\n\nexport default GameCollectiblesManager;\n","export function getCollectibles() {\n  return ['collect1', 'collect2'];\n}\n\nexport function getAchievements() {\n  return [\n    'achievement1',\n    'achievement2',\n    'achievement3',\n    'achievement4',\n    'achievement5',\n    'achievement6',\n    'achievement7',\n    'achievement8',\n    'achievement9',\n    'achievement10',\n    'achievement11',\n    'achievement12'\n  ];\n}\n","import { calcTableFormatPos, HexColor } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport { Constants, screenSize } from './CommonConstants';\nimport { BitmapFontStyle, TextConfig } from './CommonTypes';\n\ntype RadioButtonChoiceConfig = {\n  circleDim: number;\n  checkedDim: number;\n  outlineThickness: number;\n};\n\ntype RadioButtonConfig = {\n  choices: string[];\n  defaultChoiceIdx?: number;\n  maxXSpace?: number;\n  radioChoiceConfig?: RadioButtonChoiceConfig;\n  choiceTextConfig?: TextConfig;\n  bitmapTextStyle?: BitmapFontStyle;\n};\n\nclass CommonRadioButton extends Phaser.GameObjects.Container {\n  private activeChoice: Phaser.GameObjects.Container | undefined;\n  private activeChoiceIdx: number;\n  private choices: string[];\n  private buttonPositions: Array<[number, number]>;\n\n  private radioChoiceConfig: RadioButtonChoiceConfig;\n  private choiceTextConfig: TextConfig;\n  private bitmapTextStyle: BitmapFontStyle;\n\n  constructor(\n    scene: Phaser.Scene,\n    {\n      choices,\n      defaultChoiceIdx = 0,\n      maxXSpace = screenSize.x,\n      radioChoiceConfig = {\n        circleDim: 20,\n        checkedDim: 10,\n        outlineThickness: 5\n      },\n      choiceTextConfig = { x: 0, y: 0, oriX: 0.5, oriY: 0.5 },\n      bitmapTextStyle = Constants.defaultFontStyle\n    }: RadioButtonConfig,\n    x?: number,\n    y?: number\n  ) {\n    super(scene, x, y);\n    this.activeChoiceIdx = defaultChoiceIdx;\n    this.choices = choices;\n    this.choiceTextConfig = choiceTextConfig;\n    this.bitmapTextStyle = bitmapTextStyle;\n    this.radioChoiceConfig = radioChoiceConfig;\n\n    const buttons = this.getRadioButtons(choices);\n    this.buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      maxXSpace: maxXSpace\n    });\n\n    this.renderRadioButtons(buttons, this.buttonPositions, this.radioChoiceConfig);\n    this.activate(defaultChoiceIdx);\n  }\n\n  private getRadioButtons(choices: string[]) {\n    return choices.map((choice, index) => {\n      return {\n        text: choice,\n        callback: () => this.activate(index)\n      };\n    });\n  }\n\n  private renderRadioButtons(\n    buttons: { text: string; callback: any }[],\n    buttonPos: Array<[number, number]>,\n    radioChoiceConfig: RadioButtonChoiceConfig\n  ) {\n    this.add(\n      buttons.map((button, index) =>\n        this.createRadioButton(\n          buttonPos[index][0],\n          buttonPos[index][1],\n          button.callback,\n          radioChoiceConfig\n        )\n      )\n    );\n  }\n\n  private createRadioButton(\n    xPos: number,\n    yPos: number,\n    callback: any,\n    radioChoiceConfig: RadioButtonChoiceConfig\n  ) {\n    return new Phaser.GameObjects.Ellipse(\n      this.scene,\n      xPos,\n      yPos,\n      radioChoiceConfig.circleDim,\n      radioChoiceConfig.circleDim,\n      HexColor.lightBlue\n    )\n      .setStrokeStyle(radioChoiceConfig.outlineThickness, HexColor.darkBlue)\n      .setInteractive({ useHandCursor: true })\n      .addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, callback);\n  }\n\n  private activate(id: number): void {\n    this.activeChoiceIdx = id;\n\n    // Render checked option\n    if (this.activeChoice) this.activeChoice.destroy();\n\n    this.activeChoice = new Phaser.GameObjects.Container(\n      this.scene,\n      this.buttonPositions[id][0],\n      this.buttonPositions[id][1]\n    );\n    const choiceText = createBitmapText(\n      this.scene,\n      this.choices[id],\n      this.choiceTextConfig.x,\n      this.choiceTextConfig.y,\n      this.bitmapTextStyle\n    ).setOrigin(this.choiceTextConfig.oriX, this.choiceTextConfig.oriY);\n    const optionChecked = new Phaser.GameObjects.Ellipse(\n      this.scene,\n      0,\n      0,\n      this.radioChoiceConfig.checkedDim,\n      this.radioChoiceConfig.checkedDim,\n      HexColor.darkBlue\n    );\n    this.activeChoice.add([choiceText, optionChecked]);\n\n    this.add(this.activeChoice);\n  }\n\n  public getValueIdx(): number {\n    return this.activeChoiceIdx;\n  }\n\n  public getChoices(): string[] {\n    return this.choices;\n  }\n\n  public getChosenChoice(): string {\n    if (this.activeChoiceIdx < this.choices.length) {\n      return this.choices[this.activeChoiceIdx];\n    }\n    return Constants.nullInteractionId;\n  }\n}\n\nexport default CommonRadioButton;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const optionTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const optionHeaderTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 35,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const applySettingsTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst settingsConstants = {\n  optXSpace: screenSize.x * 0.4,\n  optXPos: 140,\n  volUnderlineYPos: screenSize.y * 0.25,\n  volTextXpos: screenSize.x * 0.25,\n  volTextYPos: screenSize.y * 0.23,\n  volOptYPos: -screenSize.y * 0.26,\n  volContainerOpts: ['0', '0.5', '1.0', '1.5', '2.0']\n};\n\nexport default settingsConstants;\n","import FontAssets from '../assets/FontAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { HexColor } from '../utils/StyleUtils';\n\nexport const escapeOptButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const volumeRadioOptTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 20,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const optTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst escapeConstants = {\n  textOriX: 0.33,\n  textOriY: 0.85,\n  buttonYPos: screenSize.y * 0.15,\n\n  optTextXPos: screenSize.x * 0.38,\n  optTextYPos: screenSize.y * 0.38,\n  radioButtonsXSpace: screenSize.x * 0.2,\n\n  volOptXPos: screenSize.x * 0.05,\n  volOptYPos: -screenSize.y * 0.1\n};\n\nexport default escapeConstants;\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport CommonRadioButton from '../commons/CommonRadioButton';\nimport { IBaseScene, IGameUI } from '../commons/CommonTypes';\nimport GameInputManager from '../input/GameInputManager';\nimport GameLayerManager from '../layer/GameLayerManager';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GamePhaseManager from '../phase/GamePhaseManager';\nimport { GamePhaseType } from '../phase/GamePhaseTypes';\nimport GameSaveManager from '../save/GameSaveManager';\nimport settingsConstants from '../scenes/settings/SettingsConstants';\nimport GameSoundManager from '../sound/GameSoundManager';\nimport { createButton } from '../utils/ButtonUtils';\nimport { mandatory } from '../utils/GameUtils';\nimport { calcTableFormatPos } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport escapeConstants, {\n  escapeOptButtonStyle,\n  optTextStyle,\n  volumeRadioOptTextStyle\n} from './GameEscapeConstants';\n\nclass GameEscapeManager implements IGameUI {\n  private volumeOptions: CommonRadioButton | undefined;\n  private scene: Phaser.Scene | undefined;\n  private layerManager: GameLayerManager | undefined;\n  private phaseManager: GamePhaseManager | undefined;\n  private soundManager: GameSoundManager | undefined;\n  private inputManager: GameInputManager | undefined;\n  private saveManager: GameSaveManager | undefined;\n  private isStorySimulator: boolean;\n\n  constructor() {\n    this.isStorySimulator = false;\n  }\n\n  public initialise(\n    scene: IBaseScene,\n    phaseManager: GamePhaseManager,\n    saveManager: GameSaveManager,\n    isStorySimulator: boolean\n  ) {\n    this.scene = scene;\n    this.layerManager = scene.layerManager;\n    this.soundManager = scene.soundManager;\n    this.inputManager = scene.inputManager;\n    this.phaseManager = phaseManager;\n    this.saveManager = saveManager;\n    this.isStorySimulator = isStorySimulator;\n  }\n\n  private createUIContainer() {\n    const escapeMenuContainer = new Phaser.GameObjects.Container(this.getScene(), 0, 0);\n\n    const escapeMenuBg = new Phaser.GameObjects.Image(\n      this.getScene(),\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.escapeMenuBackground.key\n    )\n      .setDisplaySize(screenSize.x, screenSize.y)\n      .setInteractive({ pixelPerfect: true });\n\n    const volOpt = this.createVolOptContainer();\n    escapeMenuContainer.add([escapeMenuBg, volOpt]);\n\n    const buttons = this.getOptButtons();\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length\n    });\n\n    escapeMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createEscapeOptButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1] + escapeConstants.buttonYPos,\n          button.callback\n        )\n      )\n    );\n\n    return escapeMenuContainer;\n  }\n\n  public getOptButtons() {\n    return [\n      {\n        text: 'Main Menu',\n        callback: () => {\n          this.cleanUp();\n          if (this.isStorySimulator) {\n            this.getScene().scene.start('StorySimulatorMenu');\n          } else {\n            this.getScene().scene.start('MainMenu');\n          }\n        }\n      },\n      {\n        text: 'Continue',\n        callback: async () => {\n          if (this.getPhaseManager().isCurrentPhase(GamePhaseType.EscapeMenu)) {\n            await this.getPhaseManager().popPhase();\n          }\n        }\n      },\n      {\n        text: 'Apply Settings',\n        callback: () => this.applySettings()\n      }\n    ];\n  }\n\n  public activateUI() {\n    const escapeMenuContainer = this.createUIContainer();\n    this.getLayerManager().addToLayer(Layer.Escape, escapeMenuContainer);\n  }\n\n  public deactivateUI() {\n    this.getLayerManager().clearSeveralLayers([Layer.Escape]);\n  }\n\n  private createVolOptContainer() {\n    const volOptContainer = new Phaser.GameObjects.Container(this.getScene(), 0, 0);\n\n    const userVol = this.getSaveManager().getLoadedUserState().settings.volume;\n    const userVolIdx = settingsConstants.volContainerOpts.findIndex(\n      value => parseFloat(value) === userVol\n    );\n\n    const volumeText = createBitmapText(\n      this.getScene(),\n      'Volume',\n      escapeConstants.optTextXPos,\n      escapeConstants.optTextYPos,\n      optTextStyle\n    );\n\n    this.volumeOptions = new CommonRadioButton(\n      this.getScene(),\n      {\n        choices: settingsConstants.volContainerOpts,\n        defaultChoiceIdx: userVolIdx,\n        maxXSpace: escapeConstants.radioButtonsXSpace,\n        radioChoiceConfig: {\n          circleDim: 15,\n          checkedDim: 10,\n          outlineThickness: 3\n        },\n        choiceTextConfig: { x: 0, y: -45, oriX: 0.5, oriY: 0.25 },\n        bitmapTextStyle: volumeRadioOptTextStyle\n      },\n      escapeConstants.volOptXPos,\n      escapeConstants.volOptYPos\n    );\n\n    volOptContainer.add([volumeText, this.volumeOptions]);\n    return volOptContainer;\n  }\n\n  private createEscapeOptButton(text: string, xPos: number, yPos: number, callback: any) {\n    return createButton(\n      this.getScene(),\n      {\n        assetKey: ImageAssets.mediumButton.key,\n        message: text,\n        textConfig: { x: 0, y: 0, oriX: 0.37, oriY: 0.75 },\n        bitMapTextStyle: escapeOptButtonStyle,\n        onUp: callback\n      },\n      this.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  private async applySettings() {\n    if (this.volumeOptions) {\n      // Save settings\n      const volumeVal = parseFloat(this.volumeOptions.getChosenChoice());\n      await this.getSaveManager().saveSettings({ volume: volumeVal });\n\n      // Apply settings\n      const newUserSetting = this.getSaveManager().getLoadedUserState();\n      this.getSoundManager().applyUserSettings(newUserSetting);\n    }\n  }\n\n  private getScene = () => mandatory(this.scene) as Phaser.Scene;\n  private getLayerManager = () => mandatory(this.layerManager) as GameLayerManager;\n  private getSoundManager = () => mandatory(this.soundManager) as GameSoundManager;\n  private getSaveManager = () => mandatory(this.saveManager) as GameSaveManager;\n  private getPhaseManager = () => mandatory(this.phaseManager) as GamePhaseManager;\n  private getInputManager = () => mandatory(this.inputManager) as GameInputManager;\n\n  private cleanUp() {\n    this.getSoundManager().stopCurrBgMusic();\n    this.getInputManager().clearListeners();\n    this.getLayerManager().clearAllLayers();\n  }\n}\n\nexport default GameEscapeManager;\n","import { Constants } from '../commons/CommonConstants';\nimport { IGameUI } from '../commons/CommonTypes';\nimport GameInputManager from '../input/GameInputManager';\nimport { mandatory } from '../utils/GameUtils';\nimport { GamePhaseType } from './GamePhaseTypes';\n\nexport default class GamePhaseManager {\n  public phaseMap: Map<GamePhaseType, IGameUI>;\n  private phaseStack: GamePhaseType[];\n  private inputManager: GameInputManager | undefined;\n  private phaseTransitionCallback: (newPhase: GamePhaseType) => void;\n\n  constructor() {\n    this.phaseStack = [GamePhaseType.None];\n    this.phaseMap = new Map<GamePhaseType, IGameUI>();\n    this.phaseTransitionCallback = Constants.nullFunction;\n  }\n\n  public initialise(phaseMap: Map<GamePhaseType, IGameUI>, inputManager: GameInputManager) {\n    this.phaseMap = phaseMap;\n    this.inputManager = inputManager;\n  }\n\n  public setCallback(fn: (newPhase: GamePhaseType) => void) {\n    this.phaseTransitionCallback = fn;\n  }\n\n  public async popPhase(): Promise<void> {\n    const prevPhase = this.phaseStack.pop()!;\n    await this.executePhaseTransition(prevPhase, this.getCurrentPhase());\n  }\n\n  public async pushPhase(newPhase: GamePhaseType): Promise<void> {\n    const prevPhase = this.getCurrentPhase();\n    if (newPhase === prevPhase || this.isCurrentPhase(GamePhaseType.EscapeMenu)) return;\n    this.phaseStack.push(newPhase);\n    await this.executePhaseTransition(prevPhase, newPhase);\n  }\n\n  public async swapPhase(newPhase: GamePhaseType): Promise<void> {\n    const prevPhase = this.getCurrentPhase();\n    if (newPhase === prevPhase || this.isCurrentPhase(GamePhaseType.EscapeMenu)) return;\n    this.phaseStack.pop();\n    this.phaseStack.push(newPhase);\n    await this.executePhaseTransition(prevPhase, newPhase);\n  }\n\n  private async executePhaseTransition(prevPhase: GamePhaseType, newPhase: GamePhaseType) {\n    await this.phaseTransitionCallback(newPhase);\n\n    this.getInputManager().enableKeyboardInput(false);\n    this.getInputManager().enableMouseInput(false);\n    await this.phaseMap.get(prevPhase)!.deactivateUI();\n    await this.phaseMap.get(newPhase)!.activateUI();\n    this.getInputManager().enableMouseInput(true);\n    this.getInputManager().enableKeyboardInput(true);\n  }\n\n  public isCurrentPhase(phase: GamePhaseType): boolean {\n    return this.getCurrentPhase() === phase;\n  }\n\n  public getCurrentPhase(): GamePhaseType {\n    if (!this.phaseStack.length) {\n      this.phaseStack = [GamePhaseType.None];\n    }\n    return this.phaseStack[this.phaseStack.length - 1];\n  }\n\n  public getInputManager = () => mandatory(this.inputManager) as GameInputManager;\n}\n","export enum SaveManagerType {\n  Game = 'Game',\n  Settings = 'Settings',\n  Simulator = 'Simulator',\n  None = 'None'\n}\n\nexport type FullSaveState = {\n  gameSaveStates: { [chapterNum: number]: GameSaveState };\n  userState: UserSaveState;\n};\n\nexport type GameSaveState = {\n  currentLocation: string;\n  currentPhase: string;\n  chapterObjective: { [objective: string]: boolean };\n  lastCheckpointPlayed: number;\n  locationStates: {\n    [locationId: string]: {\n      id: string;\n      name: string;\n      assetKey: string;\n      modes?: string[];\n      navigation?: string[];\n      talkTopics?: string[];\n      objects?: string[];\n      boundingBoxes?: string[];\n    };\n  };\n  objectPropertyMap: {\n    [itemId: string]: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      isInteractive: boolean;\n      interactionId: string;\n    };\n  };\n  bboxPropertyMap: {\n    [itemId: string]: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      isInteractive: boolean;\n      interactionId: string;\n    };\n  };\n  triggeredInteractions: { [interactionId: string]: boolean };\n};\n\nexport type UserSaveState = {\n  settings: SettingsJson;\n  lastPlayedCheckpoint: [number, number];\n  collectibles: string[];\n  achievements: string[];\n  lastCompletedChapter: number;\n};\n\nexport type SettingsJson = {\n  volume: any;\n};\n","import { AccountInfo } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport { Constants } from '../commons/CommonConstants';\nimport { mandatory } from '../utils/GameUtils';\nimport { createEmptySaveState } from './GameSaveConstants';\nimport { gameStateToJson, userSettingsToJson } from './GameSaveHelper';\nimport { saveData } from './GameSaveRequests';\nimport { FullSaveState, SaveManagerType, SettingsJson } from './GameSaveTypes';\n\nexport default class GameSaveManager {\n  private accountInfo: AccountInfo | undefined;\n  private fullSaveState: FullSaveState;\n  private chapterNum: number;\n  private checkpointNum: number;\n  private continueGame: boolean;\n  private version: SaveManagerType;\n\n  constructor() {\n    this.fullSaveState = createEmptySaveState();\n    this.chapterNum = Constants.nullSequenceNumber;\n    this.checkpointNum = Constants.nullSequenceNumber;\n    this.continueGame = false;\n    this.version = SaveManagerType.None;\n  }\n\n  public async initialiseForGame(\n    accountInfo: AccountInfo,\n    fullSaveState: FullSaveState | undefined,\n    chapterNum: number,\n    checkpointNum: number,\n    continueGame: boolean\n  ) {\n    if (accountInfo.role !== 'student') {\n      throw Error('This initalisation method is for students playing games');\n    }\n    this.accountInfo = accountInfo;\n    this.chapterNum = chapterNum;\n    this.checkpointNum = checkpointNum;\n    if (!fullSaveState) {\n      throw Error('No loaded state');\n    }\n    this.fullSaveState = fullSaveState;\n    this.continueGame = continueGame;\n    this.version = SaveManagerType.Game;\n  }\n\n  public async initialiseForSettings(\n    accountInfo: AccountInfo,\n    fullSaveState: FullSaveState | undefined\n  ) {\n    this.accountInfo = accountInfo;\n    if (!fullSaveState) {\n      throw Error('No loaded state');\n    }\n    this.fullSaveState = fullSaveState;\n    this.continueGame = false;\n    this.version = SaveManagerType.Settings;\n  }\n\n  public async initialiseForStaff(accountInfo: AccountInfo) {\n    if (accountInfo.role !== 'staff') {\n      throw Error('This initalisation method is for staff testing simulator');\n    }\n    this.accountInfo = accountInfo;\n    this.version = SaveManagerType.Simulator;\n  }\n\n  public async saveGame() {\n    if (this.version === SaveManagerType.Game) {\n      this.fullSaveState = gameStateToJson(this.fullSaveState, this.chapterNum, this.checkpointNum);\n      await saveData(this.getAccountInfo(), this.fullSaveState);\n    } else if (this.version === SaveManagerType.Simulator) {\n      return;\n    } else {\n      throw new Error('Only used during gameplay');\n    }\n  }\n\n  public async saveSettings(settingsJson: SettingsJson) {\n    this.fullSaveState = userSettingsToJson(this.fullSaveState, settingsJson);\n    await saveData(this.getAccountInfo(), this.fullSaveState);\n  }\n\n  public getLoadedUserState() {\n    return this.fullSaveState.userState;\n  }\n\n  public getLoadedGameStoryState() {\n    if (this.continueGame) {\n      return this.fullSaveState.gameSaveStates[this.chapterNum];\n    } else {\n      return undefined;\n    }\n  }\n\n  public getLoadedLocation() {\n    if (this.continueGame && this.fullSaveState.gameSaveStates[this.chapterNum]) {\n      return this.fullSaveState.gameSaveStates[this.chapterNum].currentLocation;\n    } else {\n      return;\n    }\n  }\n\n  public getLoadedPhase() {\n    return this.fullSaveState.gameSaveStates[this.chapterNum].currentPhase;\n  }\n\n  private getAccountInfo = () => mandatory(this.accountInfo) as AccountInfo;\n}\n","import { FullSaveState } from './GameSaveTypes';\n\nexport const createEmptySaveState = (): FullSaveState => {\n  return {\n    gameSaveStates: {},\n    userState: {\n      collectibles: [],\n      achievements: [],\n      settings: { volume: 1 },\n      lastPlayedCheckpoint: [-1, -1],\n      lastCompletedChapter: -1\n    }\n  };\n};\n","import { Constants } from '../../commons/CommonConstants';\n\nexport const magnifyingGlass = `url(${Constants.assetsFolder}/ui/magnifying.png), pointer`;\nexport const magnifyingGlassHighlight = `url(${Constants.assetsFolder}/ui/magnifying_trigg.png), pointer`;\nexport const magnifyingGlassChecked = `url(${Constants.assetsFolder}/ui/magnifying_check.png), pointer`;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { IGameUI, ItemId } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../../effects/FlyEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { sleep } from '../../utils/GameUtils';\nimport {\n  magnifyingGlass,\n  magnifyingGlassChecked,\n  magnifyingGlassHighlight\n} from './GameModeExploreConstants';\n\nclass GameModeExplore implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  public createUIContainer(): Phaser.GameObjects.Container {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const exploreMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    const backButton = new CommonBackButton(\n      gameManager,\n      () => {\n        GameGlobalAPI.getInstance().popPhase();\n        GameGlobalAPI.getInstance().fadeInLayer(Layer.Character, 300);\n      },\n      0,\n      0,\n      gameManager.soundManager\n    );\n    exploreMenuContainer.add(backButton);\n    return exploreMenuContainer;\n  }\n\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, -screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps\n    });\n\n    GameGlobalAPI.getInstance().enableObjectAction({\n      onClick: this.explorePointerUp,\n      onHover: this.explorePointerOver,\n      onPointerout: this.explorePointerOut\n    });\n\n    GameGlobalAPI.getInstance().enableBBoxAction({\n      onClick: this.explorePointerUp,\n      onHover: this.explorePointerOver,\n      onPointerout: this.explorePointerOut\n    });\n\n    gameManager.input.setDefaultCursor(magnifyingGlass);\n  }\n\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    gameManager.input.setDefaultCursor('');\n    GameGlobalAPI.getInstance().disableBBoxAction();\n    GameGlobalAPI.getInstance().disableObjectAction();\n\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n\n  private explorePointerOver(id: ItemId) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const hasTriggered = GameGlobalAPI.getInstance().hasTriggeredInteraction(id);\n    if (hasTriggered) {\n      gameManager.input.setDefaultCursor(magnifyingGlassChecked);\n    } else {\n      gameManager.input.setDefaultCursor(magnifyingGlassHighlight);\n    }\n  }\n\n  private explorePointerOut() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    gameManager.input.setDefaultCursor(magnifyingGlass);\n  }\n\n  private explorePointerUp(id: string) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    gameManager.input.setDefaultCursor('');\n    GameGlobalAPI.getInstance().triggerInteraction(id);\n    gameManager.input.setDefaultCursor(magnifyingGlass);\n  }\n}\n\nexport default GameModeExplore;\n","import FontAssets from '../../assets/FontAssets';\nimport ImageAssets from '../../assets/ImageAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle, GameSprite } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const modeButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 45,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const modeBannerRect = {\n  assetKey: ImageAssets.modeMenuBanner.key,\n  assetXPos: screenCenter.x,\n  assetYPos: screenCenter.y,\n  isInteractive: false\n} as GameSprite;\n\nconst modeMenuConstants = {\n  buttonYPosOffset: screenSize.y * 0.3,\n  entryTweenProps: {\n    y: 0,\n    duration: 500,\n    ease: 'Power2'\n  },\n  exitTweenProps: {\n    y: screenSize.y * 0.4,\n    duration: 300,\n    ease: 'Power2'\n  }\n};\n\nexport default modeMenuConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { IGameUI } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { GameLocationAttr } from '../../location/GameMapTypes';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { sleep } from '../../utils/GameUtils';\nimport { calcTableFormatPos } from '../../utils/StyleUtils';\nimport { GameMode, gameModeToPhase } from '../GameModeTypes';\nimport modeMenuConstants, { modeBannerRect, modeButtonStyle } from './GameModeMenuConstants';\n\nclass GameModeMenu implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  private getLatestLocationModes() {\n    const currLocId = GameGlobalAPI.getInstance().getCurrLocId();\n    let latestModesInLoc = GameGlobalAPI.getInstance().getModesByLocId(currLocId);\n    const talkTopics = GameGlobalAPI.getInstance().getLocationAttr(\n      GameLocationAttr.talkTopics,\n      currLocId\n    );\n\n    // Remove talk mode if there is no talk topics\n    if (talkTopics.length === 0) {\n      latestModesInLoc = latestModesInLoc.filter(mode => mode !== GameMode.Talk);\n    }\n\n    return latestModesInLoc;\n  }\n\n  private createUIContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const modeMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    const modeBanner = new Phaser.GameObjects.Image(\n      gameManager,\n      modeBannerRect.assetXPos,\n      modeBannerRect.assetYPos,\n      modeBannerRect.assetKey\n    );\n    modeMenuContainer.add(modeBanner);\n\n    const modes = this.getLatestLocationModes();\n    const buttons = this.getModeButtons(modes);\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length\n    });\n\n    modeMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createModeButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1] + modeMenuConstants.buttonYPosOffset,\n          button.callback\n        )\n      )\n    );\n    return modeMenuContainer;\n  }\n\n  private getModeButtons(modes: GameMode[]) {\n    return modes.sort().map(mode => {\n      return {\n        text: mode,\n        callback: () => {\n          GameGlobalAPI.getInstance().pushPhase(gameModeToPhase[mode]);\n          if (mode !== GameMode.Talk) {\n            GameGlobalAPI.getInstance().fadeOutLayer(Layer.Character, 300);\n          }\n        }\n      };\n    });\n  }\n\n  private createModeButton(text: string, xPos: number, yPos: number, callback: any) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    return createButton(\n      gameManager,\n      {\n        assetKey: ImageAssets.shortButton.key,\n        message: text,\n        textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.25 },\n        bitMapTextStyle: modeButtonStyle,\n        onUp: callback\n      },\n      gameManager.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...modeMenuConstants.entryTweenProps\n    });\n  }\n\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...modeMenuConstants.exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n}\n\nexport default GameModeMenu;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const moveButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst modeMoveConstants = {\n  buttonYSpace: screenSize.y * 0.8,\n  buttonXPosOffset: screenSize.x * 0.25,\n  previewFrameXPos: screenSize.x * 0.3,\n  previewWidth: screenSize.x * 0.473,\n  previewHeight: screenSize.y * 0.56,\n  previewXPos: screenSize.x * 0.3125,\n  previewYPos: screenSize.y * 0.515\n};\n\nexport default modeMoveConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { IGameUI } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../../effects/FlyEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { GameLocationAttr, LocationId } from '../../location/GameMapTypes';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { sleep } from '../../utils/GameUtils';\nimport { calcTableFormatPos } from '../../utils/StyleUtils';\nimport modeMoveConstants, { moveButtonStyle } from './GameModeMoveConstants';\n\nclass GameModeMove implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  private setPreview(sprite: Phaser.GameObjects.Sprite, assetKey: string) {\n    sprite\n      .setTexture(assetKey)\n      .setDisplaySize(modeMoveConstants.previewWidth, modeMoveConstants.previewHeight)\n      .setPosition(modeMoveConstants.previewXPos, modeMoveConstants.previewYPos);\n  }\n\n  private getLatestNavigations() {\n    return GameGlobalAPI.getInstance().getLocationAttr(\n      GameLocationAttr.navigation,\n      GameGlobalAPI.getInstance().getCurrLocId()\n    );\n  }\n\n  private createUIContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const moveMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    // Preview\n    const previewFrame = new Phaser.GameObjects.Sprite(\n      gameManager,\n      modeMoveConstants.previewFrameXPos,\n      screenCenter.y,\n      ImageAssets.locationPreviewFrame.key\n    );\n    const previewFill = new Phaser.GameObjects.Sprite(\n      gameManager,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.locationPreviewFill.key\n    );\n    moveMenuContainer.add([previewFrame, previewFill]);\n\n    const navigations = this.getLatestNavigations();\n    const buttons = this.getMoveButtons(navigations, previewFill);\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      numItemLimit: 1,\n      maxYSpace: modeMoveConstants.buttonYSpace\n    });\n\n    moveMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createMoveButton(\n          button.text,\n          buttonPositions[index][0] + modeMoveConstants.buttonXPosOffset,\n          buttonPositions[index][1],\n          button.callback,\n          button.onHover,\n          button.onOut\n        )\n      )\n    );\n\n    const backButton = new CommonBackButton(\n      gameManager,\n      () => {\n        GameGlobalAPI.getInstance().popPhase();\n        GameGlobalAPI.getInstance().fadeInLayer(Layer.Character, 300);\n      },\n      0,\n      0,\n      gameManager.soundManager\n    );\n    moveMenuContainer.add(backButton);\n\n    // Initial setting\n    this.setPreview(previewFill, ImageAssets.defaultLocationImg.key);\n\n    return moveMenuContainer;\n  }\n\n  private getMoveButtons(navigations: LocationId[], previewSprite: Phaser.GameObjects.Sprite) {\n    const previewLoc = (assetKey: string) => this.setPreview(previewSprite, assetKey);\n    const previewDefault = () => this.setPreview(previewSprite, ImageAssets.defaultLocationImg.key);\n\n    return navigations.map(nav => {\n      const location = GameGlobalAPI.getInstance().getLocationAtId(nav);\n      return {\n        text: location.name,\n        callback: async () => {\n          await GameGlobalAPI.getInstance().popPhase();\n          await GameGlobalAPI.getInstance().changeLocationTo(nav);\n        },\n        onHover: () => previewLoc(location.assetKey),\n        onOut: () => previewDefault()\n      };\n    });\n  }\n\n  private createMoveButton(\n    text: string,\n    xPos: number,\n    yPos: number,\n    callback: any,\n    onHover: any,\n    onOut: any\n  ) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    return createButton(\n      gameManager,\n      {\n        assetKey: ImageAssets.longButton.key,\n        message: text,\n        textConfig: { x: 0, y: 0, oriX: 0.4, oriY: 0.15 },\n        bitMapTextStyle: moveButtonStyle,\n        onUp: callback,\n        onHover: onHover,\n        onOut: onOut\n      },\n      gameManager.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, -screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps\n    });\n  }\n\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n}\n\nexport default GameModeMove;\n","import { IGameUI } from '../../commons/CommonTypes';\n\nclass GameModeSequence implements IGameUI {\n  public activateUI() {}\n  public deactivateUI() {}\n}\n\nexport default GameModeSequence;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const talkButtonYSpace = screenSize.y * 0.7;\n\nexport const talkButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { IGameUI, ItemId } from '../../commons/CommonTypes';\nimport { Dialogue } from '../../dialogue/GameDialogueTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../../effects/FlyEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { GameLocationAttr } from '../../location/GameMapTypes';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { mandatory, sleep } from '../../utils/GameUtils';\nimport { calcTableFormatPos } from '../../utils/StyleUtils';\nimport { talkButtonStyle, talkButtonYSpace } from './GameModeTalkConstants';\n\nclass GameModeTalk implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  private getLatestTalkTopics() {\n    return GameGlobalAPI.getInstance().getLocationAttr(\n      GameLocationAttr.talkTopics,\n      GameGlobalAPI.getInstance().getCurrLocId()\n    );\n  }\n\n  private createUIContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const talkMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    const talkTopics = this.getLatestTalkTopics();\n    const buttons = this.getTalkTopicButtons(talkTopics);\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      maxYSpace: talkButtonYSpace\n    });\n\n    talkMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createTalkTopicButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1],\n          button.callback\n        )\n      )\n    );\n\n    // Add check for interacted talk topics\n    buttons.forEach((button, index) => {\n      const checkedSprite = new Phaser.GameObjects.Sprite(\n        gameManager,\n        buttonPositions[index][0],\n        buttonPositions[index][1],\n        ImageAssets.talkOptCheck.key\n      );\n\n      const isTriggeredTopic =\n        !!button.interactionId &&\n        GameGlobalAPI.getInstance().hasTriggeredInteraction(button.interactionId);\n\n      if (isTriggeredTopic) {\n        talkMenuContainer.add(checkedSprite);\n      }\n    });\n\n    const backButton = new CommonBackButton(\n      gameManager,\n      () => GameGlobalAPI.getInstance().popPhase(),\n      0,\n      0,\n      gameManager.soundManager\n    );\n    talkMenuContainer.add(backButton);\n    return talkMenuContainer;\n  }\n\n  private getTalkTopicButtons(dialogueIds: ItemId[]) {\n    return dialogueIds.map(dialogueId => {\n      const dialogue = mandatory(GameGlobalAPI.getInstance().getDialogue(dialogueId)) as Dialogue;\n      return {\n        text: dialogue.title,\n        callback: async () => {\n          GameGlobalAPI.getInstance().triggerInteraction(dialogueId);\n          await GameGlobalAPI.getInstance().showDialogue(dialogueId);\n        },\n        interactionId: dialogueId\n      };\n    });\n  }\n\n  private createTalkTopicButton(text: string, xPos: number, yPos: number, callback: any) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    return createButton(\n      gameManager,\n      {\n        assetKey: ImageAssets.talkOptButton.key,\n        message: text,\n        textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.2 },\n        bitMapTextStyle: talkButtonStyle,\n        onUp: callback,\n        onHoverEffect: false\n      },\n      gameManager.soundManager\n    ).setPosition(xPos, yPos);\n  }\n\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addContainerToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, -screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps\n    });\n  }\n\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n}\n\nexport default GameModeTalk;\n","import GameActionManager from 'src/features/game/action/GameActionManager';\nimport GameBBoxManager from 'src/features/game/boundingBoxes/GameBoundingBoxManager';\nimport { GameCheckpoint } from 'src/features/game/chapter/GameChapterTypes';\nimport GameCharacterManager from 'src/features/game/character/GameCharacterManager';\nimport GameDialogueManager from 'src/features/game/dialogue/GameDialogueManager';\nimport { blackFade } from 'src/features/game/effects/FadeEffect';\nimport { addLoadingScreen } from 'src/features/game/effects/LoadingScreen';\nimport GameLayerManager from 'src/features/game/layer/GameLayerManager';\nimport { LocationId } from 'src/features/game/location/GameMapTypes';\nimport GameObjectManager from 'src/features/game/objects/GameObjectManager';\nimport GamePopUpManager from 'src/features/game/popUp/GamePopUpManager';\nimport GameStateManager from 'src/features/game/state/GameStateManager';\nimport GameUserStateManager from 'src/features/game/state/GameUserStateManager';\nimport {\n  AccountInfo,\n  getSourceAcademyGame,\n  SourceAcademyGame\n} from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\nimport { getStorySimulatorGame } from 'src/pages/academy/storySimulator/subcomponents/storySimulatorGame';\n\nimport GameBackgroundManager from '../../background/GameBackgroundManager';\nimport GameCollectiblesManager from '../../collectibles/GameCollectiblesManager';\nimport { Constants } from '../../commons/CommonConstants';\nimport GameEscapeManager from '../../escape/GameEscapeManager';\nimport GameInputManager from '../../input/GameInputManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport GamePhaseManager from '../../phase/GamePhaseManager';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport GameSaveManager from '../../save/GameSaveManager';\nimport { FullSaveState } from '../../save/GameSaveTypes';\nimport GameSoundManager from '../../sound/GameSoundManager';\nimport { mandatory, toS3Path } from '../../utils/GameUtils';\nimport GameGlobalAPI from './GameGlobalAPI';\nimport { createGamePhases } from './GameManagerHelper';\n\ntype GameManagerProps = {\n  fullSaveState: FullSaveState;\n  gameCheckpoint: GameCheckpoint;\n  continueGame: boolean;\n  chapterNum: number;\n  checkpointNum: number;\n  isStorySimulator: boolean;\n};\n\nclass GameManager extends Phaser.Scene {\n  public currentLocationId: LocationId;\n  public parentGame: SourceAcademyGame | undefined;\n  public isStorySimulator: boolean;\n\n  private currentCheckpoint: GameCheckpoint | undefined;\n  private accountInfo: AccountInfo | undefined;\n  private fullSaveState: FullSaveState | undefined;\n  private continueGame: boolean;\n  private chapterNum: number;\n  private checkpointNum: number;\n\n  public layerManager: GameLayerManager;\n  public stateManager: GameStateManager;\n  public objectManager: GameObjectManager;\n  public characterManager: GameCharacterManager;\n  public dialogueManager: GameDialogueManager;\n  public actionManager: GameActionManager;\n  public userStateManager: GameUserStateManager;\n  public boundingBoxManager: GameBBoxManager;\n  public popUpManager: GamePopUpManager;\n  public saveManager: GameSaveManager;\n  public soundManager: GameSoundManager;\n  public escapeManager: GameEscapeManager;\n  public phaseManager: GamePhaseManager;\n  public backgroundManager: GameBackgroundManager;\n  public inputManager: GameInputManager;\n  public collectibleManager: GameCollectiblesManager;\n\n  constructor() {\n    super('GameManager');\n    this.currentCheckpoint = undefined;\n    this.fullSaveState = undefined;\n    this.continueGame = false;\n    this.chapterNum = Constants.nullSequenceNumber;\n    this.checkpointNum = Constants.nullSequenceNumber;\n    this.currentLocationId = Constants.nullInteractionId;\n    this.isStorySimulator = false;\n\n    this.layerManager = new GameLayerManager();\n    this.stateManager = new GameStateManager();\n    this.characterManager = new GameCharacterManager();\n    this.objectManager = new GameObjectManager();\n    this.dialogueManager = new GameDialogueManager();\n    this.actionManager = new GameActionManager();\n    this.userStateManager = new GameUserStateManager();\n    this.boundingBoxManager = new GameBBoxManager();\n    this.popUpManager = new GamePopUpManager();\n    this.saveManager = new GameSaveManager();\n    this.soundManager = new GameSoundManager();\n    this.escapeManager = new GameEscapeManager();\n    this.phaseManager = new GamePhaseManager();\n    this.backgroundManager = new GameBackgroundManager();\n    this.inputManager = new GameInputManager();\n    this.collectibleManager = new GameCollectiblesManager();\n  }\n\n  public init({\n    gameCheckpoint,\n    fullSaveState,\n    continueGame,\n    chapterNum,\n    checkpointNum,\n    isStorySimulator\n  }: GameManagerProps) {\n    this.isStorySimulator = isStorySimulator;\n    this.parentGame = isStorySimulator ? getStorySimulatorGame() : getSourceAcademyGame();\n    this.currentCheckpoint = gameCheckpoint;\n    this.fullSaveState = fullSaveState;\n    this.continueGame = continueGame;\n    this.chapterNum = chapterNum;\n    this.checkpointNum = checkpointNum;\n    this.initialiseManagers();\n  }\n\n  private initialiseManagers() {\n    this.layerManager = new GameLayerManager();\n    this.stateManager = new GameStateManager();\n    this.characterManager = new GameCharacterManager();\n    this.objectManager = new GameObjectManager();\n    this.dialogueManager = new GameDialogueManager();\n    this.actionManager = new GameActionManager();\n    this.userStateManager = new GameUserStateManager();\n    this.boundingBoxManager = new GameBBoxManager();\n    this.popUpManager = new GamePopUpManager();\n    this.saveManager = new GameSaveManager();\n    this.soundManager = new GameSoundManager();\n    this.escapeManager = new GameEscapeManager();\n    this.phaseManager = new GamePhaseManager();\n    this.backgroundManager = new GameBackgroundManager();\n    this.inputManager = new GameInputManager();\n    this.collectibleManager = new GameCollectiblesManager();\n  }\n\n  //////////////////////\n  //    Preload       //\n  //////////////////////\n\n  public preload() {\n    GameGlobalAPI.getInstance().setGameManager(this);\n    addLoadingScreen(this);\n    this.loadGameState();\n\n    this.currentLocationId =\n      this.saveManager.getLoadedLocation() || this.getCurrentCheckpoint().startingLoc;\n    this.stateManager.initialise(this);\n    this.userStateManager.initialise(this);\n    this.soundManager.initialise(this, this.parentGame || getSourceAcademyGame());\n    this.dialogueManager.initialise(this);\n    this.characterManager.initialise(this);\n    this.actionManager.initialise(this);\n    this.inputManager.initialise(this);\n    this.boundingBoxManager.initialise();\n    this.objectManager.initialise();\n    this.layerManager.initialise(this);\n    this.collectibleManager.initialise(this, this.phaseManager);\n    this.phaseManager.initialise(\n      createGamePhases(this.escapeManager, this.collectibleManager),\n      this.inputManager\n    );\n    this.escapeManager.initialise(this, this.phaseManager, this.saveManager, this.isStorySimulator);\n\n    this.soundManager.loadSounds(this.getCurrentCheckpoint().map.getSoundAssets());\n    this.phaseManager.setCallback(\n      async (newPhase: GamePhaseType) => await this.checkpointTransition(newPhase)\n    );\n    this.preloadLocationsAssets(this.getCurrentCheckpoint());\n    this.bindKeyboardTriggers();\n  }\n\n  private loadGameState() {\n    this.accountInfo = this.getParentGame().getAccountInfo();\n    if (this.isStorySimulator && this.accountInfo.role === 'staff') {\n      this.saveManager.initialiseForStaff(this.accountInfo);\n    } else if (!this.isStorySimulator && this.accountInfo.role === 'student') {\n      this.saveManager.initialiseForGame(\n        this.accountInfo,\n        this.fullSaveState,\n        this.chapterNum,\n        this.checkpointNum,\n        this.continueGame\n      );\n    } else {\n      throw new Error('Mismatch of roles');\n    }\n  }\n\n  private preloadLocationsAssets(chapter: GameCheckpoint) {\n    chapter.map.getMapAssets().forEach((assetPath, assetKey) => {\n      this.load.image(assetKey, toS3Path(assetPath));\n    });\n  }\n\n  //////////////////////\n  // Location Helpers //\n  //////////////////////\n\n  public async create() {\n    await this.userStateManager.loadAssessments();\n    this.changeLocationTo(this.currentLocationId, true);\n    await GameGlobalAPI.getInstance().saveGame();\n  }\n\n  private async renderLocation(locationId: LocationId, startAction: boolean) {\n    const gameLocation = GameGlobalAPI.getInstance().getLocationAtId(locationId);\n    await this.soundManager.renderBackgroundMusic(gameLocation.bgmKey);\n\n    this.backgroundManager.renderBackgroundLayerContainer(locationId);\n    this.objectManager.renderObjectsLayerContainer(locationId);\n    this.boundingBoxManager.renderBBoxLayerContainer(locationId);\n    this.characterManager.renderCharacterLayerContainer(locationId);\n    this.layerManager.showLayer(Layer.Character);\n\n    await this.phaseManager.swapPhase(GamePhaseType.Sequence);\n\n    // Execute start actions, notif, then cutscene\n    if (startAction) {\n      await this.actionManager.processGameActions(\n        this.getCurrentCheckpoint().map.getStartActions()\n      );\n    }\n\n    if (!this.stateManager.hasTriggeredInteraction(locationId)) {\n      await GameGlobalAPI.getInstance().bringUpUpdateNotif(gameLocation.name);\n    }\n    await this.actionManager.processGameActions(gameLocation.actionIds);\n\n    await this.phaseManager.swapPhase(GamePhaseType.Menu);\n  }\n\n  public async changeLocationTo(locationId: LocationId, startAction: boolean = false) {\n    this.currentLocationId = locationId;\n\n    await blackFade(this, 300, 500, async () => {\n      await this.layerManager.clearAllLayers();\n      await this.renderLocation(locationId, startAction);\n    });\n\n    // Update state after location is fully rendered\n    this.stateManager.triggerInteraction(locationId);\n  }\n\n  private bindKeyboardTriggers() {\n    this.inputManager.registerKeyboardListener(\n      Phaser.Input.Keyboard.KeyCodes.ESC,\n      'up',\n      async () => {\n        if (this.phaseManager.isCurrentPhase(GamePhaseType.EscapeMenu)) {\n          await this.phaseManager.popPhase();\n        } else {\n          await this.phaseManager.pushPhase(GamePhaseType.EscapeMenu);\n        }\n      }\n    );\n    this.inputManager.registerKeyboardListener(Phaser.Input.Keyboard.KeyCodes.I, 'up', async () => {\n      if (this.phaseManager.isCurrentPhase(GamePhaseType.CollectibleMenu)) {\n        await this.phaseManager.popPhase();\n      } else {\n        await this.phaseManager.pushPhase(GamePhaseType.CollectibleMenu);\n      }\n    });\n  }\n\n  public cleanUp() {\n    this.soundManager.stopCurrBgMusic();\n    this.inputManager.clearListeners();\n    this.layerManager.clearAllLayers();\n  }\n\n  public async checkpointTransition(newPhase: GamePhaseType) {\n    const transitionToNextCheckpoint =\n      newPhase === GamePhaseType.Menu && GameGlobalAPI.getInstance().isAllComplete();\n\n    // Transition to the next scene if possible\n    if (transitionToNextCheckpoint) {\n      await this.actionManager.processGameActions(this.getCurrentCheckpoint().map.getEndActions());\n      this.cleanUp();\n      if (GameGlobalAPI.getInstance().isStorySimulator()) {\n        this.scene.start('StorySimulatorMenu');\n      } else {\n        this.scene.start('CheckpointTransition');\n      }\n    }\n  }\n\n  public getCurrentCheckpoint = () => mandatory(this.currentCheckpoint) as GameCheckpoint;\n  public getAccountInfo = () => mandatory(this.accountInfo) as AccountInfo;\n  private getParentGame = () => mandatory(this.parentGame) as SourceAcademyGame;\n}\n\nexport default GameManager;\n","import GameCollectiblesManager from '../../collectibles/GameCollectiblesManager';\nimport GameEscapeManager from '../../escape/GameEscapeManager';\nimport GameModeExplore from '../../mode/explore/GameModeExplore';\nimport GameModeMenu from '../../mode/menu/GameModeMenu';\nimport GameModeMove from '../../mode/move/GameModeMove';\nimport GameModeSequence from '../../mode/sequence/GameModeSequence';\nimport GameModeTalk from '../../mode/talk/GameModeTalk';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\n\nexport const createGamePhases = (\n  escapeMenu: GameEscapeManager,\n  collectibleMenu: GameCollectiblesManager\n) => {\n  return new Map([\n    [GamePhaseType.Menu, new GameModeMenu()],\n    [GamePhaseType.Move, new GameModeMove()],\n    [GamePhaseType.Explore, new GameModeExplore()],\n    [GamePhaseType.Talk, new GameModeTalk()],\n    [GamePhaseType.Sequence, new GameModeSequence()],\n    [GamePhaseType.None, new GameModeSequence()],\n    [GamePhaseType.EscapeMenu, escapeMenu],\n    [GamePhaseType.CollectibleMenu, collectibleMenu]\n  ]);\n};\n","export const roomDefaultCode = `\nimport { prepend_remote_url, get_screen_width, get_screen_height, load_image, create_image, create_text, create_rect, add, set_display_size, set_alpha, set_origin } from 'game';\n\nfunction preload() {\n    load_image(\"galaxy\", prepend_remote_url(\"/locations/galaxy/normal.png\"));\n}\n\nfunction create() {\n    const width = get_screen_width();\n    const height = get_screen_height();\n    const centre_x = width / 2;\n    const centre_y = height / 2;\n\n    const image = create_image(centre_x, centre_y, \"galaxy\");\n    const image_resized = set_display_size(image, width, height);\n\n    const black_tint = create_rect(centre_x, centre_y, width, height, 0x000011);\n    const black_tint_alpha = set_alpha(black_tint, 0.5);\n\n    const text = create_text(centre_x, centre_y, \"Unable to fetch mission!\");\n    const text_repos = set_origin(text, 0.5, 0.5);\n\n    add(image_resized);\n    add(black_tint_alpha);\n    add(text_repos);\n}\n\nfunction update() {}\n`;\n","import { Assessment, IProgrammingQuestion } from 'src/commons/assessment/AssessmentTypes';\nimport { getAssessment } from 'src/commons/sagas/RequestsSaga';\nimport { AccountInfo } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport GameCollectiblesManager from '../../collectibles/GameCollectiblesManager';\nimport GameEscapeManager from '../../escape/GameEscapeManager';\nimport GameModeSequence from '../../mode/sequence/GameModeSequence';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport { roomDefaultCode } from './RoomPreviewConstants';\n\nexport async function getRoomPreviewCode(accInfo: AccountInfo) {\n  const roomMissionId = getRoomMissionId();\n  const mission = await getAssessment(roomMissionId, {\n    accessToken: accInfo.accessToken,\n    refreshToken: accInfo.refreshToken\n  });\n  const studentCode = getStudentRoomCode(mission);\n  return studentCode;\n}\n\nfunction getRoomMissionId() {\n  // TODO: Change to non-hardcode\n  return 405;\n}\n\nfunction getStudentRoomCode(mission: Assessment | null) {\n  if (mission) {\n    const progQn = mission.questions[0] as IProgrammingQuestion;\n    const answer = progQn.answer;\n    return answer ? (answer as string) : progQn.solutionTemplate;\n  }\n  return roomDefaultCode;\n}\n\nexport const createCMRGamePhases = (\n  escapeMenu: GameEscapeManager,\n  collectibleMenu: GameCollectiblesManager\n) => {\n  return new Map([\n    [GamePhaseType.None, new GameModeSequence()],\n    [GamePhaseType.EscapeMenu, escapeMenu],\n    [GamePhaseType.CollectibleMenu, collectibleMenu]\n  ]);\n};\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { HexColor } from '../../utils/StyleUtils';\n\nexport const mainMenuStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  fill: HexColor.lightBlue,\n  align: Phaser.GameObjects.BitmapText.ALIGN_RIGHT\n};\n\nconst bannerShow = 200;\nconst bannerHide = 300;\n\nconst mainMenuConstants = {\n  optionsText: {\n    chapterSelect: 'Play Chapter',\n    studentRoom: 'Go to My Room',\n    collectible: 'Achievements',\n    settings: 'Settings'\n  },\n  buttonYSpace: screenSize.y * 0.5,\n  optXOffset: 80,\n  textXOffset: 600,\n  bannerHide: bannerHide,\n  bannerShow: bannerShow,\n  onFocusOptTween: {\n    x: screenCenter.x + bannerShow,\n    duration: 200,\n    ease: 'Power2'\n  },\n  outFocusOptTween: {\n    x: screenCenter.x + bannerHide,\n    duration: 200,\n    ease: 'Power2'\n  }\n};\n\nexport default mainMenuConstants;\n","import GameSoundManager from 'src/features/game/sound/GameSoundManager';\nimport { getSourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport FontAssets from '../../assets/FontAssets';\nimport ImageAssets from '../../assets/ImageAssets';\nimport SoundAssets from '../../assets/SoundAssets';\nimport { Constants, screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { loadData } from '../../save/GameSaveRequests';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { toS3Path } from '../../utils/GameUtils';\nimport { calcTableFormatPos } from '../../utils/StyleUtils';\nimport { getRoomPreviewCode } from '../roomPreview/RoomPreviewHelper';\nimport mainMenuConstants, { mainMenuStyle } from './MainMenuConstants';\n\nclass MainMenu extends Phaser.Scene {\n  private layerManager: GameLayerManager;\n  private soundManager: GameSoundManager;\n  private roomCode: string;\n\n  constructor() {\n    super('MainMenu');\n\n    this.layerManager = new GameLayerManager();\n    this.soundManager = new GameSoundManager();\n    this.roomCode = Constants.nullInteractionId;\n  }\n\n  public preload() {\n    this.preloadAssets();\n    this.layerManager.initialise(this);\n    this.soundManager.initialise(this, getSourceAcademyGame());\n    this.soundManager.loadSoundAssetMap(SoundAssets);\n    addLoadingScreen(this);\n  }\n\n  public async create() {\n    const accountInfo = getSourceAcademyGame().getAccountInfo();\n    if (accountInfo.role === 'staff') {\n      console.log('Staff do not have accounts');\n      return;\n    }\n    this.renderBackground();\n    this.renderOptionButtons();\n\n    this.roomCode = await getRoomPreviewCode(accountInfo);\n    const fullSaveState = await loadData(accountInfo);\n    const volume = fullSaveState.userState ? fullSaveState.userState.settings.volume : 1;\n    this.soundManager.playBgMusic(SoundAssets.galacticHarmony.key, volume);\n  }\n\n  private preloadAssets() {\n    Object.values(ImageAssets).forEach(asset => this.load.image(asset.key, toS3Path(asset.path)));\n    Object.values(FontAssets).forEach(asset =>\n      this.load.bitmapFont(asset.key, asset.pngPath, asset.fntPath)\n    );\n  }\n\n  private renderBackground() {\n    const backgroundImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.mainMenuBackground.key\n    );\n    backgroundImg.setDisplaySize(screenSize.x, screenSize.y);\n\n    this.layerManager.addToLayer(Layer.Background, backgroundImg);\n  }\n\n  private renderOptionButtons() {\n    const optionsContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    const buttons = this.getOptionButtons();\n\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      maxYSpace: mainMenuConstants.buttonYSpace,\n      numItemLimit: 1\n    });\n\n    optionsContainer.add(\n      buttons.map((button, index) =>\n        this.createOptionButton(\n          button.text,\n          buttonPositions[index][0] + mainMenuConstants.bannerHide,\n          buttonPositions[index][1],\n          button.callback\n        )\n      )\n    );\n\n    this.layerManager.addToLayer(Layer.UI, optionsContainer);\n  }\n\n  private createOptionButton(text: string, xPos: number, yPos: number, callback: any) {\n    const tweenOnHover = (target: Phaser.GameObjects.Container) => {\n      this.tweens.add({\n        targets: target,\n        ...mainMenuConstants.onFocusOptTween\n      });\n    };\n    const tweenOffHover = (target: Phaser.GameObjects.Container) => {\n      this.tweens.add({\n        targets: target,\n        ...mainMenuConstants.outFocusOptTween\n      });\n    };\n    const optButton: Phaser.GameObjects.Container = createButton(\n      this,\n      {\n        assetKey: ImageAssets.mainMenuOptBanner.key,\n        message: text,\n        textConfig: { x: mainMenuConstants.textXOffset, y: 0, oriX: 1.0, oriY: 0.1 },\n        bitMapTextStyle: mainMenuStyle,\n        onUp: callback,\n        onHover: () => tweenOnHover(optButton),\n        onOut: () => tweenOffHover(optButton),\n        onHoverEffect: false\n      },\n      this.soundManager\n    ).setPosition(xPos, yPos);\n    return optButton;\n  }\n\n  private getOptionButtons() {\n    return [\n      {\n        text: mainMenuConstants.optionsText.chapterSelect,\n        callback: () => {\n          this.layerManager.clearAllLayers();\n          this.scene.start('ChapterSelect');\n        }\n      },\n      {\n        text: mainMenuConstants.optionsText.collectible,\n        callback: () => {\n          this.layerManager.clearAllLayers();\n          this.scene.start('MyRoom');\n        }\n      },\n      {\n        text: mainMenuConstants.optionsText.studentRoom,\n        callback: () => {\n          this.layerManager.clearAllLayers();\n          this.scene.start('RoomPreview', { studentCode: this.roomCode });\n        }\n      },\n      {\n        text: mainMenuConstants.optionsText.settings,\n        callback: () => {\n          this.layerManager.clearAllLayers();\n          this.scene.start('Settings');\n        }\n      }\n    ];\n  }\n}\n\nexport default MainMenu;\n","import CommonBackButton from '../../commons/CommonBackButton';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\n\nclass MyRoom extends Phaser.Scene {\n  private layerManager: GameLayerManager;\n\n  constructor() {\n    super('MyRoom');\n    this.layerManager = new GameLayerManager();\n  }\n\n  public preload() {\n    addLoadingScreen(this);\n    this.layerManager.initialise(this);\n  }\n\n  public create() {\n    this.renderMyRoom();\n  }\n\n  private renderMyRoom() {\n    const backButton = new CommonBackButton(\n      this,\n      () => {\n        this.layerManager.clearAllLayers();\n        this.scene.start('MainMenu');\n      },\n      0,\n      0\n    );\n    this.layerManager.addToLayer(Layer.UI, backButton);\n  }\n}\n\nexport default MyRoom;\n","import { Context, runInContext } from 'js-slang';\nimport { createContext } from 'src/commons/utils/JsSlangHelper';\nimport { loadImage, loadSound } from 'src/features/game/utils/LoaderUtils';\nimport { getSourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport GameCollectiblesManager from '../../collectibles/GameCollectiblesManager';\nimport { Constants, screenSize } from '../../commons/CommonConstants';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameEscapeManager from '../../escape/GameEscapeManager';\nimport GameInputManager from '../../input/GameInputManager';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport GamePhaseManager from '../../phase/GamePhaseManager';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport GameSaveManager from '../../save/GameSaveManager';\nimport { loadData } from '../../save/GameSaveRequests';\nimport GameSoundManager from '../../sound/GameSoundManager';\nimport { roomDefaultCode } from './RoomPreviewConstants';\nimport { createCMRGamePhases } from './RoomPreviewHelper';\n\ntype RoomPreviewProps = {\n  studentCode: string;\n};\n\nexport default class RoomPreview extends Phaser.Scene {\n  public layerManager: GameLayerManager;\n  public soundManager: GameSoundManager;\n  public inputManager: GameInputManager;\n\n  private phaseManager: GamePhaseManager;\n  private saveManager: GameSaveManager;\n  private escapeManager: GameEscapeManager;\n  private collectibleManager: GameCollectiblesManager;\n  private studentCode: string;\n  private preloadImageMap: Map<string, string>;\n  private preloadSoundMap: Map<string, string>;\n\n  constructor() {\n    super('RoomPreview');\n    this.preloadImageMap = new Map<string, string>();\n    this.preloadSoundMap = new Map<string, string>();\n    this.layerManager = new GameLayerManager();\n    this.phaseManager = new GamePhaseManager();\n    this.saveManager = new GameSaveManager();\n    this.soundManager = new GameSoundManager();\n    this.inputManager = new GameInputManager();\n    this.escapeManager = new GameEscapeManager();\n    this.collectibleManager = new GameCollectiblesManager();\n    this.studentCode = roomDefaultCode;\n  }\n\n  public init({ studentCode }: RoomPreviewProps) {\n    this.studentCode = studentCode;\n    this.layerManager = new GameLayerManager();\n    this.phaseManager = new GamePhaseManager();\n    this.saveManager = new GameSaveManager();\n    this.soundManager = new GameSoundManager();\n    this.inputManager = new GameInputManager();\n    this.escapeManager = new GameEscapeManager();\n    this.collectibleManager = new GameCollectiblesManager();\n  }\n\n  public preload() {\n    addLoadingScreen(this);\n    this.soundManager.initialise(this, getSourceAcademyGame());\n    this.layerManager.initialise(this);\n    this.inputManager.initialise(this);\n    this.collectibleManager.initialise(this, this.phaseManager);\n    this.phaseManager.initialise(\n      createCMRGamePhases(this.escapeManager, this.collectibleManager),\n      this.inputManager\n    );\n    this.escapeManager.initialise(this, this.phaseManager, this.saveManager, false);\n    this.bindKeyboardTriggers();\n  }\n\n  public async create() {\n    const accountInfo = getSourceAcademyGame().getAccountInfo();\n    const fullSaveState = await loadData(accountInfo);\n    this.saveManager.initialiseForSettings(accountInfo, fullSaveState);\n\n    await this.eval(`preload();`);\n\n    await Promise.all(\n      Array.from(this.preloadImageMap).map(async ([key, path]) => {\n        await loadImage(this, key, path);\n      })\n    );\n\n    await Promise.all(\n      Array.from(this.preloadSoundMap).map(async ([key, path]) => {\n        await loadSound(this, key, path);\n      })\n    );\n\n    await this.eval(`create();`);\n    this.soundManager.stopCurrBgMusic();\n  }\n\n  public update() {\n    this.eval(`\\nupdate();`);\n  }\n\n  private async eval(append: string) {\n    const context: Context = createContext(4, [], {}, 'gpu', {\n      scene: this,\n      phaser: Phaser,\n      preloadImageMap: this.preloadImageMap,\n      preloadSoundMap: this.preloadSoundMap,\n      layerManager: this.layerManager,\n      layerTypes: Layer,\n      remotePath: Constants.assetsFolder,\n      screenSize: screenSize\n    });\n    context.externalContext = 'playground';\n    await runInContext(this.studentCode + append, context);\n  }\n\n  private bindKeyboardTriggers() {\n    this.inputManager.registerKeyboardListener(\n      Phaser.Input.Keyboard.KeyCodes.ESC,\n      'up',\n      async () => {\n        if (this.phaseManager.isCurrentPhase(GamePhaseType.EscapeMenu)) {\n          await this.phaseManager.popPhase();\n        } else {\n          await this.phaseManager.pushPhase(GamePhaseType.EscapeMenu);\n        }\n      }\n    );\n    this.inputManager.registerKeyboardListener(Phaser.Input.Keyboard.KeyCodes.I, 'up', async () => {\n      if (this.phaseManager.isCurrentPhase(GamePhaseType.CollectibleMenu)) {\n        await this.phaseManager.popPhase();\n      } else {\n        await this.phaseManager.pushPhase(GamePhaseType.CollectibleMenu);\n      }\n    });\n  }\n\n  public cleanUp() {\n    this.soundManager.stopCurrBgMusic();\n    this.inputManager.clearListeners();\n    this.layerManager.clearAllLayers();\n  }\n}\n","import { getSourceAcademyGame } from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport CommonRadioButton from '../../commons/CommonRadioButton';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport GameSaveManager from '../../save/GameSaveManager';\nimport { loadData } from '../../save/GameSaveRequests';\nimport GameSoundManager from '../../sound/GameSoundManager';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport settingsConstants, {\n  applySettingsTextStyle,\n  optionHeaderTextStyle,\n  optionTextStyle\n} from './SettingsConstants';\n\nclass Settings extends Phaser.Scene {\n  private volumeRadioButtons: CommonRadioButton | undefined;\n  private layerManager: GameLayerManager;\n  private settingsSaveManager: GameSaveManager;\n  private soundManager: GameSoundManager;\n\n  constructor() {\n    super('Settings');\n    this.layerManager = new GameLayerManager();\n    this.volumeRadioButtons = undefined;\n    this.settingsSaveManager = new GameSaveManager();\n    this.soundManager = new GameSoundManager();\n  }\n\n  public preload() {\n    this.layerManager.initialise(this);\n    this.soundManager.initialise(this, getSourceAcademyGame());\n  }\n\n  public async create() {\n    this.renderBackground();\n    const accountInfo = getSourceAcademyGame().getAccountInfo();\n    const fullSaveState = await loadData(accountInfo);\n    this.settingsSaveManager.initialiseForSettings(accountInfo, fullSaveState);\n    this.renderOptions();\n  }\n\n  private renderBackground() {\n    const background = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.settingBackground.key\n    );\n\n    const settingBgImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.settingBanner.key\n    );\n    this.layerManager.addToLayer(Layer.Background, background);\n    this.layerManager.addToLayer(Layer.Background, settingBgImg);\n  }\n\n  private renderOptions() {\n    this.renderVolumeOptions();\n    const applySettingsButton = createButton(\n      this,\n      {\n        assetKey: ImageAssets.mediumButton.key,\n        message: 'Apply Settings',\n        textConfig: { x: 0, y: 0, oriX: 0.33, oriY: 0.85 },\n        bitMapTextStyle: applySettingsTextStyle,\n        onUp: () => this.applySettings(this.volumeRadioButtons)\n      },\n      this.soundManager\n    ).setPosition(screenCenter.x, screenSize.y * 0.925);\n\n    const backButton = new CommonBackButton(\n      this,\n      () => {\n        this.layerManager.clearAllLayers();\n        this.scene.start('MainMenu');\n      },\n      0,\n      0,\n      this.soundManager\n    );\n    this.layerManager.addToLayer(Layer.UI, applySettingsButton);\n    this.layerManager.addToLayer(Layer.UI, backButton);\n  }\n\n  private renderVolumeOptions() {\n    const volumeBg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      settingsConstants.volUnderlineYPos,\n      ImageAssets.settingOption.key\n    );\n    const volumeText = createBitmapText(\n      this,\n      'Volume',\n      settingsConstants.volTextXpos,\n      settingsConstants.volTextYPos,\n      optionHeaderTextStyle\n    ).setOrigin(0.5, 0.25);\n    const userVol = this.settingsSaveManager.getLoadedUserState().settings.volume;\n    const userVolIdx = settingsConstants.volContainerOpts.findIndex(\n      value => parseFloat(value) === userVol\n    );\n    this.volumeRadioButtons = new CommonRadioButton(\n      this,\n      {\n        choices: settingsConstants.volContainerOpts,\n        defaultChoiceIdx: userVolIdx,\n        maxXSpace: settingsConstants.optXSpace,\n        choiceTextConfig: { x: 0, y: -50, oriX: 0.5, oriY: 0.25 },\n        bitmapTextStyle: optionTextStyle\n      },\n      settingsConstants.optXPos,\n      settingsConstants.volOptYPos\n    );\n    this.layerManager.addToLayer(Layer.UI, volumeBg);\n    this.layerManager.addToLayer(Layer.UI, volumeText);\n    this.layerManager.addToLayer(Layer.UI, this.volumeRadioButtons);\n  }\n\n  public async applySettings(volume?: CommonRadioButton) {\n    if (volume) {\n      // Save settings\n      const volumeVal = parseFloat(volume.getChosenChoice());\n      await this.settingsSaveManager.saveSettings({ volume: volumeVal });\n\n      // Apply settings\n      const newUserSetting = this.settingsSaveManager.getLoadedUserState();\n      this.soundManager.applyUserSettings(newUserSetting);\n    }\n  }\n}\n\nexport default Settings;\n","import * as Phaser from 'phaser';\nimport { SoundAsset } from 'src/features/game/assets/AssetsTypes';\nimport { AssetKey } from 'src/features/game/commons/CommonTypes';\nimport ChapterSelect from 'src/features/game/scenes/chapterSelect/ChapterSelect';\nimport CheckpointTransition from 'src/features/game/scenes/checkpointTransition/CheckpointTransition';\nimport GameManager from 'src/features/game/scenes/gameManager/GameManager';\nimport MainMenu from 'src/features/game/scenes/mainMenu/MainMenu';\nimport MyRoom from 'src/features/game/scenes/myRoom/MyRoom';\nimport RoomPreview from 'src/features/game/scenes/roomPreview/RoomPreview';\nimport Settings from 'src/features/game/scenes/settings/Settings';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport StorySimMainMenu from 'src/features/storySimulator/scenes/mainMenu/MainMenu';\nimport { StorySimState } from 'src/features/storySimulator/StorySimulatorTypes';\n\nimport { screenSize } from '../../../../features/game/commons/CommonConstants';\n\nexport type AccountInfo = {\n  accessToken: string;\n  refreshToken: string;\n  role: string;\n  name: string;\n};\n\ntype StorySimulatorProps = {\n  setStorySimState: (value: React.SetStateAction<string>) => void;\n  mainMenuRef: StorySimMainMenu;\n};\n\ntype GlobalGameProps = {\n  currBgMusicKey: AssetKey | undefined;\n  soundAssetMap: Map<AssetKey, SoundAsset>;\n  accountInfo: AccountInfo | undefined;\n  storySimulatorProps?: StorySimulatorProps;\n};\n\nexport class SourceAcademyGame extends Phaser.Game {\n  public global: GlobalGameProps;\n\n  constructor(config: Phaser.Types.Core.GameConfig) {\n    super(config);\n    this.global = {\n      currBgMusicKey: undefined,\n      soundAssetMap: new Map<AssetKey, SoundAsset>(),\n      accountInfo: undefined\n    };\n  }\n\n  public stopAllSounds() {\n    this.sound.stopAll();\n  }\n\n  public setCurrBgMusicKey(key: AssetKey | undefined) {\n    this.global.currBgMusicKey = key;\n  }\n\n  public getCurrBgMusicKey() {\n    return this.global.currBgMusicKey;\n  }\n\n  public addSoundAsset(soundAsset: SoundAsset) {\n    this.global.soundAssetMap.set(soundAsset.key, soundAsset);\n  }\n\n  public clearSoundAssetMap() {\n    this.global.soundAssetMap.clear();\n  }\n\n  public getSoundAsset(key: AssetKey) {\n    return this.global.soundAssetMap.get(key);\n  }\n\n  public setAccountInfo(acc: AccountInfo | undefined) {\n    this.global.accountInfo = acc;\n  }\n\n  public getAccountInfo() {\n    return mandatory(this.global.accountInfo) as AccountInfo;\n  }\n\n  public setStorySimProps(storySimulatorProps: any) {\n    this.global.storySimulatorProps = {\n      ...this.global.storySimulatorProps,\n      ...storySimulatorProps\n    };\n  }\n\n  public setStorySimState(state: StorySimState) {\n    this.getStorySimProps().setStorySimState(state);\n  }\n\n  public getStorySimProps() {\n    return mandatory(this.global.storySimulatorProps) as StorySimulatorProps;\n  }\n}\n\nconst config = {\n  debug: true,\n  type: Phaser.WEBGL,\n  width: screenSize.x,\n  height: screenSize.y,\n  physics: {\n    default: 'arcade'\n  },\n  scale: {\n    mode: Phaser.Scale.FIT,\n    parent: 'game-display'\n  },\n  scene: [MainMenu, Settings, ChapterSelect, GameManager, CheckpointTransition, MyRoom, RoomPreview]\n};\n\nlet sourceAcademyGame: SourceAcademyGame;\nexport const getSourceAcademyGame = () => {\n  return sourceAcademyGame;\n};\n\nexport const createSourceAcademyGame = () => {\n  sourceAcademyGame = new SourceAcademyGame(config);\n};\n","import Constants from 'src/commons/utils/Constants';\nimport {\n  AccountInfo,\n  getSourceAcademyGame\n} from 'src/pages/academy/game/subcomponents/sourceAcademyGame';\n\nimport { createEmptySaveState } from './GameSaveConstants';\nimport { FullSaveState } from './GameSaveTypes';\n\nexport async function saveData(accountInfo: AccountInfo, gameState: FullSaveState) {\n  const options = {\n    method: 'PUT',\n    headers: createHeaders(accountInfo.accessToken),\n    body: JSON.stringify({\n      gameStates: {\n        collectibles: gameState,\n        completed_quests: []\n      }\n    })\n  };\n\n  const resp = await fetch(`${Constants.backendUrl}/v1/user/game_states/save`, options);\n  if (resp && resp.ok) {\n    return resp;\n  }\n  return;\n}\n\nexport async function loadData(accountInfo: AccountInfo): Promise<FullSaveState> {\n  const options = {\n    method: 'GET',\n    headers: createHeaders(accountInfo.accessToken)\n  };\n\n  const resp = await fetch(`${Constants.backendUrl}/v1/user/`, options);\n  const message = await resp.text();\n  const json = JSON.parse(message);\n\n  return json.gameStates.collectibles;\n}\n\nexport async function clearData(accountInfo: AccountInfo) {\n  const options = {\n    method: 'PUT',\n    headers: createHeaders(accountInfo.accessToken)\n  };\n\n  const resp = await fetch(`${Constants.backendUrl}/v1/user/game_states/clear`, options);\n\n  if (resp && resp.ok) {\n    alert('Game cleared!');\n    return;\n  }\n}\n\nexport async function resetData() {\n  const resp = await saveData(getSourceAcademyGame().getAccountInfo(), createEmptySaveState());\n  if (resp && resp.ok) {\n    alert('Game data reset!');\n    return;\n  }\n}\n\nfunction createHeaders(accessToken: string): Headers {\n  const headers = new Headers();\n  headers.append('Accept', 'application/json');\n  headers.append('Authorization', `Bearer ${accessToken}`);\n  headers.append('Content-Type', 'application/json');\n  return headers;\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { OverallState } from 'src/commons/application/ApplicationTypes';\nimport { resetData } from 'src/features/game/save/GameSaveRequests';\n\nimport {\n  AccountInfo,\n  createSourceAcademyGame,\n  getSourceAcademyGame\n} from './subcomponents/sourceAcademyGame';\n\nfunction Game() {\n  const session = useSelector((state: OverallState) => state.session);\n  const [isResetThere, setIsResetThere] = React.useState(false);\n  const [sessionLoaded, setSessionLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n    createSourceAcademyGame();\n    return () => {\n      getSourceAcademyGame().stopAllSounds();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (sessionLoaded || !session) {\n      return;\n    }\n\n    getSourceAcademyGame().setAccountInfo({\n      accessToken: session.accessToken,\n      refreshToken: session.refreshToken,\n      name: session.name,\n      role: session.role\n    } as AccountInfo);\n\n    if (session.name === 'Test Student') {\n      setIsResetThere(true);\n    }\n\n    setSessionLoaded(true);\n  }, [sessionLoaded, session]);\n\n  return (\n    <>\n      <div id=\"game-display\"></div>\n      {isResetThere && (\n        <button\n          onClick={async () => {\n            await resetData();\n          }}\n        >\n          Reset\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default Game;\n","import { Classes } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport controlButton from '../../../../commons/ControlButton';\nimport { filterNotificationsBySubmission } from '../../../../commons/notificationBadge/NotificationBadgeHelper';\nimport { NotificationFilterFunction } from '../../../../commons/notificationBadge/NotificationBadgeTypes';\nimport { GradingOverviewWithNotifications } from '../../../../features/grading/GradingTypes';\n\ntype EditGradingCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n};\n\ntype StateProps = {\n  data: GradingOverviewWithNotifications;\n};\n\n/**\n * Used to render a link in the table that displays GradingOverviews.\n * This is a fully fledged component (not SFC) by specification in\n * ag-grid.\n *\n * See {@link https://www.ag-grid.com/example-react-dynamic}\n */\nclass GradingEditGradingCell extends React.Component<EditGradingCellProps, {}> {\n  public render() {\n    return (\n      <NavLink\n        to={`/academy/grading/${this.props.data.submissionId}`}\n        activeClassName={Classes.ACTIVE}\n      >\n        {controlButton(\n          '',\n          IconNames.ANNOTATION,\n          () =>\n            this.props.handleAcknowledgeNotifications(\n              filterNotificationsBySubmission(this.props.data.submissionId)\n            ),\n          { fullWidth: true }\n        )}\n      </NavLink>\n    );\n  }\n}\n\nexport default GradingEditGradingCell;\n","import { Position, Tooltip } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { GradingCellProps } from '../../../../features/grading/GradingTypes';\n\n/**\n * Used to render the submission grade details in the table that displays GradingOverviews.\n * This is a fully fledged component (not SFC) by specification in\n * ag-grid.\n *\n * See {@link https://www.ag-grid.com/example-react-dynamic}\n */\nclass GradingGradeCell extends React.Component<GradingCellProps, {}> {\n  /** Component to render in table - marks */\n  public render() {\n    if (this.props.data.maxGrade) {\n      const tooltip = `Initial Grade: ${this.props.data.initialGrade}\n        (${this.props.data.gradeAdjustment >= 0 ? '+' : ''}${\n        this.props.data.gradeAdjustment\n      } adj.)`;\n      return (\n        <div>\n          <Tooltip content={tooltip} position={Position.LEFT} hoverOpenDelay={10} lazy={true}>\n            {`${this.props.data.currentGrade} / ${this.props.data.maxGrade}`}\n          </Tooltip>\n        </div>\n      );\n    } else {\n      return <div>N/A</div>;\n    }\n  }\n}\n\nexport default GradingGradeCell;\n","import { Icon, IconName, Intent, Position, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { GradingStatuses } from '../../../../commons/assessment/AssessmentTypes';\nimport { GradingCellProps } from '../../../../features/grading/GradingTypes';\n\n/**\n * Used to render the submission grading status details in the table that displays GradingOverviews.\n * This is a fully fledged component (not SFC) by specification in\n * ag-grid.\n *\n * See {@link https://www.ag-grid.com/example-react-dynamic}\n */\nclass GradingStatusCell extends React.Component<GradingCellProps, {}> {\n  /** Component to render in table - grading status */\n  public render() {\n    const gradingStatus = this.props.data.gradingStatus;\n    let iconName: IconName;\n    let tooltip: string;\n    let intent: Intent;\n\n    switch (gradingStatus) {\n      case GradingStatuses.graded:\n        iconName = IconNames.TICK;\n        tooltip = `Fully graded: ${this.props.data.gradedCount} of\n          ${this.props.data.questionCount}`;\n        intent = Intent.SUCCESS;\n        break;\n      case GradingStatuses.grading:\n        iconName = IconNames.TIME;\n        tooltip = `Partially graded: ${this.props.data.gradedCount} of\n          ${this.props.data.questionCount}`;\n        intent = Intent.WARNING;\n        break;\n      case GradingStatuses.none:\n        iconName = IconNames.CROSS;\n        tooltip = `Not graded: ${this.props.data.gradedCount} of\n          ${this.props.data.questionCount}`;\n        intent = Intent.DANGER;\n        break;\n      default:\n        iconName = IconNames.DISABLE;\n        tooltip = 'Not applicable';\n        intent = Intent.PRIMARY;\n    }\n\n    return (\n      <div>\n        <Tooltip content={tooltip} position={Position.LEFT} hoverOpenDelay={10} lazy={true}>\n          <Icon icon={iconName} intent={intent} />\n        </Tooltip>\n      </div>\n    );\n  }\n}\n\nexport default GradingStatusCell;\n","import { Alert, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Role } from '../../../../commons/application/ApplicationTypes';\nimport controlButton from '../../../../commons/ControlButton';\nimport { GradingOverview } from '../../../../features/grading/GradingTypes';\n\nexport type UnsubmitCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleUnsubmitSubmission: (submissionId: number) => void;\n};\n\ntype StateProps = {\n  data: GradingOverview;\n  group: string | null;\n  role?: Role;\n};\n\ntype State = {\n  isAlertOpen: boolean;\n};\n\nclass GradingUnsubmitCell extends React.Component<UnsubmitCellProps, State> {\n  public constructor(props: UnsubmitCellProps) {\n    super(props);\n\n    this.state = {\n      isAlertOpen: false\n    };\n  }\n\n  public render() {\n    if (this.props.data.submissionStatus !== 'submitted') {\n      return null;\n    } else if (this.props.group !== this.props.data.groupName && this.props.role! !== Role.Admin) {\n      return null;\n    }\n\n    return (\n      <div>\n        <Alert\n          canEscapeKeyCancel={true}\n          canOutsideClickCancel={true}\n          cancelButtonText=\"Cancel\"\n          className=\"unsubmit-alert alert\"\n          intent={Intent.DANGER}\n          onConfirm={this.handleConfirmUnsubmit}\n          isOpen={this.state.isAlertOpen}\n          onCancel={this.handleUnsubmitAlertClose}\n        >\n          Are you sure you want to unsubmit?\n        </Alert>\n        {controlButton('', IconNames.ARROW_LEFT, () => this.setState({ isAlertOpen: true }), {\n          fullWidth: true\n        })}\n      </div>\n    );\n  }\n\n  private handleConfirmUnsubmit = () => {\n    this.props.handleUnsubmitSubmission(this.props.data.submissionId);\n    this.setState({ isAlertOpen: false });\n  };\n\n  private handleUnsubmitAlertClose = () => this.setState({ isAlertOpen: false });\n}\n\nexport default GradingUnsubmitCell;\n","import {\n  Divider,\n  H3,\n  Icon,\n  IconName,\n  Intent,\n  NumericInput,\n  Position,\n  Pre\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport ReactMde, { ReactMdeProps } from 'react-mde';\nimport { Prompt } from 'react-router';\n\nimport controlButton from '../../../../commons/ControlButton';\nimport Markdown from '../../../../commons/Markdown';\nimport { getPrettyDate } from '../../../../commons/utils/DateHelper';\nimport {\n  showSuccessMessage,\n  showWarningMessage\n} from '../../../../commons/utils/NotificationsHelper';\nimport { stringParamToInt } from '../../../../commons/utils/ParamParseHelper';\n\ntype GradingEditorProps = DispatchProps & OwnProps;\n\ntype GradingSaveFunction = (\n  submissionId: number,\n  questionId: number,\n  gradeAdjustment: number | undefined,\n  xpAdjustment: number | undefined,\n  comments?: string\n) => void;\n\nexport type DispatchProps = {\n  handleGradingSave: GradingSaveFunction;\n  handleGradingSaveAndContinue: GradingSaveFunction;\n};\n\ntype OwnProps = {\n  solution: number | string | null;\n  questionId: number;\n  submissionId: number;\n  initialGrade: number;\n  gradeAdjustment: number;\n  maxGrade: number;\n  initialXp: number;\n  xpAdjustment: number;\n  maxXp: number;\n  studentName: string;\n  comments?: string;\n  graderName?: string;\n  gradedAt?: string;\n};\n\n/**\n * Keeps track of the current editor state,\n * as well as the grade adjustment in the numeric input.\n *\n * @prop gradeAdjustmentInput a potentially null string which defines the\n *   result for the number grade input. This property being null\n *   will show the hint text in the NumericInput. This property is a string\n *   so as to allow input such as the '-' character.\n *\n * @prop xpAdjustmentInput a potentially null string which defines the\n *   result for the number XP input. This property being null\n *   will show the hint text in the NumericInput. This property is a string\n *   so as to allow input such as the '-' character.\n *\n * @prop editorValue the text in the react-mde editor, that will be saved\n *   to a comment displayed below the numerical grade and XP\n *\n * @prop selectedTab the selected tab for the react-mde editor\n *   (either 'write' or 'preview')\n *\n * @prop currentlySaving determines whether the 'You have unsaved changes'\n *   prompt should appear on page navigation, to prevent the\n *   'Save and Continue' button from activating the prompt\n *   in cases where navigation occurs before Redux has\n *   updated the props of the Editor component\n *\n *   This may pose a problem if the user clicks 'Save and Continue'\n *   and the saving process fails. The prompt would no longer\n *   appear although there exist unsaved changes\n */\ntype State = {\n  gradeAdjustmentInput: string | null;\n  xpAdjustmentInput: string | null;\n  editorValue?: string;\n  selectedTab: ReactMdeProps['selectedTab'];\n  currentlySaving: boolean;\n};\n\nconst gradingEditorButtonClass = 'grading-editor-button';\n\nclass GradingEditor extends React.Component<GradingEditorProps, State> {\n  constructor(props: GradingEditorProps) {\n    super(props);\n    this.state = {\n      gradeAdjustmentInput: props.gradeAdjustment.toString(),\n      xpAdjustmentInput: props.xpAdjustment.toString(),\n      editorValue: props.comments,\n      selectedTab: 'write',\n      currentlySaving: false\n    };\n  }\n\n  public render() {\n    const hasUnsavedChanges = this.hasUnsavedChanges();\n    const saveButtonOpts = {\n      intent: hasUnsavedChanges ? Intent.WARNING : Intent.NONE,\n      minimal: !hasUnsavedChanges,\n      className: gradingEditorButtonClass\n    };\n    const discardButtonOpts = {\n      intent: hasUnsavedChanges ? Intent.DANGER : Intent.NONE,\n      minimal: !hasUnsavedChanges,\n      className: gradingEditorButtonClass\n    };\n    const saveAndContinueButtonOpts = {\n      intent: hasUnsavedChanges ? Intent.SUCCESS : Intent.NONE,\n      minimal: !hasUnsavedChanges,\n      className: gradingEditorButtonClass\n    };\n    const onTabChange = (tab: ReactMdeProps['selectedTab']) =>\n      this.setState({\n        ...this.state,\n        selectedTab: tab\n      });\n\n    // Derived values\n    const totalGrade =\n      this.props.initialGrade +\n      (stringParamToInt(this.state.gradeAdjustmentInput || undefined) || 0);\n    const totalXp =\n      this.props.initialXp + (stringParamToInt(this.state.xpAdjustmentInput || undefined) || 0);\n    const gradePlaceholder = `${this.props.initialGrade > 0 ? '-' : ''}${\n      this.props.initialGrade\n    } to ${this.props.maxGrade - this.props.initialGrade}`;\n    const xpPlaceholder = `${this.props.initialXp > 0 ? '-' : ''}${this.props.initialXp} to ${\n      this.props.maxXp - this.props.initialXp\n    }`;\n\n    return (\n      <div className=\"GradingEditor\">\n        {!this.state.currentlySaving && hasUnsavedChanges ? (\n          <Prompt message={'You have unsaved changes. Are you sure you want to leave?'} />\n        ) : null}\n\n        <div className=\"grading-editor-header\">\n          <H3>Currently Grading: {this.props.studentName}</H3>\n        </div>\n        {this.props.solution !== null ? (\n          <div className=\"grading-editor-marking-scheme\">\n            <Pre>{this.props.solution.toString()} </Pre>\n          </div>\n        ) : null}\n\n        <div className=\"grading-editor-container\">\n          <div className=\"grading-editor-grades\">\n            <div className=\"autograder-grade\">\n              <div>Autograder grade:</div>\n              <div>{`${this.props.initialGrade} / ${this.props.maxGrade}`}</div>\n            </div>\n            <div className=\"grade-adjustment\">\n              <div>Grade adjustment:</div>\n              <div>\n                <NumericInput\n                  className=\"adjustment-input\"\n                  onValueChange={this.onGradeAdjustmentInputChange}\n                  value={this.state.gradeAdjustmentInput || ''}\n                  buttonPosition={Position.RIGHT}\n                  fill={true}\n                  placeholder={gradePlaceholder}\n                  intent={\n                    totalGrade < 0 || totalGrade > this.props.maxGrade ? Intent.DANGER : Intent.NONE\n                  }\n                  min={0 - this.props.initialGrade}\n                  max={\n                    this.props.maxGrade > this.props.initialGrade\n                      ? this.props.maxGrade - this.props.initialGrade\n                      : undefined\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"final-grade\">\n              <div>Final grade:</div>\n              <div>{`${totalGrade} / ${this.props.maxGrade}`}</div>\n            </div>\n          </div>\n          <div className=\"grading-editor-xp\">\n            <div className=\"autograder-grade\">\n              <div>Autograder XP:</div>\n              <div>{`${this.props.initialXp} / ${this.props.maxXp}`}</div>\n            </div>\n            <div className=\"grade-adjustment\">\n              <div>XP adjustment:</div>\n              <div>\n                <NumericInput\n                  className=\"adjustment-input\"\n                  onValueChange={this.onXpAdjustmentInputChange}\n                  value={this.state.xpAdjustmentInput || ''}\n                  buttonPosition={Position.RIGHT}\n                  fill={true}\n                  placeholder={xpPlaceholder}\n                  intent={totalXp < 0 || totalXp > this.props.maxXp ? Intent.DANGER : Intent.NONE}\n                  min={0 - this.props.initialXp}\n                  max={\n                    this.props.maxXp > this.props.initialXp\n                      ? this.props.maxXp - this.props.initialXp\n                      : undefined\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"final-grade\">\n              <div>Final XP:</div>\n              <div>{`${totalXp} / ${this.props.maxXp}`}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"react-mde-parent\">\n          <ReactMde\n            value={this.state.editorValue || ''}\n            onChange={this.handleEditorValueChange}\n            selectedTab={this.state.selectedTab}\n            onTabChange={onTabChange}\n            generateMarkdownPreview={this.generateMarkdownPreview}\n            minEditorHeight={200}\n            maxEditorHeight={1000}\n            minPreviewHeight={240}\n            getIcon={this.blueprintIconProvider}\n          />\n        </div>\n\n        {this.state.selectedTab === 'write' && (\n          <div className=\"grading-editor-draft-buttons\">\n            <div className=\"grading-editor-save-button\">\n              {controlButton(\n                'Save Changes',\n                IconNames.FLOPPY_DISK,\n                this.validateGradesBeforeSave(this.props.handleGradingSave),\n                saveButtonOpts\n              )}\n            </div>\n            <div className=\"grading-editor-discard-button\">\n              {controlButton(\n                'Discard Changes',\n                IconNames.TRASH,\n                this.discardChanges,\n                discardButtonOpts\n              )}\n            </div>\n          </div>\n        )}\n        <div className=\"grading-editor-save-continue-button\">\n          {controlButton(\n            'Save and Continue',\n            IconNames.UPDATED,\n            this.validateGradesBeforeSave(this.onClickSaveAndContinue),\n            saveAndContinueButtonOpts\n          )}\n        </div>\n        {this.props.graderName && this.props.gradedAt && (\n          <>\n            <Divider />\n            <div className=\"grading-editor-last-graded-details\">\n              Last edited by <b>{this.props.graderName}</b> on {getPrettyDate(this.props.gradedAt)}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * A custom icons provider. It uses a bulky mapping function\n   * defined below.\n   *\n   * See {@link https://github.com/andrerpena/react-mde}\n   */\n  private blueprintIconProvider(name: string) {\n    const blueprintIcon = mdeToBlueprintIconMapping(name);\n    return <Icon icon={blueprintIcon.iconName} htmlTitle={blueprintIcon.title} />;\n  }\n\n  /**\n   * Makes sure that the Grade and XP values are permissible before\n   * returning the relevant saving function (for the 'Save Draft'\n   * and 'Submit and Continue' buttons)\n   */\n  private validateGradesBeforeSave = (handleSaving: GradingSaveFunction): (() => void) => () => {\n    const gradeAdjustmentInput =\n      stringParamToInt(this.state.gradeAdjustmentInput || undefined) || undefined;\n    const grade = this.props.initialGrade + (gradeAdjustmentInput || 0);\n    const xpAdjustmentInput =\n      stringParamToInt(this.state.xpAdjustmentInput || undefined) || undefined;\n    const xp = this.props.initialXp + (xpAdjustmentInput || 0);\n    if (grade < 0 || grade > this.props.maxGrade) {\n      showWarningMessage(\n        `Grade ${grade.toString()} is out of bounds. Maximum grade is ${this.props.maxGrade.toString()}.`\n      );\n      return;\n    } else if (xp < 0 || xp > this.props.maxXp) {\n      showWarningMessage(\n        `XP ${xp.toString()} is out of bounds. Maximum xp is ${this.props.maxXp.toString()}.`\n      );\n      return;\n    } else {\n      handleSaving(\n        this.props.submissionId,\n        this.props.questionId,\n        gradeAdjustmentInput,\n        xpAdjustmentInput,\n        this.state.editorValue!\n      );\n    }\n  };\n\n  /**\n   * Sets the state currentlySaving to true to disable\n   * the 'You have unsaved changes' prompt\n   */\n  private onClickSaveAndContinue: GradingSaveFunction = (\n    submissionId: number,\n    questionId: number,\n    gradeAdjustment: number | undefined,\n    xpAdjustment: number | undefined,\n    comments?: string\n  ) => {\n    const callback = (): void => {\n      this.props.handleGradingSaveAndContinue(\n        submissionId,\n        questionId,\n        gradeAdjustment,\n        xpAdjustment,\n        comments!\n      );\n    };\n    this.setState({ ...this.state, currentlySaving: true }, callback);\n  };\n\n  /**\n   * Send a warning prompt that loading from a local draft\n   * will overwrite any unsaved changes\n   */\n  private discardChanges = (): void => {\n    if (!this.hasUnsavedChanges() || window.confirm('This will reset the editor. Are you sure?')) {\n      this.setState(\n        {\n          ...this.state,\n          gradeAdjustmentInput: this.props.gradeAdjustment!.toString(),\n          xpAdjustmentInput: this.props.xpAdjustment!.toString(),\n          editorValue: this.props.comments || ''\n        },\n        () => {\n          showSuccessMessage('Discarded!', 1000);\n        }\n      );\n    }\n  };\n\n  /**\n   * Handles changes in the grade NumericInput, and updates the local State.\n   *\n   * @param valueAsNumber an unused parameter, as we use strings for the input. @see State\n   * @param valueAsString a string that contains the input. To be parsed by another function.\n   */\n  private onGradeAdjustmentInputChange = (valueAsNumber: number, valueAsString: string | null) => {\n    this.setState({\n      ...this.state,\n      gradeAdjustmentInput: valueAsString,\n      xpAdjustmentInput: String(\n        Math.round((valueAsNumber / this.props.maxGrade) * this.props.maxXp) || 0\n      )\n    });\n  };\n\n  /**\n   * Handles changes in the XP NumericInput, and updates the local State.\n   *\n   * @param valueAsNumber an unused parameter, as we use strings for the input. @see State\n   * @param valueAsString a string that contains the input. To be parsed by another function.\n   */\n  private onXpAdjustmentInputChange = (valueAsNumber: number, valueAsString: string | null) => {\n    this.setState({\n      ...this.state,\n      xpAdjustmentInput: valueAsString\n    });\n  };\n\n  private handleEditorValueChange = (editorValue: string) => {\n    this.setState({\n      ...this.state,\n      editorValue\n    });\n  };\n\n  private hasUnsavedChanges = () => {\n    const gradeAdjustmentInput = stringParamToInt(this.state.gradeAdjustmentInput || undefined);\n    const xpAdjustmentInput = stringParamToInt(this.state.xpAdjustmentInput || undefined);\n    return (\n      this.props.gradeAdjustment !== gradeAdjustmentInput ||\n      this.props.xpAdjustment !== xpAdjustmentInput ||\n      this.props.comments !== this.state.editorValue\n    );\n  };\n\n  private generateMarkdownPreview = (markdown: string) =>\n    Promise.resolve(\n      <Markdown\n        content={markdown}\n        simplifiedAutoLink={true}\n        strikethrough={true}\n        tasklists={true}\n        openLinksInNewWindow={true}\n      />\n    );\n}\n\n/**\n * Maps react-mde icon names to blueprintjs counterparts\n * to reduce the number of dependencies on icons and\n * keep a more consistent look\n *\n * Also, generate a HTML title for the icon to be shown on mouse hover\n *\n * By default, react-mde would use FontAwesome5 icons if this\n * icon mapping is not provided\n */\nconst mdeToBlueprintIconMapping = (name: string): { iconName: IconName; title?: string } => {\n  switch (name) {\n    case 'header':\n      return {\n        iconName: IconNames.HEADER,\n        title: 'Header Styles'\n      };\n    case 'bold':\n      return {\n        iconName: IconNames.BOLD,\n        title: 'Bold'\n      };\n    case 'italic':\n      return {\n        iconName: IconNames.ITALIC,\n        title: 'Italic'\n      };\n    case 'strikethrough':\n      return {\n        iconName: IconNames.STRIKETHROUGH,\n        title: 'Strikethrough'\n      };\n    case 'link':\n      return {\n        iconName: IconNames.LINK,\n        title: 'Link'\n      };\n    case 'quote':\n      return {\n        iconName: IconNames.CITATION,\n        title: 'Quote'\n      };\n    case 'code':\n      return {\n        iconName: IconNames.CODE,\n        title: 'Monospaced'\n      };\n    case 'image':\n      return {\n        iconName: IconNames.MEDIA,\n        title: 'Image'\n      };\n    case 'unordered-list':\n      return {\n        iconName: IconNames.UNGROUP_OBJECTS,\n        title: 'Bullets'\n      };\n    case 'ordered-list':\n      return {\n        iconName: IconNames.NUMBERED_LIST,\n        title: 'Numbering'\n      };\n    case 'checked-list':\n      return {\n        iconName: IconNames.SQUARE,\n        title: 'Checkboxes'\n      };\n    default:\n      // For unknown icons, a question mark icon is returned\n      return {\n        iconName: IconNames.HELP\n      };\n  }\n};\n\nexport default GradingEditor;\n","import { connect, MapDispatchToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  submitGrading,\n  submitGradingAndContinue\n} from '../../../../commons/application/actions/SessionActions';\nimport GradingEditor, { DispatchProps } from './GradingEditor';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleGradingSave: submitGrading,\n      handleGradingSaveAndContinue: submitGradingAndContinue\n    },\n    dispatch\n  );\n\nconst GradingEditorContainer = connect(null, mapDispatchToProps)(GradingEditor);\n\nexport default GradingEditorContainer;\n","import { Classes, NonIdealState, Spinner } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { InterpreterOutput } from '../../../../commons/application/ApplicationTypes';\nimport {\n  AutogradingResult,\n  IMCQQuestion,\n  Library,\n  Question,\n  QuestionTypes,\n  Testcase\n} from '../../../../commons/assessment/AssessmentTypes';\nimport { ControlBarProps } from '../../../../commons/controlBar/ControlBar';\nimport { ControlBarClearButton } from '../../../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../../../../commons/controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../../../../commons/controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../../../../commons/controlBar/ControlBarQuestionViewButton';\nimport { ControlBarRunButton } from '../../../../commons/controlBar/ControlBarRunButton';\nimport { Position } from '../../../../commons/editor/EditorTypes';\nimport Markdown from '../../../../commons/Markdown';\nimport { SideContentProps } from '../../../../commons/sideContent/SideContent';\nimport SideContentAutograder from '../../../../commons/sideContent/SideContentAutograder';\nimport SideContentToneMatrix from '../../../../commons/sideContent/SideContentToneMatrix';\nimport { SideContentTab, SideContentType } from '../../../../commons/sideContent/SideContentTypes';\nimport { history } from '../../../../commons/utils/HistoryHelper';\nimport Workspace, { WorkspaceProps } from '../../../../commons/workspace/Workspace';\nimport { WorkspaceState } from '../../../../commons/workspace/WorkspaceTypes';\nimport { AnsweredQuestion, Grading } from '../../../../features/grading/GradingTypes';\nimport GradingEditor from './GradingEditorContainer';\n\ntype GradingWorkspaceProps = DispatchProps & OwnProps & StateProps;\n\nexport type DispatchProps = {\n  handleActiveTabChange: (activeTab: SideContentType) => void;\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChapterSelect: (chapter: any, changeEvent: any) => void;\n  handleClearContext: (library: Library) => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleGradingFetch: (submissionId: number) => void;\n  handleInterruptEval: () => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleResetWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleUpdateCurrentSubmissionId: (submissionId: number, questionId: number) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\nexport type OwnProps = {\n  submissionId: number;\n  questionId: number;\n};\n\nexport type StateProps = {\n  autogradingResults: AutogradingResult[];\n  grading?: Grading;\n  editorPrepend: string;\n  editorValue: string | null;\n  editorPostpend: string;\n  editorTestcases: Testcase[];\n  editorHeight?: number;\n  editorWidth: string;\n  breakpoints: string[];\n  highlightedLines: number[][];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  newCursorPosition?: Position;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  storedSubmissionId?: number;\n  storedQuestionId?: number;\n};\n\nclass GradingWorkspace extends React.Component<GradingWorkspaceProps> {\n  /**\n   * After mounting (either an older copy of the grading\n   * or a loading screen), try to fetch a newer grading.\n   */\n  public componentDidMount() {\n    this.props.handleGradingFetch(this.props.submissionId);\n\n    if (!this.props.grading) {\n      return;\n    }\n\n    let questionId = this.props.questionId;\n    if (this.props.questionId >= this.props.grading.length) {\n      questionId = this.props.grading.length - 1;\n    }\n\n    const question: AnsweredQuestion = this.props.grading[questionId].question;\n    let answer: string = '';\n\n    if (question.type === QuestionTypes.programming) {\n      if (question.answer) {\n        answer = question.answer as string;\n      } else {\n        answer = question.solutionTemplate || '';\n      }\n    }\n\n    this.props.handleEditorValueChange(answer);\n  }\n\n  /**\n   * Once there is an update (due to the grading being fetched), check\n   * if a workspace reset is needed.\n   */\n  public componentDidUpdate() {\n    /* Don't reset workspace if grading not fetched yet. */\n    if (this.props.grading === undefined) {\n      return;\n    }\n    const questionId = this.props.questionId;\n\n    /**\n     * Check if questionId is out of bounds, if it is, redirect to the\n     * grading overview page\n     *\n     * This occurs if the grading is submitted on the last question,\n     * as the function to move to the next question does not check\n     * if that question exists\n     */\n    if (this.props.grading[questionId] === undefined) {\n      history.push('/academy/grading');\n    } else {\n      this.checkWorkspaceReset(this.props);\n    }\n  }\n\n  public render() {\n    if (this.props.grading === undefined) {\n      return (\n        <NonIdealState\n          className={classNames('WorkspaceParent', Classes.DARK)}\n          description=\"Getting assessment ready...\"\n          icon={<Spinner size={Spinner.SIZE_LARGE} />}\n        />\n      );\n    }\n\n    /* If questionId is out of bounds, set it to the max. */\n    const questionId =\n      this.props.questionId >= this.props.grading.length\n        ? this.props.grading.length - 1\n        : this.props.questionId;\n    /* Get the question to be graded */\n    const question = this.props.grading[questionId].question as Question;\n    const workspaceProps: WorkspaceProps = {\n      controlBarProps: this.controlBarProps(questionId),\n      editorProps:\n        question.type === QuestionTypes.programming\n          ? {\n              editorSessionId: '',\n              editorValue: this.props.editorValue!,\n              handleDeclarationNavigate: this.props.handleDeclarationNavigate,\n              handleEditorEval: this.props.handleEditorEval,\n              handleEditorValueChange: this.props.handleEditorValueChange,\n              breakpoints: this.props.breakpoints,\n              highlightedLines: this.props.highlightedLines,\n              newCursorPosition: this.props.newCursorPosition,\n              handleEditorUpdateBreakpoints: this.props.handleEditorUpdateBreakpoints,\n              handlePromptAutocomplete: this.props.handlePromptAutocomplete,\n              isEditorAutorun: false\n            }\n          : undefined,\n      editorHeight: this.props.editorHeight,\n      editorWidth: this.props.editorWidth,\n      handleEditorHeightChange: this.props.handleEditorHeightChange,\n      handleEditorWidthChange: this.props.handleEditorWidthChange,\n      handleSideContentHeightChange: this.props.handleSideContentHeightChange,\n      mcqProps: {\n        mcq: question as IMCQQuestion,\n        handleMCQSubmit: (i: number) => {}\n      },\n      sideContentHeight: this.props.sideContentHeight,\n      sideContentProps: this.sideContentProps(this.props, questionId),\n      replProps: {\n        handleBrowseHistoryDown: this.props.handleBrowseHistoryDown,\n        handleBrowseHistoryUp: this.props.handleBrowseHistoryUp,\n        handleReplEval: this.props.handleReplEval,\n        handleReplValueChange: this.props.handleReplValueChange,\n        output: this.props.output,\n        replValue: this.props.replValue\n      }\n    };\n    return (\n      <div className={classNames('WorkspaceParent', Classes.DARK)}>\n        <Workspace {...workspaceProps} />\n      </div>\n    );\n  }\n\n  /**\n   * Checks if there is a need to reset the workspace, then executes\n   * a dispatch (in the props) if needed.\n   *\n   * Assumes that 'props.grading' is defined\n   */\n  private checkWorkspaceReset(props: GradingWorkspaceProps) {\n    /* Reset grading if it has changed.*/\n    const submissionId = props.submissionId;\n    const questionId = props.questionId;\n\n    if (props.storedSubmissionId === submissionId && props.storedQuestionId === questionId) {\n      return;\n    }\n    const question = props.grading![questionId].question as Question;\n\n    let autogradingResults: AutogradingResult[] = [];\n    let editorValue: string = '';\n    let editorPrepend: string = '';\n    let editorPostpend: string = '';\n    let editorTestcases: Testcase[] = [];\n\n    if (question.type === QuestionTypes.programming) {\n      const questionData = question as AnsweredQuestion;\n      autogradingResults = questionData.autogradingResults;\n      editorPrepend = questionData.prepend;\n      editorPostpend = questionData.postpend;\n      editorTestcases = questionData.testcases;\n\n      editorValue = questionData.answer as string;\n      if (!editorValue) {\n        editorValue = questionData.solutionTemplate!;\n      }\n    }\n\n    props.handleEditorUpdateBreakpoints([]);\n    props.handleUpdateCurrentSubmissionId(submissionId, questionId);\n    props.handleResetWorkspace({\n      autogradingResults,\n      editorPrepend,\n      editorValue,\n      editorPostpend,\n      editorTestcases\n    });\n    props.handleClearContext(question.library);\n    props.handleUpdateHasUnsavedChanges(false);\n    if (editorValue) {\n      props.handleEditorValueChange(editorValue);\n    }\n  }\n\n  /** Pre-condition: Grading has been loaded */\n  private sideContentProps: (p: GradingWorkspaceProps, q: number) => SideContentProps = (\n    props: GradingWorkspaceProps,\n    questionId: number\n  ) => {\n    const tabs: SideContentTab[] = [\n      {\n        label: `Grading: Question ${questionId + 1}`,\n        iconName: IconNames.TICK,\n        /* Render an editor with the xp given to the current question. */\n        body: (\n          <GradingEditor\n            solution={props.grading![questionId].question.solution}\n            questionId={props.grading![questionId].question.id}\n            submissionId={props.submissionId}\n            initialGrade={props.grading![questionId].grade.grade}\n            gradeAdjustment={props.grading![questionId].grade.gradeAdjustment}\n            maxGrade={props.grading![questionId].question.maxGrade}\n            initialXp={props.grading![questionId].grade.xp}\n            xpAdjustment={props.grading![questionId].grade.xpAdjustment}\n            maxXp={props.grading![questionId].question.maxXp}\n            studentName={props.grading![questionId].student.name}\n            comments={props.grading![questionId].grade.comments!}\n            graderName={\n              props.grading![questionId].grade.grader\n                ? props.grading![questionId].grade.grader!.name\n                : undefined\n            }\n            gradedAt={\n              props.grading![questionId].grade.grader\n                ? props.grading![questionId].grade.gradedAt!\n                : undefined\n            }\n          />\n        ),\n        id: SideContentType.grading,\n        toSpawn: () => true\n      },\n      {\n        label: `Task ${questionId + 1}`,\n        iconName: IconNames.NINJA,\n        body: <Markdown content={props.grading![questionId].question.content} />,\n        id: SideContentType.questionOverview,\n        toSpawn: () => true\n      },\n      {\n        label: `Autograder`,\n        iconName: IconNames.AIRPLANE,\n        body: (\n          <SideContentAutograder\n            testcases={props.editorTestcases}\n            autogradingResults={props.autogradingResults}\n            handleTestcaseEval={this.props.handleTestcaseEval}\n          />\n        ),\n        id: SideContentType.autograder,\n        toSpawn: () => true\n      }\n    ];\n\n    const functionsAttached = props.grading![questionId].question.library.external.symbols;\n    if (functionsAttached.includes('get_matrix')) {\n      tabs.push({\n        label: `Tone Matrix`,\n        iconName: IconNames.GRID_VIEW,\n        body: <SideContentToneMatrix />,\n        id: SideContentType.toneMatrix,\n        toSpawn: () => true\n      });\n    }\n\n    const sideContentProps: SideContentProps = {\n      handleActiveTabChange: props.handleActiveTabChange,\n      tabs,\n      workspaceLocation: 'grading'\n    };\n\n    return sideContentProps;\n  };\n\n  /** Pre-condition: Grading has been loaded */\n  private controlBarProps: (q: number) => ControlBarProps = (questionId: number) => {\n    const listingPath = `/academy/grading`;\n    const gradingWorkspacePath = listingPath + `/${this.props.submissionId}`;\n    const questionProgress: [number, number] = [questionId + 1, this.props.grading!.length];\n\n    const onClickPrevious = () =>\n      history.push(gradingWorkspacePath + `/${(questionId - 1).toString()}`);\n    const onClickNext = () =>\n      history.push(gradingWorkspacePath + `/${(questionId + 1).toString()}`);\n    const onClickReturn = () => history.push(listingPath);\n\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={this.props.handleReplOutputClear}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={this.props.handleReplEval}\n        isRunning={this.props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={onClickNext}\n        onClickReturn={onClickReturn}\n        questionProgress={questionProgress}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={questionProgress}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton questionProgress={questionProgress} key=\"question_view\" />\n    );\n\n    const runButton = (\n      <ControlBarRunButton handleEditorEval={this.props.handleEditorEval} key=\"run\" />\n    );\n\n    return {\n      editorButtons: [runButton],\n      flowButtons: [previousButton, questionView, nextButton],\n      replButtons: [evalButton, clearButton]\n    };\n  };\n}\n\nexport default GradingWorkspace;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../../../../commons/application/actions/InterpreterActions';\nimport { fetchGrading } from '../../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../../commons/application/ApplicationTypes';\nimport { Library } from '../../../../commons/assessment/AssessmentTypes';\nimport { Position } from '../../../../commons/editor/EditorTypes';\nimport { SideContentType } from '../../../../commons/sideContent/SideContentTypes';\nimport {\n  beginClearContext,\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeEditorHeight,\n  changeEditorWidth,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  resetWorkspace,\n  setEditorBreakpoint,\n  updateActiveTab,\n  updateCurrentSubmissionId,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateReplValue\n} from '../../../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation, WorkspaceState } from '../../../../commons/workspace/WorkspaceTypes';\nimport GradingWorkspace, { DispatchProps, OwnProps, StateProps } from './GradingWorkspace';\n\nconst workspaceLocation: WorkspaceLocation = 'grading';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  return {\n    autogradingResults: state.workspaces.grading.autogradingResults,\n    editorPrepend: state.workspaces.grading.editorPrepend,\n    editorValue: state.workspaces.grading.editorValue,\n    editorPostpend: state.workspaces.grading.editorPostpend,\n    editorTestcases: state.workspaces.grading.editorTestcases,\n    editorHeight: state.workspaces.grading.editorHeight,\n    editorWidth: state.workspaces.grading.editorWidth,\n    breakpoints: state.workspaces.grading.breakpoints,\n    highlightedLines: state.workspaces.grading.highlightedLines,\n    grading: state.session.gradings.get(props.submissionId),\n    hasUnsavedChanges: state.workspaces.grading.hasUnsavedChanges,\n    isRunning: state.workspaces.grading.isRunning,\n    isDebugging: state.workspaces.grading.isDebugging,\n    enableDebugging: state.workspaces.grading.enableDebugging,\n    newCursorPosition: state.workspaces.grading.newCursorPosition,\n    output: state.workspaces.grading.output,\n    replValue: state.workspaces.grading.replValue,\n    sideContentHeight: state.workspaces.grading.sideContentHeight,\n    storedSubmissionId: state.workspaces.grading.currentSubmission,\n    storedQuestionId: state.workspaces.grading.currentQuestion\n  };\n};\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleActiveTabChange: (activeTab: SideContentType) =>\n        updateActiveTab(activeTab, workspaceLocation),\n      handleBrowseHistoryDown: () => browseReplHistoryDown(workspaceLocation),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(workspaceLocation),\n      handleChapterSelect: (chapter: any, changeEvent: any) =>\n        chapterSelect(chapter, 'default', workspaceLocation),\n      handleClearContext: (library: Library) => beginClearContext(library, workspaceLocation),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(workspaceLocation, cursorPosition),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorHeightChange: (height: number) => changeEditorHeight(height, workspaceLocation),\n      handleEditorWidthChange: (widthChange: number) =>\n        changeEditorWidth(widthChange.toString(), workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleGradingFetch: fetchGrading,\n      handleInterruptEval: () => beginInterruptExecution(workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, workspaceLocation),\n      handleResetWorkspace: (options: Partial<WorkspaceState>) =>\n        resetWorkspace(workspaceLocation, options),\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, workspaceLocation),\n      handleTestcaseEval: (testcaseId: number) => evalTestcase(workspaceLocation, testcaseId),\n      handleUpdateCurrentSubmissionId: updateCurrentSubmissionId,\n      handleUpdateHasUnsavedChanges: (unsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, unsavedChanges),\n      handleDebuggerPause: () => beginDebuggerPause(workspaceLocation),\n      handleDebuggerResume: () => debuggerResume(workspaceLocation),\n      handleDebuggerReset: () => debuggerReset(workspaceLocation),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback)\n    },\n    dispatch\n  );\n\nconst GradingWorkspaceContainer = connect(mapStateToProps, mapDispatchToProps)(GradingWorkspace);\n\nexport default GradingWorkspaceContainer;\n","import { Position, Tooltip } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { GradingCellProps } from '../../../../features/grading/GradingTypes';\n\n/**\n * Used to render the submission XP details in the table that displays GradingOverviews.\n * This is a fully fledged component (not SFC) by specification in\n * ag-grid.\n *\n * See {@link https://www.ag-grid.com/example-react-dynamic}\n */\nclass GradingXPCell extends React.Component<GradingCellProps, {}> {\n  /** Component to render in table - XP */\n  public render() {\n    if (this.props.data.maxXp || this.props.data.xpBonus) {\n      const tooltip = `Initial XP: ${this.props.data.initialXp}\n        (${this.props.data.xpBonus > 0 ? `+${this.props.data.xpBonus} bonus ` : ''}\n        ${this.props.data.xpAdjustment >= 0 ? '+' : ''}${this.props.data.xpAdjustment} adj.)`;\n      return (\n        <div>\n          <Tooltip content={tooltip} position={Position.LEFT} hoverOpenDelay={10} lazy={true}>\n            {`${this.props.data.currentXp + this.props.data.xpBonus} / ${this.props.data.maxXp}`}\n          </Tooltip>\n        </div>\n      );\n    } else {\n      return <div>No Exp</div>;\n    }\n  }\n}\n\nexport default GradingXPCell;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport {\n  Button,\n  Colors,\n  Divider,\n  FormGroup,\n  InputGroup,\n  Intent,\n  NonIdealState,\n  Spinner\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { ValueFormatterParams } from 'ag-grid-community/dist/lib/entities/colDef';\nimport { AgGridReact } from 'ag-grid-react';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { GradingNavLinkProps, GradingWorkspaceParams } from 'src/features/grading/GradingTypes';\n\nimport { Role } from '../../../commons/application/ApplicationTypes';\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport NotificationBadge from '../../../commons/notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsBySubmission } from '../../../commons/notificationBadge/NotificationBadgeHelper';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../../../commons/notificationBadge/NotificationBadgeTypes';\nimport { stringParamToInt } from '../../../commons/utils/ParamParseHelper';\nimport {\n  GradingOverview,\n  GradingOverviewWithNotifications\n} from '../../../features/grading/GradingTypes';\nimport GradingEditGradingCell from './subcomponents/GradingEditGradingCell';\nimport GradingGradeCell from './subcomponents/GradingGradeCell';\nimport GradingStatusCell from './subcomponents/GradingStatusCell';\nimport GradingUnsubmitCell from './subcomponents/GradingUnsubmitCell';\nimport { OwnProps as GradingWorkspaceOwnProps } from './subcomponents/GradingWorkspace';\nimport GradingWorkspaceContainer from './subcomponents/GradingWorkspaceContainer';\nimport GradingXPCell from './subcomponents/GradingXPCell';\n\ntype GradingProps = DispatchProps & StateProps & RouteComponentProps<GradingWorkspaceParams>;\n\nexport type DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n  handleFetchGradingOverviews: (filterToGroup?: boolean) => void;\n  handleUnsubmitSubmission: (submissionId: number) => void;\n};\n\nexport type StateProps = {\n  group: string | null;\n  gradingOverviews?: GradingOverview[];\n  notifications: Notification[];\n  role?: Role;\n};\n\ntype State = {\n  filterValue: string;\n  groupFilterEnabled: boolean;\n  currPage: number;\n  maxPages: number;\n  rowCountString: string;\n  isBackDisabled: boolean;\n  isForwardDisabled: boolean;\n};\n\nclass Grading extends React.Component<GradingProps, State> {\n  private columnDefs: ColDef[];\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n\n  public constructor(props: GradingProps) {\n    super(props);\n\n    this.columnDefs = [\n      {\n        headerName: '',\n        field: 'notifications',\n        cellRendererFramework: this.NotificationBadgeCell,\n        width: 30,\n        suppressMovable: true,\n        suppressMenu: true,\n        suppressSizeToFit: true,\n        resizable: false\n      },\n      { headerName: 'Assessment Name', field: 'assessmentName' },\n      { headerName: 'Category', field: 'assessmentCategory', maxWidth: 100 },\n      { headerName: 'Student Name', field: 'studentName' },\n      {\n        headerName: 'Group',\n        field: 'groupName',\n        maxWidth: 100\n      },\n      {\n        headerName: 'Status',\n        field: 'submissionStatus',\n        maxWidth: 100,\n        valueFormatter: (params: ValueFormatterParams) => {\n          const str = params.value as string;\n          return str.charAt(0).toUpperCase() + str.slice(1);\n        },\n        cellStyle: (params: GradingNavLinkProps) => {\n          if (params.data.submissionStatus === 'submitted') {\n            return { backgroundColor: Colors.GREEN5 };\n          }\n          return { backgroundColor: Colors.RED5 };\n        }\n      },\n      {\n        headerName: 'Grading',\n        field: 'gradingStatus',\n        cellRendererFramework: this.GradingStatus,\n        maxWidth: 110\n      },\n      {\n        headerName: 'Grade',\n        field: '',\n        cellRendererFramework: this.GradingMarks,\n        maxWidth: 100,\n        cellStyle: (params: GradingNavLinkProps) => {\n          if (params.data.currentGrade < params.data.maxGrade) {\n            return { backgroundColor: Colors.RED5 };\n          }\n          return {};\n        },\n        comparator: (valueA, valueB, nodeA, nodeB, isInverted) => {\n          if (nodeA && nodeB) {\n            return nodeA.data.currentGrade - nodeB.data.currentGrade;\n          }\n          return valueA - valueB;\n        }\n      },\n      {\n        headerName: 'XP',\n        field: '',\n        cellRendererFramework: this.GradingExp,\n        maxWidth: 100,\n        comparator: (valueA, valueB, nodeA, nodeB, isInverted) => {\n          if (nodeA && nodeB) {\n            return nodeA.data.currentXp - nodeB.data.currentXp;\n          }\n          return valueA - valueB;\n        }\n      },\n      {\n        headerName: 'Edit',\n        cellRendererFramework: GradingEditGradingCell,\n        cellRendererParams: {\n          handleAcknowledgeNotifications: this.props.handleAcknowledgeNotifications\n        },\n        width: 65,\n        filter: false,\n        resizable: false,\n        sortable: false,\n        suppressSizeToFit: true,\n        cellStyle: {\n          padding: 0\n        }\n      },\n      {\n        headerName: 'Unsubmit',\n        colId: 'Unsubmit',\n        width: 100,\n        field: '',\n        cellRendererFramework: GradingUnsubmitCell,\n        cellRendererParams: {\n          group: this.props.group,\n          handleUnsubmitSubmission: this.props.handleUnsubmitSubmission,\n          role: this.props.role\n        },\n        filter: false,\n        resizable: false,\n        sortable: false,\n        suppressSizeToFit: true,\n        cellStyle: {\n          padding: 0\n        }\n      },\n      { headerName: 'Question Count', field: 'questionCount', hide: true },\n      { headerName: 'Questions Graded', field: 'gradedCount', hide: true },\n      { headerName: 'Initial Grade', field: 'initialGrade', hide: true },\n      { headerName: 'Grade Adjustment', field: 'gradeAdjustment', hide: true },\n      { headerName: 'Initial XP', field: 'initialXp', hide: true },\n      { headerName: 'XP Adjustment', field: 'xpAdjustment', hide: true },\n      { headerName: 'Current Grade', field: 'currentGrade', hide: true },\n      { headerName: 'Max Grade', field: 'maxGrade', hide: true },\n      { headerName: 'Current XP (excl. bonus)', field: 'currentXp', hide: true },\n      { headerName: 'Max XP', field: 'maxXp', hide: true },\n      { headerName: 'Bonus XP', field: 'xpBonus', hide: true }\n    ];\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n\n    this.state = {\n      filterValue: '',\n      groupFilterEnabled: false,\n      currPage: 1,\n      maxPages: 1,\n      rowCountString: '(none)',\n      isBackDisabled: true,\n      isForwardDisabled: true\n    };\n  }\n\n  public render() {\n    const submissionId: number | null = stringParamToInt(this.props.match.params.submissionId);\n    // default questionId is 0 (the first question)\n    const questionId: number = stringParamToInt(this.props.match.params.questionId) || 0;\n\n    /* Create a workspace to grade a submission. */\n    if (submissionId !== null) {\n      const props: GradingWorkspaceOwnProps = {\n        submissionId,\n        questionId\n      };\n      return <GradingWorkspaceContainer {...props} />;\n    }\n\n    /* Display either a loading screen or a table with overviews. */\n    const loadingDisplay = (\n      <NonIdealState\n        className=\"Grading\"\n        description=\"Fetching submissions...\"\n        icon={<Spinner size={Spinner.SIZE_LARGE} />}\n      />\n    );\n    const data = this.sortSubmissionsByNotifications();\n\n    const grid = (\n      <div className=\"GradingContainer\">\n        <div>\n          <FormGroup label=\"Filter:\" labelFor=\"text-input\" inline={true}>\n            <InputGroup\n              id=\"filterBar\"\n              large={false}\n              leftIcon=\"filter\"\n              placeholder=\"Enter any text (e.g. mission)\"\n              value={this.state.filterValue}\n              onChange={this.handleFilterChange}\n              onKeyPress={this.handleFilterKeypress}\n              onBlur={this.handleApplyFilter}\n            />\n          </FormGroup>\n\n          <div className=\"ag-grid-controls\">\n            <div className=\"left-controls\">\n              <Button\n                active={this.state.groupFilterEnabled}\n                icon={IconNames.GIT_REPO}\n                intent={this.state.groupFilterEnabled ? Intent.PRIMARY : Intent.NONE}\n                onClick={this.handleGroupsFilter}\n              >\n                <div className=\"ag-grid-button-text hidden-xs\">Show all groups</div>\n              </Button>\n            </div>\n            <div className=\"centre-controls\">\n              <Button\n                icon={IconNames.CHEVRON_BACKWARD}\n                onClick={this.changePaginationView('first')}\n                minimal={true}\n                disabled={this.state.isBackDisabled}\n              />\n              <Button\n                icon={IconNames.CHEVRON_LEFT}\n                onClick={this.changePaginationView('prev')}\n                minimal={true}\n                disabled={this.state.isBackDisabled}\n              />\n              <Button className=\"pagination-details hidden-xs\" disabled={true} minimal={true}>\n                <div>{`Page ${this.state.currPage} of ${this.state.maxPages}`}</div>\n                <div>{this.state.rowCountString}</div>\n              </Button>\n              <Button\n                icon={IconNames.CHEVRON_RIGHT}\n                onClick={this.changePaginationView('next')}\n                minimal={true}\n                disabled={this.state.isForwardDisabled}\n              />\n              <Button\n                icon={IconNames.CHEVRON_FORWARD}\n                onClick={this.changePaginationView('last')}\n                minimal={true}\n                disabled={this.state.isForwardDisabled}\n              />\n            </div>\n            <div className=\"right-controls\">\n              <Button icon={IconNames.EXPORT} onClick={this.exportCSV}>\n                <div className=\"ag-grid-button-text hidden-xs\">Export to CSV</div>\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <Divider />\n\n        <div className=\"Grading\">\n          <div className=\"ag-grid-parent ag-theme-balham\">\n            <AgGridReact\n              domLayout={'autoHeight'}\n              columnDefs={this.columnDefs}\n              defaultColDef={this.defaultColumnDefs}\n              onGridReady={this.onGridReady}\n              onGridSizeChanged={this.resizeGrid}\n              onPaginationChanged={this.updatePaginationState}\n              rowData={data}\n              rowHeight={30}\n              pagination={true}\n              paginationPageSize={25}\n              suppressMovableColumns={true}\n              suppressPaginationPanel={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n    return (\n      <div>\n        <ContentDisplay\n          loadContentDispatch={this.props.handleFetchGradingOverviews}\n          display={this.props.gradingOverviews === undefined ? loadingDisplay : grid}\n          fullWidth={false}\n        />\n      </div>\n    );\n  }\n\n  public componentDidUpdate(prevProps: GradingProps, prevState: State) {\n    // Only update grid data when a notification is acknowledged\n    if (this.gridApi && this.props.notifications.length !== prevProps.notifications.length) {\n      // Pass the new reconstructed row data to the grid after fetching the updated notifs\n      this.gridApi.setRowData(this.sortSubmissionsByNotifications());\n    }\n  }\n\n  /** Component to render in table - grading status */\n  private GradingStatus = (props: GradingNavLinkProps) => {\n    return <GradingStatusCell data={props.data} />;\n  };\n\n  /** Component to render in table - marks */\n  private GradingMarks = (props: GradingNavLinkProps) => {\n    return <GradingGradeCell data={props.data} />;\n  };\n\n  private NotificationBadgeCell = (props: GradingNavLinkProps) => {\n    return (\n      <NotificationBadge\n        notificationFilter={filterNotificationsBySubmission(props.data.submissionId)}\n      />\n    );\n  };\n\n  /** Component to render in table - XP */\n  private GradingExp = (props: GradingNavLinkProps) => {\n    return <GradingXPCell data={props.data} />;\n  };\n\n  // Forcibly resizes columns to fit the width of the datagrid - prevents datagrid\n  // from needing to render a horizontal scrollbar when columns overflow grid width\n  private resizeGrid = () => {\n    if (this.gridApi) {\n      this.gridApi.sizeColumnsToFit();\n    }\n  };\n\n  private updatePaginationState = () => {\n    if (this.gridApi) {\n      const newTotalPages = this.gridApi.paginationGetTotalPages();\n      const newCurrPage = newTotalPages === 0 ? 0 : this.gridApi.paginationGetCurrentPage() + 1;\n      this.setState({\n        currPage: newCurrPage,\n        maxPages: newTotalPages,\n        rowCountString: this.formatRowCountString(\n          25,\n          newCurrPage,\n          newTotalPages,\n          this.gridApi.paginationGetRowCount()\n        ),\n        isBackDisabled: newTotalPages === 0 || newCurrPage === 1,\n        isForwardDisabled: newTotalPages === 0 || newCurrPage === newTotalPages\n      });\n    }\n  };\n\n  private formatRowCountString = (\n    pageSize: number,\n    currPage: number,\n    maxPages: number,\n    totalRows: number\n  ) => {\n    return maxPages === 0\n      ? '(none)'\n      : currPage !== maxPages\n      ? `(#${pageSize * currPage - 24} - #${pageSize * currPage})`\n      : `(#${pageSize * currPage - 24} - #${totalRows})`;\n  };\n\n  private handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const changeVal = event.target.value;\n    this.setState({ filterValue: changeVal });\n  };\n\n  private handleFilterKeypress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      this.handleApplyFilter();\n    }\n  };\n\n  private handleApplyFilter = () => {\n    if (this.gridApi) {\n      this.gridApi.setQuickFilter(this.state.filterValue);\n    }\n  };\n\n  private handleGroupsFilter = () => {\n    if (this.gridApi) {\n      this.setState({ groupFilterEnabled: !this.state.groupFilterEnabled });\n      this.props.handleFetchGradingOverviews(this.state.groupFilterEnabled);\n    }\n  };\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n    this.updatePaginationState();\n  };\n\n  private exportCSV = () => {\n    if (this.gridApi) {\n      this.gridApi.exportDataAsCsv({\n        fileName: `SA submissions (${new Date().toISOString()}).csv`,\n        // Explicitly declare exported columns to avoid exporting trash columns\n        columnKeys: [\n          'assessmentName',\n          'assessmentCategory',\n          'studentName',\n          'groupName',\n          'submissionStatus',\n          'gradingStatus',\n          'questionCount',\n          'gradedCount',\n          'initialGrade',\n          'gradeAdjustment',\n          'currentGrade',\n          'maxGrade',\n          'initialXp',\n          'xpAdjustment',\n          'currentXp',\n          'maxXp',\n          'xpBonus'\n        ]\n      });\n    }\n  };\n\n  private changePaginationView = (type: string) => {\n    return () => {\n      if (this.gridApi) {\n        switch (type) {\n          case 'first':\n            return this.gridApi.paginationGoToFirstPage();\n          case 'prev':\n            return this.gridApi.paginationGoToPreviousPage();\n          case 'next':\n            return this.gridApi.paginationGoToNextPage();\n          case 'last':\n            return this.gridApi.paginationGoToLastPage();\n          default:\n        }\n      }\n    };\n  };\n\n  /** Constructs data nodes for the datagrid by joining grading overviews with their\n   *  associated notifications.\n   *  @return Returns an array of data nodes, prioritising grading overviews with\n   *  notifications first.\n   */\n  private sortSubmissionsByNotifications = () => {\n    if (!this.props.gradingOverviews) {\n      return [];\n    }\n\n    return (this.props.gradingOverviews as GradingOverviewWithNotifications[])\n      .map(overview => ({\n        ...overview,\n        notifications: filterNotificationsBySubmission(overview.submissionId)(\n          this.props.notifications\n        )\n      }))\n      .sort((subX, subY) => subY.notifications.length - subX.notifications.length);\n  };\n}\n\nexport default Grading;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  acknowledgeNotifications,\n  fetchGradingOverviews,\n  unsubmitSubmission\n} from '../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport Grading, { DispatchProps, StateProps } from './Grading';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  gradingOverviews: state.session.gradingOverviews,\n  group: state.session.group,\n  notifications: state.session.notifications,\n  role: state.session.role\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAcknowledgeNotifications: acknowledgeNotifications,\n      handleFetchGradingOverviews: fetchGradingOverviews,\n      handleUnsubmitSubmission: unsubmitSubmission\n    },\n    dispatch\n  );\n\nconst GradingContainer = connect(mapStateToProps, mapDispatchToProps)(Grading);\n\nexport default GradingContainer;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { AssessmentOverview } from '../../../../commons/assessment/AssessmentTypes';\nimport controlButton from '../../../../commons/ControlButton';\n\ninterface IDeleteCellProps {\n  data: AssessmentOverview;\n  handleDeleteAssessment: (id: number) => void;\n}\n\ninterface IDeleteCellState {\n  dialogOpen: boolean;\n}\n\nclass DeleteCell extends React.Component<IDeleteCellProps, IDeleteCellState> {\n  public constructor(props: IDeleteCellProps) {\n    super(props);\n    this.state = {\n      dialogOpen: false\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        {controlButton('', IconNames.TRASH, this.handleOpenDialog)}\n        <Dialog\n          icon=\"info-sign\"\n          isOpen={this.state.dialogOpen}\n          onClose={this.handleCloseDialog}\n          title=\"Delete Assessment\"\n          canOutsideClickClose={true}\n        >\n          <div className={Classes.DIALOG_BODY}>\n            {<p>Are you sure that you want to delete this Assessment?</p>}\n            {<p>Students' answers and submissions will be deleted as well.</p>}\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              {controlButton('Confirm Delete', IconNames.TRASH, this.handleDelete)}\n              {controlButton('Cancel', IconNames.CROSS, this.handleCloseDialog)}\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private handleCloseDialog = () => this.setState({ dialogOpen: false });\n  private handleOpenDialog = () => this.setState({ dialogOpen: true });\n  private handleDelete = () => {\n    const { data } = this.props;\n    this.props.handleDeleteAssessment(data.id);\n    this.handleCloseDialog();\n  };\n}\n\nexport default DeleteCell;\n","import { Card, Elevation, Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { FlexDirectionProperty } from 'csstype';\nimport * as React from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport controlButton from '../../../../commons/ControlButton';\n\ninterface IDispatchProps {\n  handleUploadAssessment: (file: File) => void;\n  toggleForceUpdate: () => void;\n  toggleDisplayConfirmation: () => void;\n}\n\ninterface IStateProps {\n  forceUpdate: boolean;\n  displayConfirmation: boolean;\n}\n\ninterface IDropzoneProps extends IDispatchProps, IStateProps {}\n\n// Dropzone styling\nconst dropZoneStyle = {\n  baseStyle: {\n    flex: 1,\n    display: 'flex',\n    height: '30vh',\n    flexDirection: 'column' as FlexDirectionProperty,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  },\n\n  activeStyle: {\n    borderColor: '#2196f3'\n  },\n\n  acceptStyle: {\n    borderColor: '#00e676'\n  },\n\n  rejectStyle: {\n    borderColor: '#ff1744'\n  }\n};\n\nconst MaterialDropzone: React.FC<IDropzoneProps> = props => {\n  const [file, setFile] = React.useState<File>();\n  const [title, setTitle] = React.useState<string>();\n  const handleConfirmUpload = () => {\n    props.handleUploadAssessment(file!);\n    setFile(undefined);\n  };\n  const handleCancelUpload = () => setFile(undefined);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    isFocused\n  } = useDropzone({\n    onDrop: acceptedFiles => {\n      setFile(acceptedFiles[0]);\n      setTitle(acceptedFiles[0].name);\n    }\n  });\n  const style = React.useMemo(\n    () => ({\n      ...dropZoneStyle.baseStyle,\n      ...(isDragActive ? dropZoneStyle.activeStyle : {}),\n      ...(isDragAccept ? dropZoneStyle.acceptStyle : {}),\n      ...(isDragReject ? dropZoneStyle.rejectStyle : {}),\n      ...(isFocused ? dropZoneStyle.activeStyle : {})\n    }),\n    [isDragActive, isDragAccept, isDragReject, isFocused]\n  );\n\n  const handleToggleOnChange = () => {\n    if (!props.forceUpdate) {\n      props.toggleDisplayConfirmation();\n      props.toggleForceUpdate();\n    } else {\n      props.toggleForceUpdate();\n    }\n  };\n\n  const toggleButton = () => {\n    return (\n      <div className=\"toggle-button-wrapper\">\n        <Switch checked={props.forceUpdate} onChange={handleToggleOnChange} />\n      </div>\n    );\n  };\n\n  const handleConfirmForceUpdate = () => {\n    props.toggleDisplayConfirmation();\n  };\n\n  const handleCancelForceUpdate = () => {\n    props.toggleDisplayConfirmation();\n    props.toggleForceUpdate();\n  };\n\n  const confirmationMessage = () => {\n    return (\n      <div>\n        <p>Are you sure that you want to force update the assessment?</p>\n        {controlButton('Yes', IconNames.CONFIRM, handleConfirmForceUpdate)}\n        {controlButton('No', IconNames.CROSS, handleCancelForceUpdate)}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Card className=\"contentdisplay-content\" elevation={Elevation.THREE}>\n        <div {...getRootProps({ style })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n      </Card>\n      {file && (\n        <Card>\n          <div>{title}</div>\n          <br />\n          {!props.displayConfirmation &&\n            controlButton('Confirm Upload', IconNames.UPLOAD, handleConfirmUpload)}\n          {!props.displayConfirmation &&\n            controlButton('Cancel Upload', IconNames.DELETE, handleCancelUpload)}\n          <br />\n          <br />\n          {!props.displayConfirmation && <p>Force update opened assessment</p>}\n          {props.displayConfirmation && confirmationMessage()}\n          {!props.displayConfirmation && toggleButton()}\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MaterialDropzone;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../../../../commons/ControlButton';\nimport { IGroundControlAssessmentOverview } from '../../../../features/groundControl/GroundControlTypes';\n\ninterface IEditCellProps {\n  data: IGroundControlAssessmentOverview;\n  handleAssessmentChangeDate: (id: number, openAt: string, closeAt: string) => void;\n  forOpenDate: boolean;\n}\n\ninterface IEditCellState extends IEditCellDateState {\n  dialogOpen: boolean;\n}\n\ninterface IEditCellDateState {\n  openAt: Date;\n  closeAt: Date;\n}\n\nclass EditCell extends React.Component<IEditCellProps, IEditCellState> {\n  private maxDate = new Date(new Date(Date.now()).setFullYear(2100));\n\n  public constructor(props: IEditCellProps) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      openAt: new Date(Date.parse(this.props.data.openAt)),\n      closeAt: new Date(Date.parse(this.props.data.closeAt))\n    };\n  }\n\n  public render() {\n    const fieldName = this.props.forOpenDate ? 'Opening' : 'Closing';\n    return (\n      <div>\n        {this.props.forOpenDate ? this.props.data.prettyOpenAt : this.props.data.prettyCloseAt}\n        {controlButton('', IconNames.EDIT, this.handleOpenDialog)}\n        <Dialog\n          icon=\"info-sign\"\n          isOpen={this.state.dialogOpen}\n          onClose={this.handleCloseDialog}\n          title=\"Update Assessment\"\n          canOutsideClickClose={true}\n        >\n          <div className={Classes.DIALOG_BODY}>\n            {fieldName} Date: {this.dateInput()}\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              {controlButton('Confirm Update', IconNames.TICK, this.handleUpdate)}\n              {controlButton('Cancel', IconNames.CROSS, this.handleCloseDialog)}\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private dateInput = () => {\n    return (\n      <DateInput\n        formatDate={this.formatDate}\n        onChange={this.handleDateChange}\n        parseDate={this.parseDate}\n        value={this.props.forOpenDate ? this.state.openAt : this.state.closeAt}\n        timePrecision={'minute'}\n        fill={true}\n        maxDate={this.maxDate}\n        closeOnSelection={false}\n      />\n    );\n  };\n\n  private parseDate = (str: string) => new Date(str);\n\n  private formatDate = (date: Date) => date.toLocaleString();\n\n  private handleDateChange = (selectedDate: Date) => {\n    if (this.props.forOpenDate) {\n      this.setState({ openAt: selectedDate });\n    } else {\n      this.setState({ closeAt: selectedDate });\n    }\n  };\n\n  private handleCloseDialog = () => this.setState({ dialogOpen: false });\n  private handleOpenDialog = () => this.setState({ dialogOpen: true });\n  private handleUpdate = () => {\n    const { data } = this.props;\n    this.props.handleAssessmentChangeDate(\n      data.id,\n      this.state.openAt.toISOString(),\n      this.state.closeAt.toISOString()\n    );\n    this.handleCloseDialog();\n  };\n}\n\nexport default EditCell;\n","import { Classes, Dialog, Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { AssessmentOverview } from '../../../../commons/assessment/AssessmentTypes';\nimport controlButton from '../../../../commons/ControlButton';\n\ninterface IPublishCellProps {\n  data: AssessmentOverview;\n  handlePublishAssessment: (togglePublishTo: boolean, id: number) => void;\n}\n\ninterface IPublishCellState {\n  dialogOpen: boolean;\n  isPublished: boolean;\n}\n\nclass PublishCell extends React.Component<IPublishCellProps, IPublishCellState> {\n  public constructor(props: IPublishCellProps) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      isPublished: this.props.data.isPublished === undefined ? false : this.props.data.isPublished\n    };\n  }\n\n  public render() {\n    const text = this.props.data.isPublished ? 'Unpublish' : 'Publish';\n    const lowerCaseText = text.toLowerCase();\n    const toggleButton = () => {\n      return (\n        <div className=\"toggle-button-wrapper\">\n          <Switch checked={this.state.isPublished} onChange={this.handleOpenDialog} />\n        </div>\n      );\n    };\n    return (\n      <div>\n        {toggleButton()}\n        <Dialog\n          icon=\"info-sign\"\n          isOpen={this.state.dialogOpen}\n          onClose={this.handleCloseDialog}\n          title={text + ' Assessment'}\n          canOutsideClickClose={true}\n        >\n          <div className={Classes.DIALOG_BODY}>\n            {<p>Are you sure that you want to {lowerCaseText} this Assessment?</p>}\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              {controlButton('Confirm ' + text, IconNames.CONFIRM, this.handleDelete)}\n              {controlButton('Cancel', IconNames.CROSS, this.handleCloseDialog)}\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private handleCloseDialog = () => this.setState({ dialogOpen: false });\n  private handleOpenDialog = () => this.setState({ dialogOpen: true });\n  private handleDelete = () => {\n    const { data } = this.props;\n    this.props.handlePublishAssessment(!data.isPublished, data.id);\n    this.handleCloseDialog();\n  };\n}\n\nexport default PublishCell;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\n\nimport { AssessmentOverview } from '../../../commons/assessment/AssessmentTypes';\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport { getPrettyDate } from '../../../commons/utils/DateHelper';\nimport { IGroundControlAssessmentOverview } from '../../../features/groundControl/GroundControlTypes';\nimport DeleteCell from './subcomponents/GroundControlDeleteCell';\nimport Dropzone from './subcomponents/GroundControlDropzone';\nimport EditCell from './subcomponents/GroundControlEditCell';\nimport PublishCell from './subcomponents/GroundControlPublishCell';\n\nexport type GroundControlProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleAssessmentOverviewFetch: () => void;\n  handleDeleteAssessment: (id: number) => void;\n  handleUploadAssessment: (file: File, forceUpdate: boolean) => void;\n  handlePublishAssessment: (togglePublishTo: boolean, id: number) => void;\n  handleAssessmentChangeDate: (id: number, openAt: string, closeAt: string) => void;\n};\n\nexport type StateProps = {\n  assessmentOverviews: AssessmentOverview[];\n};\n\ntype State = {\n  forceUpdate: boolean;\n  displayConfirmation: boolean;\n};\n\nclass GroundControl extends React.Component<GroundControlProps, State> {\n  private columnDefs: ColDef[];\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n\n  public constructor(props: GroundControlProps) {\n    super(props);\n\n    this.state = {\n      forceUpdate: false,\n      displayConfirmation: false\n    };\n    this.columnDefs = [\n      {\n        headerName: 'Title',\n        field: 'title'\n      },\n      {\n        headerName: 'Category',\n        field: 'category',\n        width: 100\n      },\n      {\n        headerName: 'Open Date',\n        field: '',\n        cellRendererFramework: EditCell,\n        cellRendererParams: {\n          handleAssessmentChangeDate: this.props.handleAssessmentChangeDate,\n          forOpenDate: true\n        },\n        width: 150,\n        sortable: false,\n        suppressMovable: true,\n        suppressMenu: true,\n        cellStyle: {\n          padding: 0\n        }\n      },\n      {\n        headerName: 'Close Date',\n        field: '',\n        cellRendererFramework: EditCell,\n        cellRendererParams: {\n          handleAssessmentChangeDate: this.props.handleAssessmentChangeDate,\n          forOpenDate: false\n        },\n        width: 150,\n        sortable: false,\n        suppressMovable: true,\n        suppressMenu: true,\n        cellStyle: {\n          padding: 0\n        }\n      },\n      {\n        headerName: 'Publish',\n        field: '',\n        cellRendererFramework: PublishCell,\n        cellRendererParams: {\n          handlePublishAssessment: this.props.handlePublishAssessment\n        },\n        width: 100,\n        sortable: false,\n        suppressMovable: true,\n        suppressMenu: true,\n        cellStyle: {\n          padding: 0\n        },\n        hide: !this.props.handlePublishAssessment\n      },\n      {\n        headerName: 'Delete',\n        field: '',\n        cellRendererFramework: DeleteCell,\n        cellRendererParams: {\n          handleDeleteAssessment: this.props.handleDeleteAssessment\n        },\n        width: 100,\n        sortable: false,\n        suppressMovable: true,\n        suppressMenu: true,\n        cellStyle: {\n          padding: 0\n        },\n        hide: !this.props.handleDeleteAssessment\n      }\n    ];\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n  }\n\n  public componentDidUpdate(prevProps: GroundControlProps) {\n    if (\n      this.gridApi &&\n      this.props.assessmentOverviews.length !== prevProps.assessmentOverviews.length\n    ) {\n      this.gridApi.setRowData(this.sortByCategoryAndDate());\n    }\n  }\n\n  public render() {\n    const data = this.sortByCategoryAndDate();\n    const Grid = () => (\n      <div className=\"GradingContainer\">\n        <div className=\"Grading ag-grid-parent ag-theme-balham\">\n          <AgGridReact\n            domLayout={'autoHeight'}\n            columnDefs={this.columnDefs}\n            defaultColDef={this.defaultColumnDefs}\n            onGridReady={this.onGridReady}\n            onGridSizeChanged={this.resizeGrid}\n            rowData={data}\n            rowHeight={30}\n            pagination={true}\n            paginationPageSize={25}\n            suppressMovableColumns={true}\n            suppressPaginationPanel={true}\n          />\n        </div>\n      </div>\n    );\n\n    const display = (\n      <div className=\"GroundControl\">\n        <Dropzone\n          handleUploadAssessment={this.handleUploadAssessment}\n          toggleForceUpdate={this.toggleForceUpdate}\n          toggleDisplayConfirmation={this.toggleDisplayConfirmation}\n          forceUpdate={this.state.forceUpdate}\n          displayConfirmation={this.state.displayConfirmation}\n        />\n        <Grid />\n      </div>\n    );\n\n    return (\n      <div>\n        <ContentDisplay\n          display={display}\n          loadContentDispatch={this.props.handleAssessmentOverviewFetch}\n        />\n      </div>\n    );\n  }\n\n  private sortByCategoryAndDate = () => {\n    if (!this.props.assessmentOverviews) {\n      return [];\n    }\n\n    const overview: IGroundControlAssessmentOverview[] = this.props.assessmentOverviews\n      .slice()\n      .map(assessmentOverview => {\n        const clone: IGroundControlAssessmentOverview = JSON.parse(\n          JSON.stringify(assessmentOverview)\n        );\n        clone.prettyCloseAt = getPrettyDate(clone.closeAt);\n        clone.prettyOpenAt = getPrettyDate(clone.openAt);\n        clone.formattedOpenAt = new Date(Date.parse(clone.openAt));\n        clone.formattedCloseAt = new Date(Date.parse(clone.closeAt));\n        return clone;\n      });\n    return sortBy(overview, ['category', 'formattedOpenAt', 'formattedCloseAt']);\n  };\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n  };\n\n  private resizeGrid = () => {\n    if (this.gridApi) {\n      this.gridApi.sizeColumnsToFit();\n    }\n  };\n\n  private handleUploadAssessment = (file: File) => {\n    this.props.handleUploadAssessment(file, this.state.forceUpdate);\n    this.setState({ forceUpdate: false });\n  };\n\n  private toggleForceUpdate = () => {\n    this.setState({ forceUpdate: !this.state.forceUpdate });\n  };\n\n  private toggleDisplayConfirmation = () => {\n    this.setState({ displayConfirmation: !this.state.displayConfirmation });\n  };\n}\n\nexport default GroundControl;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { fetchAssessmentOverviews } from '../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport {\n  changeDateAssessment,\n  deleteAssessment,\n  publishAssessment,\n  uploadAssessment\n} from '../../../features/groundControl/GroundControlActions';\nimport GroundControl, { DispatchProps, StateProps } from './GroundControl';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  assessmentOverviews: state.session.assessmentOverviews ? state.session.assessmentOverviews : []\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAssessmentChangeDate: changeDateAssessment,\n      handleAssessmentOverviewFetch: fetchAssessmentOverviews,\n      handleDeleteAssessment: deleteAssessment,\n      handleUploadAssessment: uploadAssessment,\n      handlePublishAssessment: publishAssessment\n    },\n    dispatch\n  );\n\nconst GroundControlContainer = connect(mapStateToProps, mapDispatchToProps)(GroundControl);\n\nexport default GroundControlContainer;\n","import { Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../ControlButton';\nimport { ControlBarRunButton } from './ControlBarRunButton';\n\ntype ControlBarAutorunButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDebuggerPause: () => void;\n  handleDebuggerReset: () => void;\n  handleDebuggerResume: () => void;\n  handleEditorEval: () => void;\n  handleInterruptEval: () => void;\n  handleToggleEditorAutorun?: () => void;\n};\n\ntype StateProps = {\n  isDebugging: boolean;\n  isEditorAutorun?: boolean;\n  isRunning: boolean;\n  key: string;\n};\n\nexport function ControlBarAutorunButtons(props: ControlBarAutorunButtonProps) {\n  const toggleAutorunButton = (\n    <div className=\"Switch\">\n      <Switch label=\"\" checked={props.isEditorAutorun} onChange={props.handleToggleEditorAutorun} />\n    </div>\n  );\n\n  const autoRunButton = controlButton('Auto', IconNames.AUTOMATIC_UPDATES);\n  const stopButton = controlButton('Stop', IconNames.STOP, props.handleInterruptEval);\n  const debuggerResetButton = controlButton(\n    'Stop Debugger',\n    IconNames.STOP,\n    props.handleDebuggerReset\n  );\n  const pauseButton = controlButton('Pause', IconNames.STOP, props.handleDebuggerPause);\n  const resumeButton = controlButton('Resume', IconNames.CHEVRON_RIGHT, props.handleDebuggerResume);\n\n  const runButtonGrouping = () => {\n    if (props.isEditorAutorun) {\n      return autoRunButton;\n    }\n    if (props.isRunning) {\n      return stopButton;\n    }\n    if (props.isDebugging) {\n      return null;\n    }\n    return <ControlBarRunButton handleEditorEval={props.handleEditorEval} key=\"run\" />;\n  };\n\n  const pauseButtonGrouping = () => {\n    if (props.isRunning && !props.isDebugging) {\n      return pauseButton;\n    }\n    if (!props.isRunning && props.isDebugging) {\n      return resumeButton;\n    }\n    return null;\n  };\n\n  return (\n    <>\n      {toggleAutorunButton}\n      {runButtonGrouping()}\n      {pauseButtonGrouping()}\n      {props.isDebugging ? debuggerResetButton : null}\n    </>\n  );\n}\n","import { Button, Classes, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport * as React from 'react';\n\nimport {\n  External,\n  externalLibraries,\n  ExternalLibraryName\n} from '../application/types/ExternalTypes';\n\ntype ControlBarExternalLibrarySelectProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleExternalSelect?: (i: External, e?: React.SyntheticEvent<HTMLElement>) => void;\n};\n\ntype StateProps = {\n  externalLibraryName?: string;\n  key: string;\n};\n\nexport function ControlBarExternalLibrarySelect(props: ControlBarExternalLibrarySelectProps) {\n  const iExternals = Array.from(externalLibraries.entries()).map((entry, index) => ({\n    name: entry[0] as ExternalLibraryName,\n    key: index,\n    symbols: entry[1]\n  }));\n\n  const ExternalSelectComponent = Select.ofType<External>();\n\n  const externalRenderer: ItemRenderer<External> = (\n    external,\n    { handleClick, modifiers, query }\n  ) => <MenuItem active={false} key={external.key} onClick={handleClick} text={external.name} />;\n\n  const externalSelect = (\n    currentExternal: string,\n    handleSelect: (i: External, e?: React.SyntheticEvent<HTMLElement>) => void\n  ) => (\n    <ExternalSelectComponent\n      className={Classes.MINIMAL}\n      items={iExternals}\n      onItemSelect={handleSelect}\n      itemRenderer={externalRenderer}\n      filterable={false}\n    >\n      <Button\n        className={Classes.MINIMAL}\n        text={currentExternal}\n        rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n      />\n    </ExternalSelectComponent>\n  );\n\n  return externalSelect(props.externalLibraryName!, props.handleExternalSelect!);\n}\n","import { Classes, NonIdealState, Spinner } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Links } from '../utils/Constants';\n\ntype State = {\n  loading: boolean;\n};\n\nclass SideContentEnvVisualizer extends React.Component<{}, State> {\n  private $parent: HTMLElement | null = null;\n\n  constructor(props: any) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  public componentDidMount() {\n    this.tryToLoad();\n  }\n\n  public render() {\n    return (\n      <div ref={r => (this.$parent = r)} className={classNames('sa-env-visualizer', Classes.DARK)}>\n        <p id=\"env-visualizer-default-text\" className={Classes.RUNNING_TEXT}>\n          The environmental visualizer generates the environmental model diagram based on\n          breakpoints set in the editor.\n          <br />\n          <br />\n          It is activated by clicking on the gutter of the editor (where all the line numbers are,\n          on the left) to set a breakpoint, and then running the program.\n          <br />\n          <br />\n          The environment model diagram follows a notation introduced in{' '}\n          <a href={Links.sourceDocsChapter3_2} rel=\"noopener noreferrer\" target=\"_blank\">\n            <i>\n              Structure and Interpretation of Computer Programs, JavaScript Adaptation, Chapter 3,\n              Section 2\n            </i>\n          </a>\n          .\n        </p>\n        {this.state.loading && (\n          <NonIdealState description=\"Loading Env Visualizer...\" icon={<Spinner />} />\n        )}\n      </div>\n    );\n  }\n\n  private tryToLoad = () => {\n    const element = (window as any).EnvVisualizer;\n    if (this.$parent && element) {\n      // Env Visualizer has been loaded into the DOM\n      element.init(this.$parent);\n      this.setState((state, props) => {\n        return { loading: false };\n      });\n    } else {\n      // Try again in 1 second\n      window.setTimeout(this.tryToLoad, 1000);\n    }\n  };\n}\n\nexport default SideContentEnvVisualizer;\n","import { Classes, NonIdealState, Spinner } from '@blueprintjs/core';\nimport * as React from 'react';\n\ntype State = {\n  loading: boolean;\n};\n\nclass SideContentInspector extends React.Component<{}, State> {\n  private $parent: HTMLElement | null = null;\n\n  constructor(props: any) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  public componentDidMount() {\n    this.tryToLoad();\n  }\n\n  public render() {\n    return (\n      <div ref={r => (this.$parent = r)} className=\"sa-inspector\">\n        <p id=\"inspector-default-text\" className={Classes.RUNNING_TEXT}>\n          The inspector generates a list of variable bindings based on breakpoints set in the\n          editor.\n          <br />\n          <br />\n          It is activated by clicking on the gutter of the editor (where all the line numbers are,\n          on the left) to set a breakpoint, and then running the program. Only the first line of a\n          statement can have a breakpoint. The program halts just before the statement is evaluated.\n        </p>\n        {this.state.loading && (\n          <NonIdealState description=\"Loading Inspector...\" icon={<Spinner />} />\n        )}\n      </div>\n    );\n  }\n\n  private tryToLoad = () => {\n    const element = (window as any).Inspector;\n    if (this.$parent && element) {\n      // Inspector has been loaded into the DOM\n      element.init(this.$parent);\n      this.setState((state, props) => {\n        return { loading: false };\n      });\n    } else {\n      // Try again in 1 second\n      window.setTimeout(this.tryToLoad, 1000);\n    }\n  };\n}\n\nexport default SideContentInspector;\n","import { Classes, NonIdealState, Spinner } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Links } from '../utils/Constants';\n\ntype State = {\n  loading: boolean;\n};\n\nclass SideContentListVisualizer extends React.Component<{}, State> {\n  private $parent: HTMLElement | null = null;\n\n  constructor(props: any) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  public componentDidMount() {\n    this.tryToLoad();\n  }\n\n  public render() {\n    // Default text will be hidden by visualizer.js when 'draw_data' is called\n    return (\n      <div ref={r => (this.$parent = r)} className={classNames('sa-list-visualizer', Classes.DARK)}>\n        <p id=\"data-visualizer-default-text\" className={Classes.RUNNING_TEXT}>\n          The data visualizer visualises data structures.\n          <br />\n          <br />\n          It is activated by calling the function <code>draw_data(the_data)</code>, where\n          <code>the_data</code> would be the data structure that you want to visualise.\n          <br />\n          <br />\n          The data visualizer uses box-and-pointer diagrams, as introduced in{' '}\n          <a href={Links.sourceDocsChapter2_2} rel=\"noopener noreferrer\" target=\"_blank\">\n            <i>\n              Structure and Interpretation of Computer Programs, JavaScript Adaptation, Chapter 2,\n              Section 2\n            </i>\n          </a>\n          .\n        </p>\n        {this.state.loading && (\n          <NonIdealState description=\"Loading Data Visualizer...\" icon={<Spinner />} />\n        )}\n      </div>\n    );\n  }\n\n  private tryToLoad = () => {\n    const element = (window as any).ListVisualizer;\n    if (this.$parent && element) {\n      // List Visualizer has been loaded into the DOM\n      element.init(this.$parent);\n      this.setState((state, props) => {\n        return { loading: false };\n      });\n    } else {\n      // Try again in 1 second\n      window.setTimeout(this.tryToLoad, 1000);\n    }\n  };\n}\n\nexport default SideContentListVisualizer;\n","import { Slider } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SourcecastData\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport controlButton from '../ControlButton';\n\nexport type SourceRecorderControlBarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleEditorValueChange: (newCode: string) => void;\n  handleSetCurrentPlayerTime: (playTime: number) => void;\n  handleSetCodeDeltasToApply: (deltas: CodeDelta[]) => void;\n  handleSetEditorReadonly: (editorReadonly: boolean) => void;\n  handleSetInputToApply: (inputToApply: Input) => void;\n  handleSetSourcecastDuration: (duration: number) => void;\n  handleSetSourcecastStatus: (playbackStatus: PlaybackStatus) => void;\n  handleChapterSelect: (chapter: number) => void;\n  handleExternalSelect: (name: ExternalLibraryName) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\ntype StateProps = {\n  audioUrl: string;\n  currentPlayerTime: number;\n  duration: number;\n  playbackData: PlaybackData;\n  playbackStatus: PlaybackStatus;\n};\n\ntype State = {\n  currentDeltaRevision: number;\n  currentPlayerProgress: number;\n  currentSourcecastItem: SourcecastData | null;\n  duration: number;\n};\n\nclass SourceRecorderControlBar extends React.PureComponent<SourceRecorderControlBarProps, State> {\n  private audio: React.RefObject<HTMLAudioElement>;\n\n  constructor(props: SourceRecorderControlBarProps) {\n    super(props);\n    this.audio = React.createRef();\n    this.state = {\n      currentDeltaRevision: 0,\n      currentPlayerProgress: 0,\n      currentSourcecastItem: null,\n      duration: 0\n    };\n  }\n\n  public render() {\n    const PlayerPlayButton = controlButton(\n      'Play',\n      IconNames.PLAY,\n      this.handlePlayerPlaying,\n      {},\n      !this.props.duration\n    );\n    const PlayerPauseButton = controlButton('Pause', IconNames.PAUSE, this.handlePlayerPausing);\n    return (\n      <div className=\"Bar\">\n        <audio\n          src={this.props.audioUrl}\n          ref={this.audio}\n          onEnded={this.handlePlayerStopping}\n          onLoadedMetadata={this.handleAudioLoaded}\n          onSeeked={this.handleSeeked}\n          onTimeUpdate={this.updatePlayerTime}\n          preload=\"metadata\"\n          // controls={true}\n        />\n        <br />\n        <div>\n          <div className=\"PlayerControl\">\n            <div className=\"PlayerControl\">\n              {this.props.playbackStatus === PlaybackStatus.paused && PlayerPlayButton}\n              {this.props.playbackStatus === PlaybackStatus.playing && PlayerPauseButton}\n            </div>\n          </div>\n          <div className=\"Slider\">\n            <Slider\n              min={0}\n              max={1}\n              stepSize={0.0001}\n              onChange={this.handlePlayerProgressBarChange}\n              value={this.state.currentPlayerProgress}\n              labelRenderer={this.renderLabel}\n            />\n          </div>\n        </div>\n        <br />\n      </div>\n    );\n  }\n\n  private handleSeeked = () => {\n    // FIXME: loop in applyPlaybackDataFromStart keeps running if seeked from paused mode\n    this.stopPreviousPlaybackAndApplyFromStart(this.props.playbackData);\n  };\n\n  private handleAudioLoaded = () => {\n    this.props.handleSetSourcecastDuration(this.audio.current!.duration);\n  };\n\n  private applyDeltas = (deltas: CodeDelta[]) => {\n    this.props.handleSetCodeDeltasToApply(deltas);\n  };\n\n  private stopPreviousPlaybackAndApplyFromStart = (playbackData: PlaybackData) => {\n    this.setState(\n      {\n        currentDeltaRevision: this.state.currentDeltaRevision + 1\n      },\n      () => this.applyPlaybackDataFromStart(playbackData)\n    );\n  };\n\n  private applyPlaybackDataFromStart = async (playbackData: PlaybackData) => {\n    const sleep = (ms: number) => new Promise(r => setTimeout(r, ms));\n    const currentRevision = this.state.currentDeltaRevision;\n    let currentTime = this.audio.current!.currentTime * 1000;\n    this.props.handleEditorValueChange(playbackData.init.editorValue);\n    this.props.handleExternalSelect(playbackData.init.externalLibrary);\n    this.props.handleChapterSelect(playbackData.init.chapter);\n    const codeDeltasToApply = playbackData.inputs\n      .filter(\n        deltaWithTime => deltaWithTime.time <= currentTime && deltaWithTime.type === 'codeDelta'\n      )\n      .map(deltaWithTime => deltaWithTime.data as CodeDelta);\n    this.applyDeltas(codeDeltasToApply);\n\n    const futureData = playbackData.inputs.filter(\n      deltaWithTime => deltaWithTime.time > currentTime\n    );\n    const len = futureData.length;\n    let i = 0;\n    while (i < len && this.state.currentDeltaRevision === currentRevision) {\n      currentTime = this.audio.current!.currentTime * 1000;\n      if (futureData[i].time < currentTime) {\n        this.props.handleSetInputToApply(futureData[i]);\n        i++;\n        continue;\n      }\n      await sleep(20);\n    }\n  };\n\n  private stopCurrentPlayback() {\n    this.setState({\n      currentDeltaRevision: this.state.currentDeltaRevision + 1\n    });\n  }\n\n  private handlePlayerPausing = () => {\n    const audio = this.audio.current;\n    audio!.pause();\n    this.props.handleSetEditorReadonly(false);\n    this.props.handleSetSourcecastStatus(PlaybackStatus.paused);\n    this.stopCurrentPlayback();\n  };\n\n  private handlePlayerPlaying = () => {\n    const audio = this.audio.current;\n    audio!.play();\n    this.props.handleSetEditorReadonly(true);\n    this.props.handleSetSourcecastStatus(PlaybackStatus.playing);\n    this.stopPreviousPlaybackAndApplyFromStart(this.props.playbackData);\n  };\n\n  private handlePlayerStopping = () => {\n    this.props.handleSetEditorReadonly(false);\n    this.props.handleSetSourcecastStatus(PlaybackStatus.paused);\n    this.props.handleSetCurrentPlayerTime(0);\n    this.setState({\n      currentPlayerProgress: 0\n    });\n  };\n\n  private updatePlayerTime: React.ReactEventHandler<HTMLAudioElement> = e => {\n    const { currentTime }: { currentTime: number } = e.target as HTMLMediaElement;\n    this.props.handleSetCurrentPlayerTime(currentTime);\n    this.setState({\n      currentPlayerProgress: currentTime / this.props.duration\n    });\n  };\n\n  private handlePlayerProgressBarChange = (value: number) => {\n    if (this.audio.current) {\n      const currentTime = this.props.duration * value;\n      this.audio.current.currentTime = currentTime;\n      this.props.handleSetCurrentPlayerTime(currentTime);\n      this.setState({\n        currentPlayerProgress: value\n      });\n    }\n  };\n\n  private renderLabel = (value: number) => {\n    if (this.props.duration) {\n      const totalTime = this.props.duration * value;\n      const min = Math.floor(totalTime / 60);\n      const sec = Math.floor(totalTime - min * 60);\n      const minString = min < 10 ? '0' + min : min;\n      const secString = sec < 10 ? '0' + sec : sec;\n      return minString + ':' + secString;\n    } else {\n      return '00:00';\n    }\n  };\n}\n\nexport default SourceRecorderControlBar;\n","import 'ace-builds/src-noconflict/ext-searchbox';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'js-slang/dist/editors/ace/theme/source';\n\nimport { isEqual } from 'lodash';\nimport * as React from 'react';\nimport AceEditor, { IAceEditorProps } from 'react-ace';\nimport { HotKeys } from 'react-hotkeys';\n\nimport {\n  CodeDelta,\n  Input,\n  KeyboardCommand,\n  SelectionRange\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { Position } from '../editor/EditorTypes';\n\n/**\n * @property editorValue - The string content of the react-ace editor\n * @property handleEditorChange  - A callback function\n *           for the react-ace editor's `onChange`\n * @property handleEvalEditor  - A callback function for evaluation\n *           of the editor's content, using `slang`\n * @property editorReadonly - Used for sourcecast only\n */\nexport type SourceRecorderEditorProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  getTimerDuration?: () => number;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (newCode: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleFinishInvite?: () => void;\n  handleRecordInput?: (input: Input) => void;\n  handleSetWebsocketStatus?: (websocketStatus: number) => void;\n  handleUpdateHasUnsavedChanges?: (hasUnsavedChanges: boolean) => void;\n};\n\ntype StateProps = {\n  breakpoints: string[];\n  codeDeltasToApply?: CodeDelta[] | null;\n  editorReadonly?: boolean;\n  editorSessionId: string;\n  editorValue: string;\n  highlightedLines: number[][];\n  isEditorAutorun: boolean;\n  inputToApply?: Input | null;\n  isPlaying?: boolean;\n  isRecording?: boolean;\n  newCursorPosition?: Position;\n  sharedbAceInitValue?: string;\n  sharedbAceIsInviting?: boolean;\n};\n\nclass SourcecastEditor extends React.PureComponent<SourceRecorderEditorProps, {}> {\n  public ShareAce: any;\n  public AceEditor: React.RefObject<AceEditor>;\n  private onChangeMethod: (newCode: string, delta: CodeDelta) => void;\n  private onCursorChange: (selecction: any) => void;\n  private onSelectionChange: (selection: any) => void;\n\n  constructor(props: SourceRecorderEditorProps) {\n    super(props);\n    this.AceEditor = React.createRef();\n    this.ShareAce = null;\n    this.onChangeMethod = (newCode: string, delta: CodeDelta) => {\n      if (this.props.handleUpdateHasUnsavedChanges) {\n        this.props.handleUpdateHasUnsavedChanges(true);\n      }\n      this.props.handleEditorValueChange(newCode);\n      if (this.props.isRecording) {\n        this.props.handleRecordInput!({\n          type: 'codeDelta',\n          time: this.props.getTimerDuration!(),\n          data: delta\n        });\n      }\n      const annotations = this.AceEditor.current!.editor.getSession().getAnnotations();\n      if (this.props.isEditorAutorun && annotations.length === 0) {\n        this.props.handleEditorEval();\n      }\n    };\n    this.onCursorChange = (selection: any) => {\n      if (!this.props.isRecording) {\n        return;\n      }\n      const editorCursorPositionToBeApplied: Position = selection.getCursor();\n      this.props.handleRecordInput!({\n        type: 'cursorPositionChange',\n        time: this.props.getTimerDuration!(),\n        data: editorCursorPositionToBeApplied\n      });\n    };\n    this.onSelectionChange = (selection: any) => {\n      if (!this.props.isRecording) {\n        return;\n      }\n      const range: SelectionRange = selection.getRange();\n      const isBackwards: boolean = selection.isBackwards();\n      if (!isEqual(range.start, range.end)) {\n        this.props.handleRecordInput!({\n          type: 'selectionRangeData',\n          time: this.props.getTimerDuration!(),\n          data: { range, isBackwards }\n        });\n      }\n    };\n  }\n\n  public componentDidUpdate(prevProps: SourceRecorderEditorProps) {\n    const { codeDeltasToApply, inputToApply, newCursorPosition } = this.props;\n\n    if (codeDeltasToApply && codeDeltasToApply !== prevProps.codeDeltasToApply) {\n      this.AceEditor.current!.editor.session.getDocument().applyDeltas(codeDeltasToApply);\n      this.AceEditor.current!.editor.selection.clearSelection();\n    }\n\n    if (newCursorPosition && newCursorPosition !== prevProps.newCursorPosition) {\n      this.moveCursor(newCursorPosition);\n    }\n\n    if (!inputToApply || inputToApply === prevProps.inputToApply) {\n      return;\n    }\n\n    switch (inputToApply.type) {\n      case 'codeDelta':\n        this.AceEditor.current!.editor.session.getDocument().applyDelta(inputToApply.data);\n        this.AceEditor.current!.editor.selection.clearSelection();\n        break;\n      case 'cursorPositionChange':\n        this.moveCursor(inputToApply.data);\n        break;\n      case 'selectionRangeData':\n        const { range, isBackwards } = inputToApply.data;\n        this.AceEditor.current!.editor.selection.setRange(range, isBackwards);\n        break;\n      case 'keyboardCommand':\n        const keyboardCommand = inputToApply.data;\n        switch (keyboardCommand) {\n          case 'run':\n            this.props.handleEditorEval();\n            break;\n        }\n        break;\n    }\n  }\n\n  public getBreakpoints() {\n    return this.AceEditor.current!.editor.session.getBreakpoints().filter(x => x != null);\n  }\n\n  public componentDidMount() {\n    if (!this.AceEditor || !this.AceEditor.current || !this.AceEditor.current.editor) {\n      return;\n    }\n    const editor = this.AceEditor.current!.editor;\n    const session = editor.getSession();\n\n    editor.on('gutterclick' as any, this.handleGutterClick);\n\n    // Change all info annotations to error annotations\n    session.on('changeAnnotation' as any, this.handleAnnotationChange(session));\n  }\n\n  public componentWillUnmount() {\n    if (this.ShareAce !== null) {\n      // Umounting... Closing websocket\n      this.ShareAce.WS.close();\n    }\n    this.ShareAce = null;\n  }\n\n  public getMarkers = () => {\n    const markerProps: IAceEditorProps['markers'] = [];\n    for (const lineNum of this.props.highlightedLines) {\n      markerProps.push({\n        startRow: lineNum[0],\n        startCol: 0,\n        endRow: lineNum[1],\n        endCol: 1,\n        className: 'myMarker',\n        type: 'fullLine'\n      });\n    }\n    return markerProps;\n  };\n\n  public render() {\n    return (\n      <HotKeys className=\"Editor\" handlers={handlers}>\n        <div className=\"row editor-react-ace\">\n          <AceEditor\n            className=\"react-ace\"\n            commands={[\n              {\n                name: 'evaluate',\n                bindKey: {\n                  win: 'Shift-Enter',\n                  mac: 'Shift-Enter'\n                },\n                exec: this.handleEvaluate\n              },\n              {\n                name: 'navigate',\n                bindKey: {\n                  win: 'Ctrl-B',\n                  mac: 'Command-B'\n                },\n                exec: this.handleDeclarationNavigate\n              }\n            ]}\n            editorProps={{\n              $blockScrolling: Infinity\n            }}\n            ref={this.AceEditor}\n            markers={this.getMarkers()}\n            fontSize={17}\n            height=\"100%\"\n            highlightActiveLine={false}\n            mode=\"javascript\"\n            onChange={this.onChangeMethod}\n            onCursorChange={this.onCursorChange}\n            onSelectionChange={this.onSelectionChange}\n            readOnly={this.props.editorReadonly ? this.props.editorReadonly : false}\n            theme=\"source\"\n            value={this.props.editorValue}\n            width=\"100%\"\n            setOptions={{\n              fontFamily: \"'Inconsolata', monospace\"\n            }}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  private handleGutterClick = (e: any) => {\n    const target = e.domEvent.target;\n    if (\n      target.className.indexOf('ace_gutter-cell') === -1 ||\n      !e.editor.isFocused() ||\n      e.clientX > 35 + target.getBoundingClientRect().left\n    ) {\n      return;\n    }\n\n    const row = e.getDocumentPosition().row;\n    const content = e.editor.session.getLine(row);\n    const breakpoints = e.editor.session.getBreakpoints(row, 0);\n    if (\n      breakpoints[row] === undefined &&\n      content.length !== 0 &&\n      !content.includes('//') &&\n      !content.includes('debugger;')\n    ) {\n      e.editor.session.setBreakpoint(row);\n    } else {\n      e.editor.session.clearBreakpoint(row);\n    }\n    e.stop();\n    this.props.handleEditorUpdateBreakpoints(e.editor.session.$breakpoints);\n  };\n\n  private handleAnnotationChange = (session: any) => () => {\n    const annotations = session.getAnnotations();\n    let count = 0;\n    for (const anno of annotations) {\n      if (anno.type === 'info') {\n        anno.type = 'error';\n        anno.className = 'ace_error';\n        count++;\n      }\n    }\n    if (count !== 0) {\n      session.setAnnotations(annotations);\n    }\n  };\n\n  private handleEvaluate = () => {\n    this.props.handleEditorEval();\n    if (!this.props.isRecording) {\n      return;\n    }\n    this.props.handleRecordInput!({\n      type: 'keyboardCommand',\n      time: this.props.getTimerDuration!(),\n      data: KeyboardCommand.run\n    });\n  };\n\n  // Used in navigating from occurence to navigation\n  private moveCursor = (position: Position) => {\n    this.AceEditor.current!.editor.selection.clearSelection();\n    this.AceEditor.current!.editor.moveCursorToPosition(position);\n    this.AceEditor.current!.editor.renderer.showCursor();\n    this.AceEditor.current!.editor.renderer.scrollCursorIntoView(position, 0.5);\n  };\n\n  private handleDeclarationNavigate = () => {\n    this.props.handleDeclarationNavigate(this.AceEditor.current!.editor.getCursorPosition());\n  };\n}\n\n/* Override handler, so does not trigger when focus is in editor */\nconst handlers = {\n  goGreen: () => {}\n};\n\nexport default SourcecastEditor;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport controlButton from '../ControlButton';\n\ntype SourceRecorderDeleteCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDeleteSourcecastEntry: (id: number) => void;\n};\n\ntype StateProps = {\n  data: SourcecastData;\n};\n\ntype State = {\n  dialogOpen: boolean;\n};\n\nclass SourceRecorderDeleteCell extends React.Component<SourceRecorderDeleteCellProps, State> {\n  public constructor(props: SourceRecorderDeleteCellProps) {\n    super(props);\n    this.state = {\n      dialogOpen: false\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        {controlButton('', IconNames.TRASH, this.handleOpenDialog)}\n        <Dialog\n          icon=\"info-sign\"\n          isOpen={this.state.dialogOpen}\n          onClose={this.handleCloseDialog}\n          title=\"Delete Sourcecast\"\n          canOutsideClickClose={true}\n        >\n          <div className={Classes.DIALOG_BODY}>\n            <p>Are you sure to delete this sourcecast entry?</p>\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              {controlButton('Confirm Delete', IconNames.TRASH, this.handleDelete)}\n              {controlButton('Cancel', IconNames.CROSS, this.handleCloseDialog)}\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private handleCloseDialog = () => this.setState({ dialogOpen: false });\n  private handleOpenDialog = () => this.setState({ dialogOpen: true });\n  private handleDelete = () => {\n    const { data } = this.props;\n    this.props.handleDeleteSourcecastEntry(data.id);\n  };\n}\n\nexport default SourceRecorderDeleteCell;\n","import { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { PlaybackData, SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport controlButton from '../ControlButton';\n\ntype SourceRecorderSelectCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n};\n\ntype StateProps = {\n  data: SourcecastData;\n};\n\nclass SourceRecorderSelectCell extends React.Component<SourceRecorderSelectCellProps, {}> {\n  public constructor(props: SourceRecorderSelectCellProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div>{controlButton(`${this.props.data.title}`, IconNames.PLAY, this.handleSelect)}</div>\n    );\n  }\n\n  private handleSelect = () => {\n    const { data } = this.props;\n    const url = data.url;\n    const playbackData = JSON.parse(data.playbackData);\n    this.props.handleSetSourcecastData(data.title, data.description, url, playbackData);\n  };\n}\n\nexport default SourceRecorderSelectCell;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\n\nimport { Divider, FormGroup, InputGroup, NonIdealState, Spinner } from '@blueprintjs/core';\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\n\nimport { PlaybackData, SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { getStandardDate } from '../utils/DateHelper';\nimport SourcastDeleteCell from './SourceRecorderDeleteCell';\nimport SourceRecorderSelectCell from './SourceRecorderSelectCell';\n\ntype SourceRecorderTableProps = OwnProps;\n\ntype OwnProps = {\n  handleDeleteSourcecastEntry?: (id: number) => void;\n  handleFetchSourcecastIndex: () => void;\n  handleSetSourcecastData?: (\n    title: string,\n    description: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  sourcecastIndex: SourcecastData[] | null;\n};\n\n/**\n * Column Definitions are defined within the state, so that data\n * can be manipulated easier. See constructor for an example.\n */\ntype State = {\n  columnDefs: ColDef[];\n  filterValue: string;\n  groupFilterEnabled: boolean;\n};\n\nclass SourcecastTable extends React.Component<SourceRecorderTableProps, State> {\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n\n  public constructor(props: SourceRecorderTableProps) {\n    super(props);\n\n    this.state = {\n      columnDefs: [\n        {\n          headerName: 'Title',\n          field: 'title',\n          cellRendererFramework: SourceRecorderSelectCell,\n          cellRendererParams: {\n            handleSetSourcecastData: this.props.handleSetSourcecastData\n          },\n          width: 400,\n          suppressMovable: true,\n          suppressMenu: true,\n          cellStyle: {\n            'text-align': 'left'\n          },\n          hide: !this.props.handleSetSourcecastData\n        },\n        {\n          headerName: 'Title',\n          field: 'title',\n          width: 200,\n          suppressMovable: true,\n          suppressMenu: true,\n          hide: !!this.props.handleSetSourcecastData\n        },\n        {\n          headerName: 'Uploader',\n          field: 'uploader.name',\n          width: 200,\n          suppressMovable: true,\n          suppressMenu: true,\n          cellStyle: {\n            'text-align': 'center'\n          }\n        },\n        {\n          headerName: 'Date',\n          valueGetter: params => getStandardDate(params.data.inserted_at),\n          maxWidth: 200,\n          suppressMovable: true,\n          suppressMenu: true\n        },\n        {\n          headerName: 'Delete',\n          field: '',\n          cellRendererFramework: SourcastDeleteCell,\n          cellRendererParams: {\n            handleDeleteSourcecastEntry: this.props.handleDeleteSourcecastEntry\n          },\n          width: 100,\n          maxWidth: 100,\n          sortable: false,\n          suppressMovable: true,\n          suppressMenu: true,\n          cellStyle: {\n            'text-align': 'center'\n          },\n          hide: !this.props.handleDeleteSourcecastEntry\n        },\n        { headerName: 'description', field: 'description', hide: true },\n        { headerName: 'inserted_at', field: 'inserted_at', hide: true },\n        { headerName: 'updated_at', field: 'updated_at', hide: true },\n        { headerName: 'audio', field: 'audio', hide: true },\n        { headerName: 'playbackData', field: 'playbackData', hide: true },\n        { headerName: 'url', field: 'url', hide: true }\n      ],\n      filterValue: '',\n      groupFilterEnabled: false\n    };\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n  }\n\n  public componentDidMount() {\n    this.props.handleFetchSourcecastIndex();\n  }\n\n  public render() {\n    /* Display either a loading screen or a table with overviews. */\n    const loadingDisplay = (\n      <NonIdealState\n        className=\"Sourcecast\"\n        description=\"Fetching sourcecast index...\"\n        icon={<Spinner size={Spinner.SIZE_LARGE} />}\n      />\n    );\n    const data = sortBy(this.props.sourcecastIndex, [(a: SourcecastData) => -a.id]);\n\n    const grid = (\n      <div className=\"SourcecastContainer\">\n        <br />\n        <div>\n          <FormGroup label=\"\" labelFor=\"text-input\">\n            <InputGroup\n              id=\"searchBar\"\n              large={false}\n              leftIcon=\"search\"\n              placeholder=\"Search\"\n              value={this.state.filterValue}\n              onChange={this.handleFilterChange}\n            />\n          </FormGroup>\n        </div>\n        <Divider />\n        <div className=\"SourcecastTable\">\n          <div className=\"ag-grid-parent\">\n            <AgGridReact\n              domLayout={'autoHeight'}\n              columnDefs={this.state.columnDefs}\n              defaultColDef={this.defaultColumnDefs}\n              onGridReady={this.onGridReady}\n              rowData={data}\n              rowHeight={30}\n              pagination={false}\n              paginationPageSize={50}\n            />\n          </div>\n        </div>\n        <br />\n      </div>\n    );\n    return <div>{this.props.sourcecastIndex === undefined ? loadingDisplay : grid}</div>;\n  }\n\n  private handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const changeVal = event.target.value;\n    this.setState({ filterValue: changeVal });\n\n    if (this.gridApi) {\n      this.gridApi.setQuickFilter(changeVal);\n    }\n  };\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n    window.onresize = () => this.gridApi!.sizeColumnsToFit();\n  };\n}\n\nexport default SourcecastTable;\n","import { Card, H1, Popover } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport Recorder from 'yareco';\n\nimport controlButton from '../../../../commons/ControlButton';\nimport {\n  Input,\n  PlaybackData,\n  RecordingStatus\n} from '../../../../features/sourceRecorder/SourceRecorderTypes';\n\ntype SourcereelControlbarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleRecordInit: () => void;\n  handleResetInputs: (inputs: Input[]) => void;\n  handleSaveSourcecastData: (\n    title: string,\n    description: string,\n    audio: Blob,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetEditorReadonly: (readonly: boolean) => void;\n  handleTimerPause: () => void;\n  handleTimerReset: () => void;\n  handleTimerResume: (timeBefore: number) => void;\n  handleTimerStart: () => void;\n  handleTimerStop: () => void;\n  getTimerDuration: () => number;\n};\n\ntype StateProps = {\n  currentPlayerTime: number;\n  editorValue: string;\n  playbackData: PlaybackData;\n  recordingStatus: RecordingStatus;\n};\n\ntype State = {\n  duration: number;\n  fileDataBlob?: Blob;\n  updater?: NodeJS.Timeout;\n  saveTitle: string;\n  saveDescription: string;\n};\n\nclass SourcereelControlbar extends React.PureComponent<SourcereelControlbarProps, State> {\n  private recorder?: Recorder = undefined;\n\n  constructor(props: SourcereelControlbarProps) {\n    super(props);\n    this.state = {\n      duration: 0,\n      updater: undefined,\n      saveTitle: 'Title',\n      saveDescription: 'Description'\n    };\n  }\n\n  public async componentDidMount() {\n    Recorder.getPermission().then(\n      () => {},\n      (error: any) => {\n        alert('Microphone not found: ' + error);\n      }\n    );\n  }\n\n  public render() {\n    const RecorderPauseButton = controlButton('Pause', IconNames.PAUSE, this.handleRecorderPausing);\n    const RecorderResumeButton = controlButton(\n      'Resume',\n      IconNames.PLAY,\n      this.handleRecorderResuming\n    );\n    const RecorderResumeFromCurrentButton = controlButton(\n      'Resume Here',\n      IconNames.PLAY,\n      this.handleRecorderResumingFromCurrent\n    );\n    const RecorderStartButton = controlButton(\n      'Record',\n      IconNames.PLAY,\n      this.handleRecorderStarting\n    );\n    const RecorderStopButton = controlButton('Stop', IconNames.STOP, this.handleRecorderStopping);\n    const RecorderResetButton = controlButton(\n      'Reset',\n      IconNames.REFRESH,\n      this.handleRecorderResetting\n    );\n    const RecorderSaveButton = (\n      <Popover popoverClassName=\"Popover-share\" inheritDarkTheme={false}>\n        {controlButton('Save', IconNames.FLOPPY_DISK)}\n        <ul className=\"Sourcereel-save-form\">\n          <li className=\"form-row\">\n            <label htmlFor=\"title\">Title: </label>\n            <input\n              id=\"title\"\n              value={this.state.saveTitle}\n              onChange={this.handleSaveTitleInputChange}\n            />\n          </li>\n          <li className=\"form-row\">\n            <label htmlFor=\"description\">Description: </label>\n            <input\n              id=\"description\"\n              value={this.state.saveDescription}\n              onChange={this.handleSaveDescriptionInputChange}\n            />\n          </li>\n          <li>{controlButton('Submit', IconNames.TICK, this.handleRecorderSaving)}</li>\n        </ul>\n      </Popover>\n    );\n    return (\n      <div>\n        <br />\n        <div className=\"Timer\">\n          <Card elevation={2} style={{ background: '#24323F' }}>\n            <H1>\n              {this.renderLabel(\n                this.props.recordingStatus !== RecordingStatus.paused\n                  ? this.state.duration / 1000\n                  : this.props.currentPlayerTime\n              )}\n            </H1>\n          </Card>\n        </div>\n        <br />\n        <div className=\"RecorderControl\">\n          {this.props.recordingStatus === RecordingStatus.notStarted && RecorderStartButton}\n          {this.props.recordingStatus === RecordingStatus.paused && RecorderResumeButton}\n          {this.props.recordingStatus === RecordingStatus.paused && RecorderResumeFromCurrentButton}\n          {this.props.recordingStatus === RecordingStatus.recording && RecorderPauseButton}\n          {this.props.recordingStatus === RecordingStatus.paused && RecorderStopButton}\n          {/* {this.props.recordingStatus === RecordingStatus.finished && RecorderDownloadButton} */}\n          {this.props.recordingStatus === RecordingStatus.finished && RecorderSaveButton}\n          {this.props.recordingStatus !== RecordingStatus.notStarted && RecorderResetButton}\n        </div>\n        <br />\n      </div>\n    );\n  }\n\n  private updateTimerDuration = () => {\n    this.setState({ duration: this.props.getTimerDuration() });\n  };\n\n  private handleTruncatePlaybackData = () => {\n    const truncatedInputs = this.props.playbackData.inputs.filter(\n      deltaWithTime => deltaWithTime.time <= this.props.currentPlayerTime * 1000\n    );\n    this.props.handleResetInputs(truncatedInputs);\n  };\n\n  private handleRecorderPausing = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { handleSetEditorReadonly, handleSetSourcecastData, handleTimerPause } = this.props;\n    clearInterval(this.state.updater!);\n    handleSetEditorReadonly(true);\n    handleTimerPause();\n    this.recorder.pause();\n    const audioUrl = window.URL.createObjectURL(this.recorder.exportWAV());\n    handleSetSourcecastData('', '', audioUrl, this.props.playbackData);\n  };\n\n  private handleRecorderStarting = () => {\n    this.recorder = new Recorder();\n    const { handleRecordInit, handleSetEditorReadonly, handleTimerStart } = this.props;\n    this.recorder.start().then(\n      () => {\n        handleRecordInit();\n        handleSetEditorReadonly(false);\n        handleTimerStart();\n        const updater = setInterval(this.updateTimerDuration, 100);\n        this.setState({ updater });\n        // this.recorder.onRecord = (duration: number) => console.log(duration);\n      },\n      (error: any) => {\n        alert('Microphone not found: ' + error);\n      }\n    );\n  };\n\n  private handleRecorderResuming = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { handleSetEditorReadonly, handleTimerResume } = this.props;\n    handleSetEditorReadonly(false);\n    // -1 means resume from the end\n    handleTimerResume(-1);\n    const updater = setInterval(this.updateTimerDuration, 100);\n    this.setState({ updater });\n    this.recorder.resume();\n  };\n\n  private handleRecorderResumingFromCurrent = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { currentPlayerTime, handleSetEditorReadonly, handleTimerResume } = this.props;\n    this.handleTruncatePlaybackData();\n    handleSetEditorReadonly(false);\n    handleTimerResume(currentPlayerTime * 1000);\n    const updater = setInterval(this.updateTimerDuration, 100);\n    this.setState({ updater });\n    this.recorder.resume(currentPlayerTime);\n  };\n\n  private handleRecorderStopping = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { handleSetEditorReadonly, handleTimerStop } = this.props;\n    handleSetEditorReadonly(false);\n    handleTimerStop();\n    clearInterval(this.state.updater!);\n    this.recorder.stop();\n    this.setState({\n      fileDataBlob: this.recorder.exportWAV()\n    });\n    this.recorder.clear();\n  };\n\n  private handleRecorderResetting = () => {\n    const { handleSetEditorReadonly, handleTimerReset } = this.props;\n    handleSetEditorReadonly(false);\n    handleTimerReset();\n    clearInterval(this.state.updater!);\n    this.setState({ duration: 0 });\n    if (this.recorder) {\n      this.recorder.stop();\n      this.recorder.clear();\n    }\n  };\n\n  private handleRecorderSaving = () => {\n    if (!this.state.fileDataBlob) {\n      alert('No recording found');\n      return;\n    }\n    this.props.handleSaveSourcecastData(\n      this.state.saveTitle,\n      this.state.saveDescription,\n      this.state.fileDataBlob,\n      this.props.playbackData\n    );\n  };\n\n  private renderLabel = (value: number) => {\n    const min = Math.floor(value / 60);\n    const sec = Math.floor(value - min * 60);\n    const minString = min < 10 ? '0' + min : min;\n    const secString = sec < 10 ? '0' + sec : sec;\n    return minString + ':' + secString;\n  };\n\n  private handleSaveTitleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ saveTitle: event.target.value });\n  };\n\n  private handleSaveDescriptionInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ saveDescription: event.target.value });\n  };\n}\n\nexport default SourcereelControlbar;\n","import { Classes, Pre } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\n\nimport { InterpreterOutput } from '../../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../../commons/application/types/ExternalTypes';\nimport { ControlBarAutorunButtons } from '../../../commons/controlBar/ControlBarAutorunButtons';\nimport { ControlBarChapterSelect } from '../../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarExternalLibrarySelect } from '../../../commons/controlBar/ControlBarExternalLibrarySelect';\nimport { Position } from '../../../commons/editor/EditorTypes';\nimport SideContentEnvVisualizer from '../../../commons/sideContent/SideContentEnvVisualizer';\nimport SideContentInspector from '../../../commons/sideContent/SideContentInspector';\nimport SideContentListVisualizer from '../../../commons/sideContent/SideContentListVisualizer';\nimport { SideContentTab, SideContentType } from '../../../commons/sideContent/SideContentTypes';\nimport SourceRecorderControlBar, {\n  SourceRecorderControlBarProps\n} from '../../../commons/sourceRecorder/SourceRecorderControlBar';\nimport SourcecastEditor, {\n  SourceRecorderEditorProps\n} from '../../../commons/sourceRecorder/SourceRecorderEditor';\nimport SourcecastTable from '../../../commons/sourceRecorder/SourceRecorderTable';\nimport Workspace, { WorkspaceProps } from '../../../commons/workspace/Workspace';\nimport {\n  CodeDelta,\n  Input,\n  KeyboardCommand,\n  PlaybackData,\n  PlaybackStatus,\n  RecordingStatus,\n  SourcecastData\n} from '../../../features/sourceRecorder/SourceRecorderTypes';\nimport SourcereelControlbar from './subcomponents/SourcereelControlbar';\n\ntype SourcereelProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleActiveTabChange: (activeTab: SideContentType) => void;\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChapterSelect: (chapter: number) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleDeleteSourcecastEntry: (id: number) => void;\n  handleEditorEval: () => void;\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleExternalSelect: (externalLibraryName: ExternalLibraryName) => void;\n  handleFetchSourcecastIndex: () => void;\n  handleInterruptEval: () => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n  handleResetInputs: (inputs: Input[]) => void;\n  handleRecordInput: (input: Input) => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleRecordInit: (initData: PlaybackData['init']) => void;\n  handleSaveSourcecastData: (\n    title: string,\n    description: string,\n    audio: Blob,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetCurrentPlayerTime: (playTime: number) => void;\n  handleSetCodeDeltasToApply: (delta: CodeDelta[]) => void;\n  handleSetEditorReadonly: (editorReadonly: boolean) => void;\n  handleSetInputToApply: (inputToApply: Input) => void;\n  handleSetSourcecastDuration: (duration: number) => void;\n  handleSetSourcecastStatus: (PlaybackStatus: PlaybackStatus) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleTimerPause: () => void;\n  handleTimerReset: () => void;\n  handleTimerResume: (timeBefore: number) => void;\n  handleTimerStart: () => void;\n  handleTimerStop: () => void;\n  handleToggleEditorAutorun: () => void;\n};\n\nexport type StateProps = {\n  audioUrl: string;\n  currentPlayerTime: number;\n  codeDeltasToApply: CodeDelta[] | null;\n  breakpoints: string[];\n  editorHeight?: string;\n  editorReadonly: boolean;\n  editorValue: string;\n  editorWidth: string;\n  enableDebugging: boolean;\n  externalLibraryName: string;\n  highlightedLines: number[][];\n  inputToApply: Input | null;\n  isDebugging: boolean;\n  isEditorAutorun: boolean;\n  isRunning: boolean;\n  newCursorPosition?: Position;\n  output: InterpreterOutput[];\n  playbackData: PlaybackData;\n  playbackDuration: number;\n  playbackStatus: PlaybackStatus;\n  recordingStatus: RecordingStatus;\n  replValue: string;\n  timeElapsedBeforePause: number;\n  sideContentActiveTab: SideContentType;\n  sideContentHeight?: number;\n  sourcecastIndex: SourcecastData[] | null;\n  sourceChapter: number;\n  sourceVariant: Variant;\n  timeResumed: number;\n};\n\nclass Sourcereel extends React.Component<SourcereelProps> {\n  public componentDidUpdate(prevProps: SourcereelProps) {\n    const { inputToApply } = this.props;\n\n    if (!inputToApply || inputToApply === prevProps.inputToApply) {\n      return;\n    }\n\n    switch (inputToApply.type) {\n      case 'activeTabChange':\n        this.props.handleActiveTabChange(inputToApply.data);\n        break;\n      case 'chapterSelect':\n        this.props.handleChapterSelect(inputToApply.data);\n        break;\n      case 'externalLibrarySelect':\n        this.props.handleExternalSelect(inputToApply.data);\n        break;\n    }\n  }\n\n  public render() {\n    const editorEvalHandler = () => {\n      this.props.handleEditorEval();\n      if (this.props.recordingStatus !== RecordingStatus.recording) {\n        return;\n      }\n      this.props.handleRecordInput({\n        time: this.getTimerDuration(),\n        type: 'keyboardCommand',\n        data: KeyboardCommand.run\n      });\n    };\n    const autorunButtons = (\n      <ControlBarAutorunButtons\n        handleDebuggerPause={this.props.handleDebuggerPause}\n        handleDebuggerReset={this.props.handleDebuggerReset}\n        handleDebuggerResume={this.props.handleDebuggerResume}\n        handleEditorEval={editorEvalHandler}\n        handleInterruptEval={this.props.handleInterruptEval}\n        handleToggleEditorAutorun={this.props.handleToggleEditorAutorun}\n        isDebugging={this.props.isDebugging}\n        isEditorAutorun={this.props.isEditorAutorun}\n        isRunning={this.props.isRunning}\n        key=\"autorun\"\n      />\n    );\n\n    const chapterSelectHandler = ({ chapter }: { chapter: number }, e: any) => {\n      this.props.handleChapterSelect(chapter);\n      if (this.props.recordingStatus !== RecordingStatus.recording) {\n        return;\n      }\n      this.props.handleRecordInput({\n        time: this.getTimerDuration(),\n        type: 'chapterSelect',\n        data: chapter\n      });\n    };\n\n    const chapterSelect = (\n      <ControlBarChapterSelect\n        handleChapterSelect={chapterSelectHandler}\n        sourceChapter={this.props.sourceChapter}\n        sourceVariant={this.props.sourceVariant}\n        key=\"chapter\"\n      />\n    );\n\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={this.props.handleReplOutputClear}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={this.props.handleReplEval}\n        isRunning={this.props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    const externalSelectHandler = ({ name }: { name: ExternalLibraryName }, e: any) => {\n      this.props.handleExternalSelect(name);\n      if (this.props.recordingStatus !== RecordingStatus.recording) {\n        return;\n      }\n      this.props.handleRecordInput({\n        time: this.getTimerDuration(),\n        type: 'externalLibrarySelect',\n        data: name\n      });\n    };\n\n    const externalLibrarySelect = (\n      <ControlBarExternalLibrarySelect\n        externalLibraryName={this.props.externalLibraryName}\n        handleExternalSelect={externalSelectHandler}\n        key=\"external_library\"\n      />\n    );\n\n    const editorProps: SourceRecorderEditorProps = {\n      codeDeltasToApply: this.props.codeDeltasToApply,\n      editorReadonly: this.props.editorReadonly,\n      editorValue: this.props.editorValue,\n      editorSessionId: '',\n      getTimerDuration: this.getTimerDuration,\n      handleDeclarationNavigate: this.props.handleDeclarationNavigate,\n      handleEditorEval: this.props.handleEditorEval,\n      handleEditorValueChange: this.props.handleEditorValueChange,\n      isEditorAutorun: this.props.isEditorAutorun,\n      inputToApply: this.props.inputToApply,\n      isPlaying: this.props.playbackStatus === PlaybackStatus.playing,\n      isRecording: this.props.recordingStatus === RecordingStatus.recording,\n      breakpoints: this.props.breakpoints,\n      highlightedLines: this.props.highlightedLines,\n      newCursorPosition: this.props.newCursorPosition,\n      handleEditorUpdateBreakpoints: this.props.handleEditorUpdateBreakpoints,\n      handleRecordInput: this.props.handleRecordInput\n    };\n\n    const activeTabChangeHandler = (activeTab: SideContentType) => {\n      this.props.handleActiveTabChange(activeTab);\n      if (this.props.recordingStatus !== RecordingStatus.recording) {\n        return;\n      }\n      this.props.handleRecordInput({\n        time: this.getTimerDuration(),\n        type: 'activeTabChange',\n        data: activeTab\n      });\n    };\n\n    const workspaceProps: WorkspaceProps = {\n      controlBarProps: {\n        editorButtons: [autorunButtons, chapterSelect, externalLibrarySelect],\n        replButtons: [evalButton, clearButton]\n      },\n      customEditor: <SourcecastEditor {...editorProps} />,\n      editorHeight: this.props.editorHeight,\n      editorWidth: this.props.editorWidth,\n      handleEditorHeightChange: this.props.handleEditorHeightChange,\n      handleEditorWidthChange: this.props.handleEditorWidthChange,\n      handleSideContentHeightChange: this.props.handleSideContentHeightChange,\n      replProps: {\n        output: this.props.output,\n        replValue: this.props.replValue,\n        handleBrowseHistoryDown: this.props.handleBrowseHistoryDown,\n        handleBrowseHistoryUp: this.props.handleBrowseHistoryUp,\n        handleReplEval: this.props.handleReplEval,\n        handleReplValueChange: this.props.handleReplValueChange\n      },\n      sideContentHeight: this.props.sideContentHeight,\n      sideContentProps: {\n        handleActiveTabChange: activeTabChangeHandler,\n        selectedTabId: this.props.sideContentActiveTab,\n        tabs: [\n          {\n            label: 'Recording Panel',\n            iconName: IconNames.COMPASS,\n            body: (\n              <div>\n                <span className=\"Multi-line\">\n                  <Pre> {INTRODUCTION} </Pre>\n                </span>\n                <SourcereelControlbar\n                  currentPlayerTime={this.props.currentPlayerTime}\n                  editorValue={this.props.editorValue}\n                  getTimerDuration={this.getTimerDuration}\n                  playbackData={this.props.playbackData}\n                  handleRecordInit={this.handleRecordInit}\n                  handleResetInputs={this.props.handleResetInputs}\n                  handleSaveSourcecastData={this.props.handleSaveSourcecastData}\n                  handleSetSourcecastData={this.props.handleSetSourcecastData}\n                  handleSetEditorReadonly={this.props.handleSetEditorReadonly}\n                  handleTimerPause={this.props.handleTimerPause}\n                  handleTimerReset={this.props.handleTimerReset}\n                  handleTimerResume={this.props.handleTimerResume}\n                  handleTimerStart={this.props.handleTimerStart}\n                  handleTimerStop={this.props.handleTimerStop}\n                  recordingStatus={this.props.recordingStatus}\n                />\n              </div>\n            ),\n            id: SideContentType.sourcereel,\n            toSpawn: () => true\n          },\n          {\n            label: 'Sourcecast Table',\n            iconName: IconNames.EDIT,\n            body: (\n              <div>\n                <SourcecastTable\n                  handleDeleteSourcecastEntry={this.props.handleDeleteSourcecastEntry}\n                  handleFetchSourcecastIndex={this.props.handleFetchSourcecastIndex}\n                  sourcecastIndex={this.props.sourcecastIndex}\n                />\n              </div>\n            ),\n            id: SideContentType.introduction,\n            toSpawn: () => true\n          },\n          listVisualizerTab,\n          inspectorTab,\n          envVisualizerTab\n        ],\n        workspaceLocation: 'sourcereel'\n      }\n    };\n    const sourcecastControlbarProps: SourceRecorderControlBarProps = {\n      handleEditorValueChange: this.props.handleEditorValueChange,\n      handlePromptAutocomplete: this.props.handlePromptAutocomplete,\n      handleSetCurrentPlayerTime: this.props.handleSetCurrentPlayerTime,\n      handleSetCodeDeltasToApply: this.props.handleSetCodeDeltasToApply,\n      handleSetEditorReadonly: this.props.handleSetEditorReadonly,\n      handleSetInputToApply: this.props.handleSetInputToApply,\n      handleSetSourcecastDuration: this.props.handleSetSourcecastDuration,\n      handleSetSourcecastStatus: this.props.handleSetSourcecastStatus,\n      audioUrl: this.props.audioUrl,\n      currentPlayerTime: this.props.currentPlayerTime,\n      duration: this.props.playbackDuration,\n      playbackData: this.props.playbackData,\n      playbackStatus: this.props.playbackStatus,\n      handleChapterSelect: this.props.handleChapterSelect,\n      handleExternalSelect: this.props.handleExternalSelect\n    };\n    return (\n      <div className={classNames('Sourcereel', Classes.DARK)}>\n        {this.props.recordingStatus === RecordingStatus.paused ? (\n          <SourceRecorderControlBar {...sourcecastControlbarProps} />\n        ) : undefined}\n        <Workspace {...workspaceProps} />\n      </div>\n    );\n  }\n\n  public getTimerDuration = () =>\n    this.props.timeElapsedBeforePause + Date.now() - this.props.timeResumed;\n\n  private handleRecordInit = () =>\n    this.props.handleRecordInit({\n      chapter: this.props.sourceChapter,\n      externalLibrary: this.props.externalLibraryName as ExternalLibraryName,\n      editorValue: this.props.editorValue\n    });\n}\n\nconst INTRODUCTION = 'Welcome to Sourcereel!';\n\nconst listVisualizerTab: SideContentTab = {\n  label: 'Data Visualizer',\n  iconName: IconNames.EYE_OPEN,\n  body: <SideContentListVisualizer />,\n  id: SideContentType.dataVisualiser,\n  toSpawn: () => true\n};\n\nconst inspectorTab: SideContentTab = {\n  label: 'Inspector',\n  iconName: IconNames.SEARCH,\n  body: <SideContentInspector />,\n  id: SideContentType.inspector,\n  toSpawn: () => true\n};\n\nconst envVisualizerTab: SideContentTab = {\n  label: 'Env Visualizer',\n  iconName: IconNames.GLOBE,\n  body: <SideContentEnvVisualizer />,\n  id: SideContentType.envVisualiser,\n  toSpawn: () => true\n};\n\nexport default Sourcereel;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../../../commons/application/actions/InterpreterActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../../commons/application/types/ExternalTypes';\nimport { Position } from '../../../commons/editor/EditorTypes';\nimport { SideContentType } from '../../../commons/sideContent/SideContentTypes';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeEditorHeight,\n  changeEditorWidth,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  externalLibrarySelect,\n  navigateToDeclaration,\n  promptAutocomplete,\n  setEditorBreakpoint,\n  setEditorReadonly,\n  toggleEditorAutorun,\n  updateActiveTab,\n  updateEditorValue,\n  updateReplValue\n} from '../../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport { fetchSourcecastIndex } from '../../../features/sourceRecorder/sourcecast/SourcecastActions';\nimport {\n  saveSourcecastData,\n  setCodeDeltasToApply,\n  setCurrentPlayerTime,\n  setInputToApply,\n  setSourcecastData,\n  setSourcecastDuration,\n  setSourcecastStatus\n} from '../../../features/sourceRecorder/SourceRecorderActions';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus\n} from '../../../features/sourceRecorder/SourceRecorderTypes';\nimport {\n  deleteSourcecastEntry,\n  recordInit,\n  recordInput,\n  resetInputs,\n  timerPause,\n  timerReset,\n  timerResume,\n  timerStart,\n  timerStop\n} from '../../../features/sourceRecorder/sourcereel/SourcereelActions';\nimport Sourcereel, { DispatchProps, StateProps } from './Sourcereel';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  audioUrl: state.workspaces.sourcecast.audioUrl,\n  currentPlayerTime: state.workspaces.sourcecast.currentPlayerTime,\n  codeDeltasToApply: state.workspaces.sourcecast.codeDeltasToApply,\n  breakpoints: state.workspaces.sourcereel.breakpoints,\n  editorReadonly: state.workspaces.sourcereel.editorReadonly,\n  editorValue: state.workspaces.sourcereel.editorValue!,\n  editorWidth: state.workspaces.sourcereel.editorWidth,\n  enableDebugging: state.workspaces.sourcereel.enableDebugging,\n  externalLibraryName: state.workspaces.sourcereel.externalLibrary,\n  highlightedLines: state.workspaces.sourcereel.highlightedLines,\n  inputToApply: state.workspaces.sourcecast.inputToApply,\n  isDebugging: state.workspaces.sourcereel.isDebugging,\n  isEditorAutorun: state.workspaces.sourcereel.isEditorAutorun,\n  isRunning: state.workspaces.sourcereel.isRunning,\n  newCursorPosition: state.workspaces.sourcereel.newCursorPosition,\n  output: state.workspaces.sourcereel.output,\n  playbackData: state.workspaces.sourcereel.playbackData,\n  playbackDuration: state.workspaces.sourcecast.playbackDuration,\n  playbackStatus: state.workspaces.sourcecast.playbackStatus,\n  recordingStatus: state.workspaces.sourcereel.recordingStatus,\n  replValue: state.workspaces.sourcereel.replValue,\n  sideContentHeight: state.workspaces.sourcereel.sideContentHeight,\n  sideContentActiveTab: state.workspaces.sourcereel.sideContentActiveTab,\n  sourcecastIndex: state.workspaces.sourcecast.sourcecastIndex,\n  sourceChapter: state.workspaces.sourcereel.context.chapter,\n  sourceVariant: state.workspaces.sourcereel.context.variant,\n  timeElapsedBeforePause: state.workspaces.sourcereel.timeElapsedBeforePause,\n  timeResumed: state.workspaces.sourcereel.timeResumed\n});\n\nconst location: WorkspaceLocation = 'sourcereel';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleActiveTabChange: (activeTab: SideContentType) => updateActiveTab(activeTab, location),\n      handleBrowseHistoryDown: () => browseReplHistoryDown(location),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(location),\n      handleChapterSelect: (chapter: number) => chapterSelect(chapter, 'default', location),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(location, cursorPosition),\n      handleDeleteSourcecastEntry: (id: number) => deleteSourcecastEntry(id, 'sourcecast'),\n      handleEditorEval: () => evalEditor(location),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, location),\n      handleEditorHeightChange: (height: number) => changeEditorHeight(height, location),\n      handleEditorWidthChange: (widthChange: number) =>\n        changeEditorWidth(widthChange.toString(), location),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, location),\n      handleExternalSelect: (externalLibraryName: ExternalLibraryName) =>\n        externalLibrarySelect(externalLibraryName, location),\n      handleFetchSourcecastIndex: () => fetchSourcecastIndex('sourcecast'),\n      handleInterruptEval: () => beginInterruptExecution(location),\n      handleRecordInput: (input: Input) => recordInput(input, location),\n      handleReplEval: () => evalRepl(location),\n      handleReplOutputClear: () => clearReplOutput(location),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, location),\n      handleSaveSourcecastData: (\n        title: string,\n        description: string,\n        audio: Blob,\n        playbackData: PlaybackData\n      ) => saveSourcecastData(title, description, audio, playbackData, 'sourcecast'),\n      handleSetCurrentPlayerTime: (playerTime: number) =>\n        setCurrentPlayerTime(playerTime, 'sourcecast'),\n      handleSetCodeDeltasToApply: (deltas: CodeDelta[]) =>\n        setCodeDeltasToApply(deltas, 'sourcecast'),\n      handleSetInputToApply: (inputToApply: Input) => setInputToApply(inputToApply, 'sourcecast'),\n      handleSetSourcecastData: (\n        title: string,\n        description: string,\n        audioUrl: string,\n        playbackData: PlaybackData\n      ) => setSourcecastData(title, description, audioUrl, playbackData, 'sourcecast'),\n      handleSetSourcecastDuration: (duration: number) =>\n        setSourcecastDuration(duration, 'sourcecast'),\n      handleSetSourcecastStatus: (playbackStatus: PlaybackStatus) =>\n        setSourcecastStatus(playbackStatus, 'sourcecast'),\n      handleSetEditorReadonly: (readonly: boolean) => setEditorReadonly(location, readonly),\n      handleResetInputs: (inputs: Input[]) => resetInputs(inputs, location),\n      handleRecordInit: (initData: PlaybackData['init']) => recordInit(initData, location),\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, location),\n      handleTimerPause: () => timerPause(location),\n      handleTimerReset: () => timerReset(location),\n      handleTimerResume: (timeBefore: number) => timerResume(timeBefore, location),\n      handleTimerStart: () => timerStart(location),\n      handleTimerStop: () => timerStop(location),\n      handleToggleEditorAutorun: () => toggleEditorAutorun(location),\n      handleDebuggerPause: () => beginDebuggerPause(location),\n      handleDebuggerResume: () => debuggerResume(location),\n      handleDebuggerReset: () => debuggerReset(location),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(location, row, col, callback)\n    },\n    dispatch\n  );\n\nconst SourcereelContainer = connect(mapStateToProps, mapDispatchToProps)(Sourcereel);\n\nexport default SourcereelContainer;\n","import Constants from 'src/commons/utils/Constants';\n\nexport async function createAssetRequest(\n  accessToken: string = '',\n  requestPath: string,\n  method: string,\n  headerConfig: object = {},\n  requestDetails: object = {}\n) {\n  try {\n    const headers = createHeaders(accessToken);\n    Object.entries(headerConfig).forEach(([key, value]: string[]) => {\n      headers.append(key, value);\n    });\n\n    const config = {\n      method,\n      headers,\n      ...requestDetails\n    };\n\n    return fetch(Constants.backendUrl + '/v1/assets/' + requestPath, config);\n  } finally {\n  }\n}\n\nexport function createHeaders(accessToken: string): Headers {\n  const headers = new Headers();\n  headers.append('Accept', 'application/json');\n  headers.append('Authorization', `Bearer ${accessToken}`);\n  return headers;\n}\n","import { createAssetRequest } from './StorySimulatorRequest';\n\nexport const s3AssetFolders = [\n  'locations',\n  'objects',\n  'images',\n  'avatars',\n  'ui',\n  'sfx',\n  'bgm',\n  'stories'\n];\n\nexport async function fetchAssetPaths(accessToken: string = '', folders: string[]) {\n  const files = await Promise.all(\n    folders.map(async folderName => {\n      const files = await fetchFolder(accessToken, folderName);\n      return files.length ? files : [`${folderName}`];\n    })\n  );\n  return files.reduce((combinedList, newList) => combinedList.concat(newList), []);\n}\n\nasync function fetchFolder(accessToken: string, folderName: string) {\n  const response = await createAssetRequest(accessToken, folderName, 'GET', {\n    'Content-Type': 'application/json'\n  });\n  return response.status === 200 ? response.json() : [];\n}\n\nexport async function deleteS3File(accessToken: string, assetPath: string) {\n  const response = await createAssetRequest(accessToken, assetPath, 'DELETE');\n  const message = await response.text();\n  return message || 'Successfully Deleted';\n}\n\nexport async function uploadAssets(\n  accessToken: string,\n  fileList: FileList,\n  folderName: string,\n  types: string[]\n) {\n  const responses = await Promise.all(\n    Array.from(fileList).map(async file => {\n      const response = await uploadAsset(accessToken, file, folderName, file.name, types);\n      return file.name + ' => ' + response;\n    })\n  );\n  return responses.join('\\n');\n}\n\nexport async function uploadAsset(\n  accessToken: string,\n  file: Blob,\n  folderName: string,\n  fileName: string,\n  types: string[]\n) {\n  if (types.every(type => !file.type.startsWith(type))) {\n    return `Allowed types are ${types.join(',')}`;\n  }\n  const formData = new FormData();\n  formData.set('upload', file);\n\n  const response = await createAssetRequest(\n    accessToken,\n    `${folderName}/${fileName}`,\n    'POST',\n    {},\n    { body: formData, mode: 'cors' }\n  );\n\n  return response ? response.text() : '';\n}\n","import { Button, InputGroup, Menu, MenuItem, Popover, Position } from '@blueprintjs/core';\nimport * as React from 'react';\nimport { s3AssetFolders, uploadAssets } from 'src/features/storySimulator/StorySimulatorService';\n\ntype Props = {\n  accessToken?: string;\n};\n\nconst specifyFolderText = 'Specify own folder...';\nconst folderOverwritePlaceholder = \"Or specify your own, e.g. 'locations/hallway'\";\n\nfunction AssetFileUploader({ accessToken }: Props) {\n  const [fileList, setFileList] = React.useState<FileList>();\n  const [folder, setFolder] = React.useState<string>('locations');\n\n  const [showfolderOverwrite, setShowFolderOverwrite] = React.useState<boolean>(false);\n  const [folderOverwrite, setFolderOverwrite] = React.useState<string>();\n\n  function onLoadFile(e: React.ChangeEvent<HTMLInputElement>) {\n    if (!e.target.files) return;\n    const loadedFiles = e.target.files;\n    setFileList(loadedFiles);\n  }\n\n  async function onUploadButtonClick() {\n    const finalFolder = folderOverwrite || folder;\n    if (!accessToken || !fileList || !finalFolder) return;\n    const resp = await uploadAssets(accessToken, fileList, finalFolder, ['image', 'audio', 'text']);\n    alert(resp);\n  }\n\n  function onChangeFolder(e: any) {\n    if (!e.target.innerText) return;\n    setFolder(e.target.innerText);\n    setShowFolderOverwrite(false);\n  }\n\n  function onChangeFolderOverwrite(e: any) {\n    setFolderOverwrite(e.target.value);\n  }\n\n  function showSpecifyFolder(e: any) {\n    if (!e.target.innerText) return;\n    setFolder(e.target.innerText);\n    setShowFolderOverwrite(true);\n  }\n\n  return (\n    <div className=\"LeftAlign\">\n      <h4>Choose Folder</h4>\n      <Popover position={Position.BOTTOM}>\n        <Button text={folder} />\n        <Menu>\n          {s3AssetFolders.map(folder => (\n            <MenuItem onClick={onChangeFolder} id={folder} key={folder} text={folder} />\n          ))}\n          <MenuItem\n            onClick={showSpecifyFolder}\n            id={specifyFolderText}\n            key={specifyFolderText}\n            text={specifyFolderText}\n          ></MenuItem>\n        </Menu>\n      </Popover>\n      {showfolderOverwrite && (\n        <InputGroup placeholder={folderOverwritePlaceholder} onChange={onChangeFolderOverwrite} />\n      )}\n      <br />\n      <h4>Choose File</h4>\n      <input type=\"file\" multiple onChange={onLoadFile} />\n      <Button onClick={onUploadButtonClick}>Upload</Button>\n    </div>\n  );\n}\n\nexport default AssetFileUploader;\n","import * as React from 'react';\nimport { Constants } from 'src/features/game/commons/CommonConstants';\n\ntype AssetProps = {\n  assetPath: string;\n};\n\nfunction AssetViewer({ assetPath }: AssetProps) {\n  const displayAssetPath = assetPath || Constants.defaultAssetPath;\n  return (\n    <>\n      <img\n        alt=\"asset\"\n        crossOrigin={'anonymous'}\n        src={Constants.assetsFolder + displayAssetPath}\n        width=\"150px\"\n      ></img>\n    </>\n  );\n}\n\nexport default AssetViewer;\n","import { Icon, ITreeNode, Tooltip, Tree } from '@blueprintjs/core';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { deleteS3File } from 'src/features/storySimulator/StorySimulatorService';\n\nimport StorySimulatorAssetViewer from './StorySimulatorAssetViewer';\n\ntype TreeState = {\n  nodes: ITreeNode[];\n};\n\ntype Props = {\n  assetPaths: string[];\n  accessToken?: string;\n  folders: string[];\n};\n\nfunction StorySimulatorAssetSelection({ assetPaths, accessToken, folders }: Props) {\n  const [currentAsset, setCurrentAsset] = React.useState('');\n  const [assetTree, setAssetTree] = React.useState<TreeState>({ nodes: [] });\n\n  React.useEffect(() => {\n    if (!accessToken) return;\n\n    setAssetTree({ nodes: assetPathsToTree(assetPaths, accessToken, folders) });\n  }, [accessToken, assetPaths, folders]);\n\n  const handleNodeClick = React.useCallback(\n    (nodeData: ITreeNode) => {\n      treeMap(assetTree.nodes, (node: ITreeNode) => (node.isSelected = false));\n      nodeData.isSelected = !nodeData.isSelected;\n      nodeData.isExpanded = !nodeData.isExpanded;\n      const selectedPath = nodeData.id.toString();\n      if (!nodeData.childNodes) {\n        setCurrentAsset(selectedPath);\n        sessionStorage.setItem('selectedAsset', selectedPath);\n      }\n      setAssetTree({ ...assetTree });\n    },\n    [assetTree, setCurrentAsset]\n  );\n\n  return (\n    <>\n      <StorySimulatorAssetViewer assetPath={currentAsset} />\n      <Tree contents={assetTree.nodes} onNodeClick={handleNodeClick} />\n    </>\n  );\n}\n\nexport default StorySimulatorAssetSelection;\n\nfunction treeMap(nodes: ITreeNode[] | undefined, fn: (node: ITreeNode) => void) {\n  nodes &&\n    nodes.forEach(node => {\n      fn(node);\n      treeMap(node.childNodes, fn);\n    });\n}\n\nconst deleteFile = (filePath: string, accessToken: string) => async () => {\n  const confirm = window.confirm(\n    `Are you sure you want to delete ${filePath}?\\nThere is no undoing this action!`\n  );\n  alert(confirm ? await deleteS3File(accessToken, filePath) : 'Whew');\n};\n\nfunction assetPathsToTree(\n  assetPaths: string[],\n  accessToken: string,\n  folders: string[]\n): ITreeNode[] {\n  const assetObj = {};\n  assetPaths.forEach(assetPath => _.set(assetObj, assetPath.split('/'), 'FILE'));\n  folders.forEach(folder => {\n    if (!assetObj[folder] || assetObj[folder] === 'FILE') {\n      assetObj[folder] = [];\n    }\n  });\n\n  function helper(parentFolders: string[], assetObj: object | Array<string>): ITreeNode[] {\n    return Object.keys(assetObj).map(file => {\n      const shortPath = '/' + parentFolders.join('/') + '/' + file;\n      return {\n        id: shortPath,\n        label: file,\n        secondaryLabel: (\n          <Tooltip content=\"Delete\">\n            <Icon icon=\"trash\" onClick={deleteFile(shortPath, accessToken)} />\n          </Tooltip>\n        ),\n        childNodes:\n          assetObj[file] === 'FILE' ? undefined : helper([...parentFolders, file], assetObj[file])\n      };\n    });\n  }\n  return helper([], assetObj);\n}\n","import { Button } from '@blueprintjs/core';\nimport arrayMove from 'array-move';\nimport React from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\nconst SortableItem = SortableElement(({ value }: any) => (\n  <div>\n    <Button>{value}</Button>\n  </div>\n));\n\nconst SortableList = SortableContainer(({ items }: any) => {\n  return (\n    <div>\n      {items.map((value: any, index: number) => (\n        <SortableItem key={`item-${value}`} index={index} value={value} />\n      ))}\n    </div>\n  );\n});\n\nexport default function SortableComponent() {\n  const [itemList, setItemList] = React.useState([\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n    'Item 5',\n    'Item 6'\n  ]);\n  const onSortEnd = ({ oldIndex, newIndex }: any) => {\n    setItemList(prevState => arrayMove(prevState, oldIndex, newIndex));\n  };\n\n  function saveOrder() {\n    console.log(itemList);\n  }\n  return (\n    <>\n      <SortableList items={itemList} onSortEnd={onSortEnd} />\n      <br />\n      <Button onClick={saveOrder}>Save</Button>\n    </>\n  );\n}\n","import 'ace-builds/webpack-resolver';\n\nimport { Button, Menu, MenuItem, Popover, Position, Tab, Tabs } from '@blueprintjs/core';\nimport * as React from 'react';\nimport { Constants } from 'src/features/game/commons/CommonConstants';\n\ntype Props = {\n  useDefaultChapter: boolean;\n  storageName: string;\n  accessToken?: string;\n  assetPaths: string[];\n};\n\nfunction CheckpointTxtLoader({ storageName, assetPaths, useDefaultChapter }: Props) {\n  const textAssets = assetPaths\n    .filter(assetPath => assetPath.startsWith('stories') && assetPath.endsWith('txt'))\n    .map(\n      assetPath => assetPath.slice(8) // remove /stories\n    );\n\n  const [filename, setFilename] = React.useState(\n    useDefaultChapter ? 'defaultCheckpoint.txt' : textAssets[0]\n  );\n\n  function onLoadTxt(e: React.ChangeEvent<HTMLInputElement>) {\n    if (!e.target.files) return;\n    const [file] = e.target.files;\n    loadFileLocally(storageName, file);\n  }\n\n  async function changeChosenFilename(e: any) {\n    if (!e.target.innerHTML) return;\n\n    const filename = e.target.innerHTML;\n    setFilename('Loading');\n    const response = await fetch(`${Constants.assetsFolder}/stories/${filename}`);\n    const txt = await response.text();\n    setFilename(filename);\n    sessionStorage.setItem(storageName, txt);\n  }\n\n  const uploadButton = (\n    <>\n      <input type=\"file\" onChange={onLoadTxt} style={{ width: '250px' }} />\n    </>\n  );\n\n  const chooseS3Txt = (\n    <>\n      <Popover position={Position.BOTTOM}>\n        <Button text={filename} />\n        <Menu>\n          {textAssets.map(file => (\n            <MenuItem onClick={changeChosenFilename} id={file} key={file} text={file} />\n          ))}\n        </Menu>\n      </Popover>\n    </>\n  );\n\n  return (\n    <div className=\"LeftAlign\">\n      <hr />\n      <Tabs id=\"Tabs\" key={'vertical'} renderActiveTabPanelOnly={true}>\n        <Tab id=\"own\" title=\"Local\" panel={uploadButton} />\n        <Tab id=\"s3\" title=\"S3\" panel={chooseS3Txt} />\n      </Tabs>\n      <hr />\n    </div>\n  );\n}\n\nconst loadFileLocally = (storageName: string, txtFile: File) => {\n  const reader = new FileReader();\n  reader.readAsText(txtFile);\n  reader.onloadend = _ => {\n    if (!reader.result) {\n      return;\n    }\n    sessionStorage.setItem(storageName, reader.result.toString());\n  };\n};\n\nexport default CheckpointTxtLoader;\n","import { Button } from '@blueprintjs/core';\nimport * as React from 'react';\nimport mainMenuConstants from 'src/features/storySimulator/scenes/mainMenu/MainMenuConstants';\n\nimport CheckpointTxtLoader from './StorySimulatorCheckpointTxtLoader';\nimport { getStorySimulatorGame } from './storySimulatorGame';\n\ntype Props = {\n  accessToken?: string;\n  assetPaths: string[];\n};\n\nexport default function CheckpointSim({ accessToken, assetPaths }: Props) {\n  function simulateCheckpoint() {\n    getStorySimulatorGame().getStorySimProps().mainMenuRef.callGameManager();\n  }\n\n  return (\n    <>\n      <h3>Checkpoint Text Loader</h3>\n      <b>Step 1: Choose default checkpoint</b>\n      <CheckpointTxtLoader\n        assetPaths={assetPaths}\n        useDefaultChapter={true}\n        storageName={mainMenuConstants.gameTxtStorageName.defaultChapter}\n        accessToken={accessToken}\n      />\n      <b>Step 2: Choose checkpoint text</b>\n      <CheckpointTxtLoader\n        assetPaths={assetPaths}\n        useDefaultChapter={false}\n        storageName={mainMenuConstants.gameTxtStorageName.checkpointTxt}\n        accessToken={accessToken}\n      />\n      <br />\n      <Button onClick={simulateCheckpoint} icon=\"play\">\n        Simulate Checkpoint\n      </Button>\n      <br />\n      <br />\n      <Button onClick={clearSessionStorage}>Reset All Files</Button>\n      <br />\n    </>\n  );\n}\n\nfunction clearSessionStorage(e: any) {\n  sessionStorage.setItem(mainMenuConstants.gameTxtStorageName.checkpointTxt, '');\n  sessionStorage.setItem(mainMenuConstants.gameTxtStorageName.defaultChapter, '');\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { OverallState } from 'src/commons/application/ApplicationTypes';\nimport { fetchAssetPaths, s3AssetFolders } from 'src/features/storySimulator/StorySimulatorService';\nimport { StorySimState } from 'src/features/storySimulator/StorySimulatorTypes';\n\nimport { AccountInfo } from '../game/subcomponents/sourceAcademyGame';\nimport StorySimulatorAssetFileUploader from './subcomponents/StorySimulatorAssetFileUploader';\nimport StorySimulatorAssetSelection from './subcomponents/StorySimulatorAssetSelection';\nimport StorySimulatorChapterSequencer from './subcomponents/StorySimulatorChapterSequencer';\nimport StorySimulatorCheckpointSim from './subcomponents/StorySimulatorCheckpointSim';\nimport {\n  createStorySimulatorGame,\n  getStorySimulatorGame\n} from './subcomponents/storySimulatorGame';\n\nfunction StorySimulator() {\n  const session = useSelector((state: OverallState) => state.session);\n\n  const [assetPaths, setAssetPaths] = React.useState<string[]>([]);\n  const [storySimState, setStorySimState] = React.useState<string>(StorySimState.Default);\n\n  React.useEffect(() => {\n    createStorySimulatorGame().setStorySimProps({ setStorySimState });\n  }, []);\n\n  React.useEffect(() => {\n    getStorySimulatorGame().setAccountInfo({\n      accessToken: session.accessToken,\n      refreshToken: session.refreshToken,\n      role: session.role,\n      name: session.name\n    } as AccountInfo);\n  }, [session]);\n\n  React.useEffect(() => {\n    (async () => {\n      setAssetPaths(await fetchAssetPaths(session.accessToken, s3AssetFolders));\n    })();\n  }, [session]);\n\n  return (\n    <>\n      <div className=\"StorySimulatorWrapper\">\n        <div id=\"game-display\" />\n        <div className=\"LeftAlign StorySimulatorPanel\">\n          {storySimState === StorySimState.Default && (\n            <>\n              <h3>Welcome to story simulator!</h3>\n            </>\n          )}\n          {storySimState === StorySimState.CheckpointSim && (\n            <StorySimulatorCheckpointSim\n              accessToken={session.accessToken}\n              assetPaths={assetPaths}\n            />\n          )}\n          {storySimState === StorySimState.ObjectPlacement && (\n            <>\n              <h3>Asset Selection</h3>\n              <StorySimulatorAssetSelection\n                folders={s3AssetFolders}\n                assetPaths={assetPaths}\n                accessToken={session.accessToken}\n              />\n            </>\n          )}\n          {storySimState === StorySimState.AssetUploader && (\n            <>\n              <h3>Asset uploader</h3>\n              <StorySimulatorAssetFileUploader accessToken={session.accessToken} />\n              <h3>Asset Viewer</h3>\n              <StorySimulatorAssetSelection\n                folders={s3AssetFolders}\n                assetPaths={assetPaths}\n                accessToken={session.accessToken}\n              />\n            </>\n          )}\n          {storySimState === StorySimState.ChapterSequence && <StorySimulatorChapterSequencer />}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default StorySimulator;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport { Chapter } from '../../../commons/application/types/ChapterTypes';\nimport { changeChapter, fetchChapter } from '../../../commons/workspace/WorkspaceActions';\nimport { DefaultChapter, DispatchProps, StateProps } from './AcademyDefaultChapter';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  sourceChapter: state.workspaces.playground.context.chapter,\n  sourceVariant: state.workspaces.playground.context.variant\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleFetchChapter: () => fetchChapter(),\n      handleUpdateChapter: (chapter: Chapter) => changeChapter(chapter.chapter, chapter.variant)\n    },\n    dispatch\n  );\n\nconst AcademyDefaultChapterContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DefaultChapter)\n);\n\nexport default AcademyDefaultChapterContainer;\n","import { Button, Classes, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\n\nimport {\n  SourceLanguage,\n  sourceLanguages,\n  styliseChapter\n} from '../../../commons/application/ApplicationTypes';\nimport { Chapter } from '../../../commons/application/types/ChapterTypes';\n\nexport type DefaultChapterProps = DispatchProps & StateProps & RouteComponentProps<{}>;\n\nexport type DispatchProps = {\n  handleFetchChapter: () => void;\n  handleUpdateChapter: (chapter: Chapter) => void;\n  handleChapterSelect?: (i: Chapter, e: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport type StateProps = {\n  sourceChapter: number;\n  sourceVariant: Variant;\n};\n\nexport function DefaultChapter(props: DefaultChapterProps) {\n  props.handleFetchChapter();\n\n  const chapters = sourceLanguages.map((lang: SourceLanguage) => {\n    return {\n      chapter: lang.chapter,\n      variant: lang.variant,\n      displayName: styliseChapter(lang.chapter, lang.variant)\n    };\n  });\n\n  const chapterRenderer: ItemRenderer<Chapter> = (lang, { handleClick }) => (\n    <MenuItem\n      active={false}\n      key={lang.chapter + lang.variant}\n      onClick={handleClick}\n      text={lang.displayName}\n    />\n  );\n\n  const ChapterSelectComponent = Select.ofType<Chapter>();\n\n  const chapSelect = (\n    currentChap: number,\n    currentVariant: Variant,\n    handleSelect = (i: Chapter) => {}\n  ) => (\n    <ChapterSelectComponent\n      className={Classes.MINIMAL}\n      items={chapters}\n      onItemSelect={handleSelect}\n      itemRenderer={chapterRenderer}\n      filterable={false}\n    >\n      <Button\n        className={Classes.MINIMAL}\n        text={styliseChapter(currentChap, currentVariant)}\n        rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n      />\n    </ChapterSelectComponent>\n  );\n\n  return (\n    <div> {chapSelect(props.sourceChapter, props.sourceVariant, props.handleUpdateChapter)} </div>\n  );\n}\n","import { Alignment, Classes, Icon, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { Role } from '../../../commons/application/ApplicationTypes';\nimport { AssessmentCategories } from '../../../commons/assessment/AssessmentTypes';\nimport NotificationBadgeContainer from '../../../commons/notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsByType } from '../../../commons/notificationBadge/NotificationBadgeHelper';\nimport { assessmentCategoryLink } from '../../../commons/utils/ParamParseHelper';\nimport DefaultChapterContainer from './AcademyDefaultChapterContainer';\n\ntype OwnProps = {\n  role: Role;\n};\n\nconst AcademyNavigationBar: React.SFC<OwnProps> = props => (\n  <Navbar className=\"NavigationBar secondary-navbar\">\n    <NavbarGroup align={Alignment.LEFT}>\n      <NavLink\n        to={`/academy/${assessmentCategoryLink(AssessmentCategories.Mission)}`}\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n      >\n        <Icon icon={IconNames.FLAME} />\n        <div className=\"navbar-button-text hidden-xs\">Missions</div>\n        <NotificationBadgeContainer\n          notificationFilter={filterNotificationsByType(AssessmentCategories.Mission)}\n          disableHover={true}\n        />\n      </NavLink>\n\n      <NavLink\n        to={`/academy/${assessmentCategoryLink(AssessmentCategories.Sidequest)}`}\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n      >\n        <Icon icon={IconNames.LIGHTBULB} />\n        <div className=\"navbar-button-text hidden-xs\">Quests</div>\n        <NotificationBadgeContainer\n          notificationFilter={filterNotificationsByType(AssessmentCategories.Sidequest)}\n          disableHover={true}\n        />\n      </NavLink>\n\n      <NavLink\n        to={`/academy/${assessmentCategoryLink(AssessmentCategories.Path)}`}\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n      >\n        <Icon icon={IconNames.PREDICTIVE_ANALYSIS} />\n        <div className=\"navbar-button-text hidden-xs\">Paths</div>\n        <NotificationBadgeContainer\n          notificationFilter={filterNotificationsByType(AssessmentCategories.Path)}\n          disableHover={true}\n        />\n      </NavLink>\n\n      <NavLink\n        to={`/academy/${assessmentCategoryLink(AssessmentCategories.Contest)}`}\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n      >\n        <Icon icon={IconNames.COMPARISON} />\n        <div className=\"navbar-button-text hidden-xs\">Contests</div>\n        <NotificationBadgeContainer\n          notificationFilter={filterNotificationsByType(AssessmentCategories.Contest)}\n          disableHover={true}\n        />\n      </NavLink>\n\n      <NavLink\n        to={`/academy/${assessmentCategoryLink(AssessmentCategories.Practical)}`}\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n      >\n        <Icon icon={IconNames.MANUAL} />\n        <div className=\"navbar-button-text hidden-xs\">Practical</div>\n      </NavLink>\n    </NavbarGroup>\n    {props.role === Role.Admin || props.role === Role.Staff ? (\n      <NavbarGroup align={Alignment.RIGHT}>\n        <DefaultChapterContainer />\n\n        <NavLink\n          to={'/academy/groundcontrol'}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon=\"satellite\" />\n          <div className=\"navbar-button-text hidden-xs\">Ground Control</div>\n        </NavLink>\n\n        <NavLink\n          to={'/academy/dashboard'}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon=\"globe\" />\n          <div className=\"navbar-button-text hidden-xs\">Dashboard</div>\n        </NavLink>\n\n        <NavLink\n          to={'/academy/sourcereel'}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.MOBILE_VIDEO} />\n          <div className=\"navbar-button-text hidden-xs\">Sourcereel</div>\n        </NavLink>\n\n        <NavLink\n          to={'/academy/grading'}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.ENDORSED} />\n          <div className=\"navbar-button-text hidden-xs\">Grading</div>\n          <NotificationBadgeContainer\n            notificationFilter={filterNotificationsByType('Grading')}\n            disableHover={true}\n          />\n        </NavLink>\n\n        <NavLink\n          to={'/academy/storysimulator'}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.CROWN} />\n          <div className=\"navbar-button-text hidden-xs\">Story Simulator</div>\n        </NavLink>\n      </NavbarGroup>\n    ) : null}\n  </Navbar>\n);\n\nexport default AcademyNavigationBar;\n","import * as React from 'react';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router';\n\nimport { Role } from '../../commons/application/ApplicationTypes';\nimport { isAcademyRe } from '../../commons/application/reducers/SessionsReducer';\nimport AssessmentContainer from '../../commons/assessment/AssessmentContainer';\nimport { AssessmentCategories, AssessmentCategory } from '../../commons/assessment/AssessmentTypes';\nimport { HistoryHelper } from '../../commons/utils/HistoryHelper';\nimport { assessmentCategoryLink } from '../../commons/utils/ParamParseHelper';\nimport { assessmentRegExp, gradingRegExp } from '../../features/academy/AcademyTypes';\nimport DashboardContainer from './dashboard/DashboardContainer';\nimport Game from './game/Game';\nimport Grading from './grading/GradingContainer';\nimport GroundControl from './groundControl/GroundControlContainer';\nimport Sourcereel from './sourcereel/SourcereelContainer';\nimport StorySimulator from './storySimulator/StorySimulator';\nimport AcademyNavigationBar from './subcomponents/AcademyNavigationBar';\n\ntype AcademyProps = DispatchProps & StateProps & OwnProps & RouteComponentProps<{}>;\n\nexport type DispatchProps = {\n  handleFetchNotifications: () => void;\n};\n\nexport type StateProps = {\n  historyHelper: HistoryHelper;\n};\n\nexport type OwnProps = {\n  accessToken?: string;\n  role: Role;\n};\n\nclass Academy extends React.Component<AcademyProps> {\n  public componentDidMount() {\n    /* TODO: REPLACE WITH LONG POLLING METHOD */\n    this.props.handleFetchNotifications();\n  }\n\n  public render() {\n    return (\n      <div className=\"Academy\">\n        <AcademyNavigationBar role={this.props.role} />\n        <Switch>\n          <Route\n            path={`/academy/${assessmentCategoryLink(\n              AssessmentCategories.Contest\n            )}/${assessmentRegExp}`}\n            render={this.assessmentRenderFactory(AssessmentCategories.Contest)}\n          />\n          <Route path=\"/academy/game\" component={Game} />\n          <Route\n            path={`/academy/${assessmentCategoryLink(\n              AssessmentCategories.Mission\n            )}/${assessmentRegExp}`}\n            render={this.assessmentRenderFactory(AssessmentCategories.Mission)}\n          />\n          <Route\n            path={`/academy/${assessmentCategoryLink(\n              AssessmentCategories.Path\n            )}/${assessmentRegExp}`}\n            render={this.assessmentRenderFactory(AssessmentCategories.Path)}\n          />\n          <Route\n            path={`/academy/${assessmentCategoryLink(\n              AssessmentCategories.Sidequest\n            )}/${assessmentRegExp}`}\n            render={this.assessmentRenderFactory(AssessmentCategories.Sidequest)}\n          />\n          <Route\n            path={`/academy/${assessmentCategoryLink(\n              AssessmentCategories.Practical\n            )}/${assessmentRegExp}`}\n            render={this.assessmentRenderFactory(AssessmentCategories.Practical)}\n          />\n          <Route path=\"/academy/groundcontrol\" component={GroundControl} />\n          <Route path=\"/academy/dashboard\" component={DashboardContainer} />\n          <Route path={`/academy/grading/${gradingRegExp}`} component={Grading} />\n          <Route path=\"/academy/sourcereel\" component={Sourcereel} />\n          <Route path={'/academy/storysimulator'} component={StorySimulator} />\n          <Route exact={true} path=\"/academy\" component={this.dynamicRedirect(this.props)} />\n          <Route component={this.redirectTo404} />\n        </Switch>\n      </div>\n    );\n  }\n\n  private assessmentRenderFactory = (cat: AssessmentCategory) => (\n    routerProps: RouteComponentProps<any>\n  ) => <AssessmentContainer assessmentCategory={cat} />;\n\n  /**\n   * 1. If user is in /academy.*, redirect to game\n   * 2. If not, redirect to the last /acdaemy.* route the user was in\n   * See ../../commons/utils/HistoryHelper.ts for more details\n   */\n  private dynamicRedirect = (props: StateProps) => {\n    const clickedFrom = props.historyHelper.lastGeneralLocations[0];\n    const lastAcademy = props.historyHelper.lastAcademyLocations[0];\n    if (clickedFrom != null && isAcademyRe.exec(clickedFrom!) == null && lastAcademy != null) {\n      return () => <Redirect to={lastAcademy!} />;\n    } else {\n      return this.redirectToGame;\n    }\n  };\n\n  private redirectTo404 = () => <Redirect to=\"/404\" />;\n\n  private redirectToGame = () => <Redirect to=\"/academy/game\" />;\n}\n\nexport default Academy;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport { fetchNotifications } from '../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport Academy, { DispatchProps, StateProps } from './Academy';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  historyHelper: state.session.historyHelper\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch =>\n  bindActionCreators(\n    {\n      handleFetchNotifications: fetchNotifications\n    },\n    dispatch\n  );\n\nconst AcademyContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Academy));\n\nexport default AcademyContainer;\n","import { Card, Elevation } from '@blueprintjs/core';\nimport { H3, H5 } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { Links } from '../../../commons/utils/Constants';\n\nconst dot = <span className=\"dot\">&bull;</span>;\n\nclass ContributorsDetails extends React.Component {\n  public render() {\n    return (\n      <div className=\"outsideDetails\">\n        <Card className=\"contributorsDetails\" elevation={Elevation.ONE}>\n          <H3>The people behind Source Academy</H3>\n          <p>\n            The <i>Source Academy</i> is designed by and for students of the National University of\n            Singapore. Students who completed the CS1101S module come back to coach their juniors as\n            \"Avengers\" or to further develop and improve the Academy. This page includes all\n            developers who contributed to the Source Academy <i>Knight</i> (2020) and its its\n            precursor, <i>Cadet</i> (2018). Both of these succeeded Source Academy 2 (2017) and\n            ultimately the original Source Academy (2016).\n          </p>\n          <div className=\"leadership\">\n            <H5>\n              <strong>\n                <u>2020 Leadership</u>\n              </strong>\n            </H5>\n            <p>\n              Tiffany Chong\n              <br />\n              <strong>(Game)</strong>\n            </p>\n            {dot}\n            <p>\n              Anthony Halim\n              <br />\n              <strong>(Architecture)</strong>\n            </p>\n            {dot}\n            <p>\n              Kan Yip Keng, Jet\n              <br />\n              <strong>(Frontend)</strong>\n            </p>\n            {dot}\n            <p>\n              Low Jun Kai, Sean\n              <br />\n              <strong>(Frontend)</strong>\n            </p>\n            {dot}\n            <p>\n              Daryl Tan\n              <br />\n              <strong>(Source)</strong>\n            </p>\n            {dot}\n            <p className=\"wider\">\n              Tee Hao Wei\n              <br />\n              <strong>(Backend &amp; DevOps)</strong>\n            </p>\n            {dot}\n            <p>\n              Martin Henz\n              <br />\n              <strong>(Coordination)</strong>\n            </p>\n          </div>\n          <div className=\"hallOfFame\">\n            <H5>\n              <strong>\n                <u>Hall of Fame</u>\n              </strong>\n            </H5>\n            <p>\n              <strong>Cadet architect</strong>\n            </p>\n            <p>Evan Sebastian</p>\n            <p>\n              <strong>Cadet core team</strong>\n            </p>\n            <p>\n              Julius Putra Tanu Setiaji {dot} Lee Ning Yuan {dot} Vignesh Shankar {dot} Thomas Tan{' '}\n              {dot} Chen Shaowei\n            </p>\n            <p>\n              <strong>Graphic design</strong>\n            </p>\n            <p>\n              Ng Tse Pei {dot} Joey Yeo {dot} Tan Yu Wei\n            </p>\n          </div>\n          <div className=\"leadership\">\n            <H5>\n              <strong>\n                <u>2019 Leadership</u>\n              </strong>\n            </H5>\n            <p>\n              Liow Jia Chen\n              <br />\n              <strong>(Backend)</strong>\n            </p>\n            {dot}\n            <p>\n              Ge Shuming\n              <br />\n              <strong>(Frontend)</strong>\n            </p>\n            {dot}\n            <p>\n              Rahul Rajesh\n              <br />\n              <strong>(DevOps)</strong>\n            </p>\n            {dot}\n            <p>\n              Daryl Tan\n              <br />\n              <strong>(Source)</strong>\n            </p>\n            {dot}\n            <p>\n              She Jiayu\n              <br />\n              <strong>(Tools)</strong>\n            </p>\n          </div>\n          <div className=\"contributors\">\n            <H5>\n              <strong>\n                <u>All Contributors</u>\n              </strong>\n            </H5>\n            <p>\n              Below are all contributors to the{' '}\n              <a href={Links.githubOrg}>GitHub repositories of the Source Academy</a>.\n            </p>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default ContributorsDetails;\n","import {\n  ContributorsInApi,\n  Repo,\n  ReposInApi\n} from '../../../features/contributors/ContributorsTypes';\n\nconst apiRepoDetails: string = 'https://api.github.com/orgs/source-academy/repos';\nconst ignoreRepos: string[] = ['assessments', 'tools', 'source-academy2'];\nconst ignoreContributors: string[] = ['dependabot[bot]', 'dependabot-preview[bot]'];\n\nexport const fetchRepos = async () => {\n  const response = await fetch(apiRepoDetails);\n  const results = await response.json();\n  const repos = await results\n    .filter((repo: ReposInApi) => {\n      return !ignoreRepos.includes(repo.name);\n    })\n    .map((repo: ReposInApi) => {\n      return {\n        key: repo.id,\n        name: repo.name,\n        description: repo.description,\n        link: repo.contributors_url\n      };\n    });\n  return repos;\n};\n\nexport const fetchContributors = async (endpoints: Repo[]) => {\n  const responses = await Promise.all(\n    endpoints.map((endpoint: Repo) => {\n      return fetch(endpoint.link);\n    })\n  );\n  const results = await Promise.all(\n    responses.map((res: any) => {\n      return res.json();\n    })\n  );\n  const contributorsByRepo = await Promise.all(\n    results.map((contributors: ContributorsInApi[]) => {\n      return contributors\n        .filter((contributor: ContributorsInApi) => {\n          return !ignoreContributors.includes(contributor.login);\n        })\n        .map((contributor: ContributorsInApi) => {\n          return {\n            key: contributor.id,\n            photo: contributor.avatar_url,\n            githubPage: contributor.html_url,\n            githubName: contributor.login,\n            commits: contributor.contributions\n          };\n        });\n    })\n  );\n  return contributorsByRepo;\n};\n","import { Card, Elevation } from '@blueprintjs/core';\nimport { H2, H3, H5 } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {\n  Contributor,\n  ContributorsState,\n  Repo\n} from '../../../features/contributors/ContributorsTypes';\nimport { fetchContributors, fetchRepos } from './ContributorsGithubApi';\n\nclass ContributorsList extends React.Component<{}, ContributorsState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      repos: [],\n      contributors: []\n    };\n  }\n\n  public componentDidMount() {\n    fetchRepos()\n      .then((repos: Repo[]) => {\n        this.setState({\n          repos\n        });\n        return repos;\n      })\n      .then((repos: Repo[]) => {\n        fetchContributors(repos).then((contributors: Contributor[][]) => {\n          this.setState({\n            contributors\n          });\n        });\n      });\n  }\n\n  public render() {\n    const { contributors, repos } = this.state;\n    const contributorList = contributors.length ? (\n      contributors.map((array: Contributor[], index: number) => {\n        const repo = repos[index];\n        const arrayMapped = array.map((contributor: Contributor) => {\n          return (\n            <div key={contributor.key}>\n              <img src={contributor.photo} alt=\"Contributor\" />\n              <p>\n                <a href={contributor.githubPage} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {contributor.githubName}\n                </a>\n              </p>\n              <p>Commits: {contributor.commits}</p>\n            </div>\n          );\n        });\n        return (\n          <Card key={repo.key} className=\"containerPermalink\" elevation={Elevation.ONE}>\n            <div className=\"repoDetailsPermalink\">\n              <H3>{repo.name}</H3>\n              <H5>{repo.description}</H5>\n            </div>\n            <div className=\"inPermalink\">{arrayMapped}</div>\n          </Card>\n        );\n      })\n    ) : (\n      <H2>Loading...</H2>\n    );\n    return <div>{contributorList}</div>;\n  }\n}\n\nexport default ContributorsList;\n","import { Card, Elevation } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport ContributorsDetails from './subcomponents/ContributorsDetails';\nimport ContributorsList from './subcomponents/ContributorsList';\n\nexport class Contributors extends React.Component {\n  public render() {\n    return (\n      <div className=\"fullpage\">\n        <Card className=\"fullpage-content\" elevation={Elevation.THREE}>\n          <ContributorsDetails />\n          <ContributorsList />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Contributors;\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  H4,\n  Icon,\n  NonIdealState,\n  Spinner\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type LoginProps = DispatchProps & OwnProps;\n\nexport type DispatchProps = {\n  handleFetchAuth: (code: string, providerId?: string) => void;\n  handleLogin: (providerId: string) => void;\n};\n\nexport type OwnProps = {\n  providers: Array<{ id: string; name: string }>;\n  code?: string;\n  providerId?: string;\n};\n\nconst Login: React.FunctionComponent<LoginProps> = props => {\n  const { code, providerId, handleFetchAuth } = props;\n\n  React.useEffect(() => {\n    if (code) {\n      handleFetchAuth(code, providerId);\n    }\n  }, [code, providerId, handleFetchAuth]);\n\n  if (code) {\n    return (\n      <div className={classNames('Login', Classes.DARK)}>\n        <Card className={classNames('login-card', Classes.ELEVATION_4)}>\n          <div className=\"login-body\">\n            <NonIdealState\n              description=\"Logging In...\"\n              icon={<Spinner size={Spinner.SIZE_LARGE} />}\n            />\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames('Login', Classes.DARK)}>\n      <Card className={classNames('login-card', Classes.ELEVATION_4)}>\n        <div className=\"login-header\">\n          <H4>\n            <Icon icon={IconNames.LOCK} />\n            LOGIN\n          </H4>\n        </div>\n        <div className=\"login-body\">\n          <ButtonGroup fill={true} vertical={true}>\n            {props.providers.map(({ id, name }) => (\n              <LoginButton handleClick={props.handleLogin} name={name} id={id} key={id} />\n            ))}\n            {playgroundButton}\n          </ButtonGroup>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nconst LoginButton = ({\n  handleClick,\n  id,\n  name\n}: {\n  handleClick: (id: string) => void;\n  id: string;\n  name: string;\n}) => {\n  return (\n    <Button\n      className={Classes.LARGE}\n      rightIcon={IconNames.LOG_IN}\n      onClick={React.useCallback(() => handleClick(id), [handleClick, id])}\n    >\n      {`Log in with ${name}`}\n    </Button>\n  );\n};\n\nconst playgroundButton = (\n  <NavLink to=\"/playground\">\n    <Button className={Classes.LARGE} rightIcon={IconNames.CODE}>\n      Try out the playground\n    </Button>\n  </NavLink>\n);\n\nexport default Login;\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { fetchAuth, login } from '../../commons/application/actions/SessionActions';\nimport Login, { OwnProps } from './Login';\n\nconst LoginContainer: React.FunctionComponent<OwnProps> = props => {\n  const dispatch = useDispatch();\n  const dispatchProps = React.useMemo(\n    () =>\n      bindActionCreators(\n        {\n          handleFetchAuth: fetchAuth,\n          handleLogin: login\n        },\n        dispatch\n      ),\n    [dispatch]\n  );\n\n  return <Login {...dispatchProps} {...props} />;\n};\n\nexport default LoginContainer;\n","import { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { Question } from '../assessment/AssessmentTypes';\n\nexport const EDITING_ID = -1;\n\nexport type XmlParseStrTask = {\n  $: XmlParseStrOverview;\n  DEPLOYMENT: XmlParseStrDeployment[];\n  GRADERDEPLOYMENT: XmlParseStrDeployment[];\n  PROBLEMS: Array<{ PROBLEM: XmlParseStrProblem[] }>;\n  READING: string[];\n  TEXT: string[];\n  WEBSUMMARY?: string[];\n};\n\nexport type XmlParseStrDeployment = {\n  $: {\n    interpreter: string;\n  };\n  GLOBAL?: Array<{\n    IDENTIFIER: string[];\n    VALUE: string[];\n  }>;\n  IMPORT?: Array<{\n    $: {\n      name: ExternalLibraryName;\n    };\n    SYMBOL: string[];\n  }>;\n  // deprecated EXTERNAL in DEPLOYMENT and GRADERDEPLOYMENT, use IMPORT instead\n  EXTERNAL?: Array<{\n    $: {\n      name: ExternalLibraryName;\n    };\n    SYMBOL: string[];\n  }>;\n};\n\nexport type XmlParseStrOverview = {\n  coverimage: string;\n  duedate: string;\n  kind: string;\n  number: string;\n  title: string;\n  startdate: string;\n  story: string | null;\n};\n\nexport type XmlParseStrProblem = {\n  $: {\n    type: Question['type'];\n    maxgrade: string;\n    maxxp: string;\n  };\n  DEPLOYMENT?: XmlParseStrDeployment[];\n  GRADERDEPLOYMENT?: XmlParseStrDeployment[];\n  TEXT: string[];\n};\n\ntype PProblem = {\n  SNIPPET: Array<{\n    TEMPLATE: string[];\n    PREPEND: string;\n    SOLUTION: string[];\n    POSTPEND: string;\n    TESTCASES: Array<{\n      PUBLIC?: XmlParseStrTestcase[];\n      PRIVATE?: XmlParseStrTestcase[];\n    }>;\n    GRADER: string[];\n  }>;\n  TEXT: string[];\n};\n\nexport type XmlParseStrPProblem = PProblem & XmlParseStrProblem;\n\ntype CProblem = {\n  CHOICE: XmlParseStrProblemChoice[];\n  SNIPPET: {\n    SOLUTION: string[];\n  };\n};\n\nexport type XmlParseStrCProblem = CProblem & XmlParseStrProblem;\n\nexport type XmlParseStrProblemChoice = {\n  $: {\n    correct: string;\n  };\n  TEXT: string[];\n};\n\nexport type XmlParseStrTestcase = {\n  $: {\n    answer: string;\n    score: string;\n  };\n  _: string;\n};\n","import { Builder } from 'xml2js';\n\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  Assessment,\n  AssessmentCategories,\n  AssessmentOverview,\n  AssessmentStatuses,\n  BaseQuestion,\n  GradingStatuses,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  MCQChoice,\n  Question,\n  Testcase,\n  TestcaseTypes\n} from '../assessment/AssessmentTypes';\nimport {\n  EDITING_ID,\n  XmlParseStrCProblem,\n  XmlParseStrDeployment,\n  XmlParseStrOverview,\n  XmlParseStrPProblem,\n  XmlParseStrProblem,\n  XmlParseStrProblemChoice,\n  XmlParseStrTask,\n  XmlParseStrTestcase\n} from './XMLParserTypes';\n\nconst capitalizeFirstLetter = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const retrieveLocalAssessment = (): Assessment | null => {\n  const assessment = localStorage.getItem('MissionEditingAssessmentSA');\n  if (assessment) {\n    return JSON.parse(assessment);\n  } else {\n    return null;\n  }\n};\n\nexport const retrieveLocalAssessmentOverview = (): AssessmentOverview | null => {\n  const assessment = localStorage.getItem('MissionEditingOverviewSA');\n  if (assessment) {\n    return JSON.parse(assessment);\n  } else {\n    return null;\n  }\n};\n\nexport const storeLocalAssessment = (assessment: Assessment): void => {\n  localStorage.setItem('MissionEditingAssessmentSA', JSON.stringify(assessment));\n};\n\nexport const storeLocalAssessmentOverview = (overview: AssessmentOverview): void => {\n  localStorage.setItem('MissionEditingOverviewSA', JSON.stringify(overview));\n};\n\nexport const makeEntireAssessment = (result: any): [AssessmentOverview, Assessment] => {\n  const assessmentArr = makeAssessment(result);\n  const overview = makeAssessmentOverview(result, assessmentArr[1], assessmentArr[2]);\n  return [overview, assessmentArr[0]];\n};\n\nconst makeAssessmentOverview = (\n  result: any,\n  maxGradeVal: number,\n  maxXpVal: number\n): AssessmentOverview => {\n  const task: XmlParseStrTask = result.CONTENT.TASK[0];\n  const rawOverview: XmlParseStrOverview = task.$;\n  return {\n    category: capitalizeFirstLetter(rawOverview.kind) as AssessmentCategories,\n    closeAt: rawOverview.duedate,\n    coverImage: rawOverview.coverimage,\n    grade: 1,\n    id: EDITING_ID,\n    maxGrade: maxGradeVal,\n    maxXp: maxXpVal,\n    number: rawOverview.number || '',\n    openAt: rawOverview.startdate,\n    title: rawOverview.title,\n    reading: task.READING ? task.READING[0] : '',\n    shortSummary: task.WEBSUMMARY ? task.WEBSUMMARY[0] : '',\n    status: AssessmentStatuses.attempting,\n    story: rawOverview.story,\n    xp: 0,\n    gradingStatus: 'none' as GradingStatuses\n  };\n};\n\nconst makeAssessment = (result: any): [Assessment, number, number] => {\n  const task: XmlParseStrTask = result.CONTENT.TASK[0];\n  const rawOverview: XmlParseStrOverview = task.$;\n  const questionArr = makeQuestions(task);\n  return [\n    {\n      category: capitalizeFirstLetter(rawOverview.kind) as AssessmentCategories,\n      id: EDITING_ID,\n      globalDeployment: makeLibrary(task.DEPLOYMENT),\n      graderDeployment: makeLibrary(task.GRADERDEPLOYMENT),\n      longSummary: task.TEXT[0],\n      missionPDF: 'google.com',\n      questions: questionArr[0],\n      title: rawOverview.title\n    },\n    questionArr[1],\n    questionArr[2]\n  ];\n};\n\nconst altEval = (str: string): any => {\n  // eslint-disable-next-line no-new-func\n  return Function('\"use strict\";return (' + str + ')')();\n};\n\nconst makeLibrary = (deploymentArr: XmlParseStrDeployment[] | undefined): Library => {\n  if (deploymentArr === undefined) {\n    return {\n      chapter: -1,\n      external: {\n        name: 'NONE' as ExternalLibraryName,\n        symbols: []\n      },\n      globals: []\n    };\n  } else {\n    const deployment = deploymentArr[0];\n    const external = deployment.IMPORT || deployment.EXTERNAL;\n    const nameVal = external ? external[0].$.name : 'NONE';\n    const symbolsVal = external ? external[0].SYMBOL || [] : [];\n    const globalsVal = deployment.GLOBAL\n      ? (deployment.GLOBAL.map(x => [x.IDENTIFIER[0], altEval(x.VALUE[0]), x.VALUE[0]]) as Array<\n          [string, any, string]\n        >)\n      : [];\n    return {\n      chapter: parseInt(deployment.$.interpreter, 10),\n      external: {\n        name: nameVal as ExternalLibraryName,\n        symbols: symbolsVal\n      },\n      globals: globalsVal\n    };\n  }\n};\n\nconst makeQuestions = (task: XmlParseStrTask): [Question[], number, number] => {\n  let maxGrade = 0;\n  let maxXp = 0;\n  const questions: Array<IProgrammingQuestion | IMCQQuestion> = [];\n  task.PROBLEMS[0].PROBLEM.forEach((problem: XmlParseStrProblem, curId: number) => {\n    const localMaxXp = problem.$.maxxp ? parseInt(problem.$.maxxp, 10) : 0;\n    const question: BaseQuestion = {\n      answer: null,\n      roomId: null,\n      content: problem.TEXT[0],\n      id: curId,\n      library: makeLibrary(problem.DEPLOYMENT),\n      graderLibrary: makeLibrary(problem.GRADERDEPLOYMENT),\n      type: problem.$.type,\n      xp: 0,\n      grade: 0,\n      maxGrade: parseInt(problem.$.maxgrade, 10),\n      maxXp: localMaxXp\n    };\n    maxGrade += parseInt(problem.$.maxgrade, 10);\n    maxXp += localMaxXp;\n    if (question.type === 'programming') {\n      questions.push(makeProgramming(problem as XmlParseStrPProblem, question));\n    }\n    if (question.type === 'mcq') {\n      questions.push(makeMCQ(problem as XmlParseStrCProblem, question));\n    }\n  });\n  return [questions, maxGrade, maxXp];\n};\n\nconst makeMCQ = (problem: XmlParseStrCProblem, question: BaseQuestion): IMCQQuestion => {\n  const choicesVal: MCQChoice[] = [];\n  const solution = problem.SNIPPET ? problem.SNIPPET[0].SOLUTION : undefined;\n  let solutionVal = 0;\n  problem.CHOICE.forEach((choice: XmlParseStrProblemChoice, i: number) => {\n    choicesVal.push({\n      content: choice.TEXT[0],\n      hint: null\n    });\n    solutionVal = choice.$.correct === 'true' ? i : solutionVal;\n  });\n  return {\n    ...question,\n    type: 'mcq',\n    answer: solution ? parseInt(solution[0], 10) : 0,\n    choices: choicesVal,\n    solution: solutionVal\n  };\n};\n\nconst makeProgramming = (\n  problem: XmlParseStrPProblem,\n  question: BaseQuestion\n): IProgrammingQuestion => {\n  const testcases = problem.SNIPPET[0].TESTCASES;\n  const publicTestcases = testcases ? testcases[0].PUBLIC || [] : [];\n  const privateTestcases = testcases ? testcases[0].PRIVATE || [] : [];\n  const prepend = problem.SNIPPET[0].PREPEND;\n  const postpend = problem.SNIPPET[0].POSTPEND;\n  const solution = problem.SNIPPET[0].SOLUTION;\n\n  const result: IProgrammingQuestion = {\n    ...question,\n    autogradingResults: [],\n    prepend: prepend ? (prepend[0] as string).trim() : '',\n    solutionTemplate: problem.SNIPPET[0].TEMPLATE[0].trim() as string,\n    postpend: postpend ? (postpend[0] as string).trim() : '',\n    testcases: publicTestcases.map(testcase => makeTestcase(testcase)),\n    testcasesPrivate: privateTestcases.map(testcase => makeTestcase(testcase)),\n    answer: solution ? (solution[0] as string).trim() : '',\n    type: 'programming'\n  };\n  if (problem.SNIPPET[0].GRADER) {\n    result.graderTemplate = problem.SNIPPET[0].GRADER[0];\n  }\n  return result;\n};\n\nconst makeTestcase = (testcase: XmlParseStrTestcase): Testcase => {\n  return {\n    type: TestcaseTypes.public,\n    answer: testcase.$.answer,\n    score: parseInt(testcase.$.score, 10),\n    program: testcase._\n  };\n};\n\nexport const exportXml = () => {\n  const assessmentStr = localStorage.getItem('MissionEditingAssessmentSA');\n  const overviewStr = localStorage.getItem('MissionEditingOverviewSA');\n  if (assessmentStr && overviewStr) {\n    const assessment: Assessment = JSON.parse(assessmentStr);\n    const overview: AssessmentOverview = JSON.parse(overviewStr);\n    const filename = overview.fileName || overview.title;\n    const builder = new Builder();\n    const xmlTask: XmlParseStrTask = assessmentToXml(assessment, overview);\n    const xml = {\n      CONTENT: {\n        $: {\n          'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n        },\n        TASK: xmlTask\n      }\n    };\n    let xmlStr = builder.buildObject(xml);\n    xmlStr = xmlStr.replace(/(&#xD;)+/g, '');\n    download(filename + '.xml', xmlStr);\n  }\n};\n\nconst download = (filename: string, text: string) => {\n  const element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\nconst exportLibrary = (library: Library) => {\n  const deployment = {\n    $: {\n      interpreter: library.chapter.toString()\n    },\n    EXTERNAL: {\n      $: {\n        name: library.external.name\n      }\n    }\n  };\n\n  if (library.external.symbols.length !== 0) {\n    /* tslint:disable:no-string-literal */\n    deployment.EXTERNAL['SYMBOL'] = library.external.symbols;\n  }\n  if (library.globals.length !== 0) {\n    /* tslint:disable:no-string-literal */\n    deployment['GLOBAL'] = library.globals.map(x => {\n      return {\n        IDENTIFIER: x[0],\n        VALUE: x[2]\n      };\n    });\n  }\n  return deployment;\n};\n\nexport const assessmentToXml = (\n  assessment: Assessment,\n  overview: AssessmentOverview\n): XmlParseStrTask => {\n  const task: any = {};\n  const rawOverview: XmlParseStrOverview = {\n    coverimage: overview.coverImage,\n    duedate: overview.closeAt,\n    kind: overview.category.toLowerCase(),\n    number: overview.number || '',\n    startdate: overview.openAt,\n    story: overview.story,\n    title: overview.title\n  };\n  task.$ = rawOverview;\n\n  if (overview.reading && overview.reading !== '') {\n    task.READING = overview.reading;\n  }\n\n  task.WEBSUMMARY = overview.shortSummary;\n  task.TEXT = assessment.longSummary;\n  task.PROBLEMS = { PROBLEM: [] };\n\n  task.DEPLOYMENT = exportLibrary(assessment.globalDeployment!);\n\n  if (assessment.graderDeployment!.chapter !== -1) {\n    task.GRADERDEPLOYMENT = exportLibrary(assessment.graderDeployment!);\n  }\n\n  assessment.questions.forEach((question: IProgrammingQuestion | IMCQQuestion) => {\n    const problem = {\n      $: {\n        type: question.type,\n        maxgrade: question.maxGrade\n      },\n      SNIPPET: {\n        SOLUTION: question.answer\n      },\n      TEXT: question.content,\n      CHOICE: [] as any[]\n    };\n\n    if (question.library.chapter !== -1) {\n      /* tslint:disable:no-string-literal */\n      problem.$['DEPLOYMENT'] = exportLibrary(question.library);\n    }\n\n    if (question.graderLibrary!.chapter !== -1) {\n      /* tslint:disable:no-string-literal */\n      problem.$['GRADERDEPLOYMENT'] = exportLibrary(question.graderLibrary!);\n    }\n\n    if (question.maxXp) {\n      /* tslint:disable:no-string-literal */\n      problem.$['maxxp'] = question.maxXp;\n    }\n\n    if (question.type === 'programming') {\n      if (question.graderTemplate) {\n        /* tslint:disable:no-string-literal */\n        problem.SNIPPET['GRADER'] = question.graderTemplate;\n      }\n      const snippet = {\n        ...problem.SNIPPET,\n        TEMPLATE: question.solutionTemplate,\n        PREPEND: question.prepend,\n        POSTPEND: question.postpend,\n        TESTCASES: '' as any\n      };\n\n      if (question.testcases.length || question.testcasesPrivate!.length) {\n        /* tslint:disable:no-string-literal */\n        snippet.TESTCASES = {};\n        if (question.testcases.length) {\n          const publicTests = question.testcases.map(testcase => {\n            return {\n              $: {\n                answer: testcase.answer,\n                score: testcase.score\n              },\n              _: testcase.program\n            };\n          });\n          snippet.TESTCASES['PUBLIC'] = publicTests;\n        }\n\n        if (question.testcasesPrivate && question.testcasesPrivate.length) {\n          const privateTests = question.testcasesPrivate.map(testcase => {\n            return {\n              $: {\n                answer: testcase.answer,\n                score: testcase.score\n              },\n              _: testcase.program\n            };\n          });\n          snippet.TESTCASES['PRIVATE'] = privateTests;\n        }\n      }\n\n      problem.SNIPPET = snippet;\n    }\n\n    if (question.type === 'mcq') {\n      question.choices.forEach((choice: MCQChoice, i: number) => {\n        problem.CHOICE.push({\n          $: {\n            correct: question.solution === i ? 'true' : 'false'\n          },\n          TEXT: choice.content\n        });\n      });\n    }\n\n    task.PROBLEMS.PROBLEM.push(problem);\n  });\n\n  return task;\n};\n","import {\n  Button,\n  Card,\n  Classes,\n  Dialog,\n  Elevation,\n  H3,\n  H4,\n  H6,\n  Icon,\n  Intent,\n  MenuItem,\n  Text\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Textarea from 'react-textarea-autosize';\n\nimport defaultCoverImage from '../../assets/default_cover_image.jpg';\nimport {\n  AssessmentCategories,\n  AssessmentCategory,\n  AssessmentOverview\n} from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport Markdown from '../Markdown';\nimport Constants from '../utils/Constants';\nimport { getPrettyDate } from '../utils/DateHelper';\nimport { assessmentCategoryLink } from '../utils/ParamParseHelper';\nimport { exportXml, storeLocalAssessmentOverview } from '../XMLParser/XMLParserHelper';\n\ntype EditingOverviewCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateEditingOverview: (overview: AssessmentOverview) => void;\n};\n\ntype StateProps = {\n  listingPath?: string;\n  overview: AssessmentOverview;\n};\n\ntype State = {\n  editingOverviewField: string;\n  fieldValue: any;\n  showOptionsOverlay: boolean;\n};\n\nexport class EditingOverviewCard extends React.Component<EditingOverviewCardProps, State> {\n  public constructor(props: EditingOverviewCardProps) {\n    super(props);\n    this.state = {\n      editingOverviewField: '',\n      fieldValue: '',\n      showOptionsOverlay: false\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        {this.optionsOverlay()}\n        {this.makeEditingOverviewCard(this.props.overview)}\n      </div>\n    );\n  }\n\n  private saveEditOverview = (field: keyof AssessmentOverview) => (e: any) => {\n    const overview = {\n      ...this.props.overview,\n      [field]: this.state.fieldValue\n    };\n    this.setState({\n      editingOverviewField: '',\n      fieldValue: ''\n    });\n    storeLocalAssessmentOverview(overview);\n    this.props.updateEditingOverview(overview);\n  };\n\n  private handleEditOverview = () => (e: any) => {\n    this.setState({\n      fieldValue: e.target.value\n    });\n  };\n\n  private toggleEditField = (field: keyof AssessmentOverview) => (e: any) => {\n    if (this.state.editingOverviewField !== field) {\n      this.setState({\n        editingOverviewField: field,\n        fieldValue: this.props.overview[field]\n      });\n    }\n  };\n\n  private toggleOptionsOverlay = () => {\n    this.setState({\n      showOptionsOverlay: !this.state.showOptionsOverlay\n    });\n  };\n\n  private handleExportXml = (e: any) => {\n    exportXml();\n  };\n\n  private makeEditingOverviewTextarea = (field: keyof AssessmentOverview) => (\n    <Textarea\n      autoFocus={true}\n      className={'editing-textarea'}\n      onChange={this.handleEditOverview()}\n      onBlur={this.saveEditOverview(field)}\n      value={this.state.fieldValue}\n    />\n  );\n\n  private makeEditingOverviewCard = (overview: AssessmentOverview) => (\n    <div>\n      <Card className=\"row listing\" elevation={Elevation.ONE}>\n        <div className=\"col-xs-3 listing-picture\" onClick={this.toggleEditField('coverImage')}>\n          {this.state.editingOverviewField === 'coverImage' ? (\n            this.makeEditingOverviewTextarea('coverImage')\n          ) : (\n            <img\n              alt=\"Assessment cover\"\n              className={`cover-image-${overview.status}`}\n              src={overview.coverImage ? overview.coverImage : defaultCoverImage}\n            />\n          )}\n        </div>\n\n        <div className=\"col-xs-9 listing-text\">\n          {this.makeEditingOverviewCardTitle(overview, overview.title)}\n          <div className=\"row listing-grade\">\n            <H6> {`Max Grade: ${overview.maxGrade}`} </H6>\n          </div>\n          <div className=\"row listing-xp\">\n            <H6> {`Max XP: ${overview.maxXp}`} </H6>\n          </div>\n          <div className=\"row listing-description\" onClick={this.toggleEditField('shortSummary')}>\n            {this.state.editingOverviewField === 'shortSummary' ? (\n              this.makeEditingOverviewTextarea('shortSummary')\n            ) : (\n              <Markdown content={createPlaceholder(overview.shortSummary)} />\n            )}\n          </div>\n          <div className=\"listing-controls\">\n            <Text className=\"listing-due-date\">\n              <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.TIME} />\n              <div className=\"date-container\">Opens at:&nbsp;</div>\n              <div className=\"date-container\" onClick={this.toggleEditField('openAt')}>\n                {this.state.editingOverviewField === 'openAt'\n                  ? this.makeEditingOverviewTextarea('openAt')\n                  : `${getPrettyDate(overview.openAt)}`}\n              </div>\n\n              <div className=\"date-container\">&nbsp;&nbsp;Due:&nbsp;</div>\n              <div className=\"date-container\" onClick={this.toggleEditField('closeAt')}>\n                {this.state.editingOverviewField === 'closeAt'\n                  ? this.makeEditingOverviewTextarea('closeAt')\n                  : `${getPrettyDate(overview.closeAt)}`}\n              </div>\n            </Text>\n            {this.makeOptionsButton()}\n            {makeOverviewCardButton(overview, this.props.listingPath)}\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n\n  private makeEditingOverviewCardTitle = (overview: AssessmentOverview, title: string) => (\n    <div className=\"row listing-title\">\n      <Text ellipsize={true} className={'col-xs-10'}>\n        <H4 onClick={this.toggleEditField('title')}>\n          {this.state.editingOverviewField === 'title'\n            ? this.makeEditingOverviewTextarea('title')\n            : createPlaceholder(title)}\n        </H4>\n      </Text>\n      <div className=\"col-xs-2\">{this.makeExportButton(overview)}</div>\n    </div>\n  );\n\n  private makeExportButton = (overview: AssessmentOverview) => (\n    <Button\n      icon={IconNames.EXPORT}\n      intent={Intent.DANGER}\n      minimal={true}\n      // intentional: each menu renders own version of onClick\n      // tslint:disable-next-line:jsx-no-lambda\n      onClick={this.handleExportXml}\n    >\n      Save as XML\n    </Button>\n  );\n\n  private makeOptionsButton = () => (\n    <Button icon={IconNames.WRENCH} minimal={true} onClick={this.toggleOptionsOverlay}>\n      Other Options\n    </Button>\n  );\n\n  private saveCategory = (i: AssessmentCategory, e: any) => {\n    const overview = {\n      ...this.props.overview,\n      category: i\n    };\n    storeLocalAssessmentOverview(overview);\n    this.props.updateEditingOverview(overview);\n  };\n\n  private optionsOverlay = () => (\n    <Dialog\n      canOutsideClickClose={false}\n      className=\"assessment-reset\"\n      icon={IconNames.WRENCH}\n      isCloseButtonShown={true}\n      isOpen={this.state.showOptionsOverlay}\n      onClose={this.toggleOptionsOverlay}\n      title=\"Other options\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <H3>Category</H3>\n        {categorySelect(this.props.overview.category, this.saveCategory)}\n        <H3>Number</H3>\n        <div onClick={this.toggleEditField('number')}>\n          {this.state.editingOverviewField === 'number'\n            ? this.makeEditingOverviewTextarea('number')\n            : createPlaceholder(this.props.overview.number || '')}\n        </div>\n        <H3>Story</H3>\n        <div onClick={this.toggleEditField('story')}>\n          {this.state.editingOverviewField === 'story'\n            ? this.makeEditingOverviewTextarea('story')\n            : createPlaceholder(this.props.overview.story || '')}\n        </div>\n        <br />\n        <H3>Filename</H3>\n        <div onClick={this.toggleEditField('fileName')}>\n          {this.state.editingOverviewField === 'fileName'\n            ? this.makeEditingOverviewTextarea('fileName')\n            : createPlaceholder(this.props.overview.fileName || '')}\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n\nconst createPlaceholder = (str: string): string => {\n  if (str.match('^(\\n| )*$')) {\n    return 'Enter Value Here (If Applicable)';\n  } else {\n    return str;\n  }\n};\n\nconst makeOverviewCardButton = (overview: AssessmentOverview, listingPath: string | undefined) => {\n  const label: string = 'Edit mission';\n  listingPath = listingPath || '/academy/' + assessmentCategoryLink(overview.category);\n  return (\n    <NavLink to={listingPath + `/${overview.id.toString()}/${Constants.defaultQuestionId}`}>\n      {controlButton(label, IconNames.EDIT)}\n    </NavLink>\n  );\n};\n\nconst assessmentCategoriesArr = [\n  AssessmentCategories.Mission,\n  AssessmentCategories.Path,\n  AssessmentCategories.Sidequest,\n  AssessmentCategories.Contest\n];\n\nconst categorySelect = (\n  category: AssessmentCategory,\n  handleSelect = (i: AssessmentCategory, e?: React.SyntheticEvent<HTMLElement>) => {}\n) => (\n  <CategorySelectComponent\n    className={Classes.MINIMAL}\n    items={assessmentCategoriesArr}\n    onItemSelect={handleSelect}\n    itemRenderer={categoryRenderer}\n    filterable={false}\n  >\n    <Button\n      className={Classes.MINIMAL}\n      text={category}\n      rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n    />\n  </CategorySelectComponent>\n);\n\nconst CategorySelectComponent = Select.ofType<AssessmentCategory>();\n\nconst categoryRenderer: ItemRenderer<AssessmentCategory> = (\n  category,\n  { handleClick, modifiers, query }\n) => <MenuItem active={false} key={category} onClick={handleClick} text={category} />;\n","import { Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../ControlButton';\n\ntype ControlBarToggleEditModeButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  toggleEditMode?(): void;\n};\n\ntype StateProps = {\n  key: string;\n  editingMode?: string;\n};\n\nexport function ControlBarToggleEditModeButton(props: ControlBarToggleEditModeButtonProps) {\n  const editMode = props.editingMode === 'question' ? 'Global' : 'Question Specific';\n  return (\n    <Tooltip content={'Switch to ' + editMode + ' Editing Mode'}>\n      {controlButton(editMode + ' Editing Mode', IconNames.REFRESH, props.toggleEditMode)}\n    </Tooltip>\n  );\n}\n","export const getValueFromPath = (path: Array<string | number>, obj: any): any => {\n  for (const next of path) {\n    obj = obj[next];\n  }\n  return obj;\n};\n\nexport const assignToPath = (path: Array<string | number>, value: any, obj: any): void => {\n  let i = 0;\n  for (i = 0; i < path.length - 1; i++) {\n    obj = obj[path[i]];\n  }\n  obj[path[i]] = value;\n};\n\nexport const limitNumberRange = (min: number | null = 0, max: number | null = null) => (\n  value: number | string\n): number => {\n  value = typeof value === 'string' ? parseInt(value, 10) : value;\n  let result;\n  if (min !== null && value < min) {\n    result = min;\n  } else if (max !== null && value > max) {\n    result = max;\n  } else {\n    result = value;\n  }\n  return result;\n};\n","import * as React from 'react';\nimport Textarea from 'react-textarea-autosize';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport Markdown from '../Markdown';\nimport { assignToPath, getValueFromPath } from './EditingWorkspaceSideContentHelper';\n\ntype TextAreaContentProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  processResults?: (newVal: string | number) => string | number;\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  isNumber?: boolean;\n  path: Array<string | number>;\n  useRawValue?: boolean;\n};\n\ntype State = {\n  isEditing: boolean;\n  isNumber: boolean;\n  fieldValue: string;\n  useRawValue: boolean;\n};\n\nexport class TextAreaContent extends React.Component<TextAreaContentProps, State> {\n  public constructor(props: TextAreaContentProps) {\n    super(props);\n    const isNumberVal = this.props.isNumber || false;\n    this.state = {\n      isEditing: false,\n      isNumber: isNumberVal,\n      fieldValue: '',\n      useRawValue: this.props.useRawValue || isNumberVal\n    };\n  }\n\n  public render() {\n    let display;\n    if (this.state.isEditing) {\n      display = this.makeEditingTextarea();\n    } else {\n      const filler = 'Please enter value (if applicable)';\n      let value = getValueFromPath(this.props.path, this.props.assessment);\n      if (!this.props.isNumber) {\n        value = value || '';\n        value = value.match(/^\\s*$/) ? filler : value;\n      }\n      if (this.state.useRawValue) {\n        display = value;\n      } else {\n        display = <Markdown content={value} />;\n      }\n    }\n    return <div onClick={this.toggleEditField()}>{display}</div>;\n  }\n\n  private saveEditAssessment = (e: any) => {\n    let fieldValue: number | string;\n    if (this.state.isNumber) {\n      fieldValue = parseInt(this.state.fieldValue, 10);\n      if (isNaN(fieldValue)) {\n        fieldValue = getValueFromPath(this.props.path, this.props.assessment);\n      }\n    } else {\n      fieldValue = this.state.fieldValue;\n    }\n    const originalVal = getValueFromPath(this.props.path, this.props.assessment);\n    if (this.props.processResults) {\n      fieldValue = this.props.processResults(fieldValue);\n    }\n    if (fieldValue !== originalVal) {\n      const assessmentVal = this.props.assessment;\n      assignToPath(this.props.path, fieldValue, assessmentVal);\n      this.props.updateAssessment(assessmentVal);\n    }\n\n    this.setState({\n      isEditing: false\n    });\n  };\n\n  private handleEditAssessment = (e: any) => {\n    this.setState({\n      fieldValue: e.target.value\n    });\n  };\n\n  private makeEditingTextarea = () => (\n    <Textarea\n      autoFocus={true}\n      className={'editing-textarea'}\n      onChange={this.handleEditAssessment}\n      onBlur={this.saveEditAssessment}\n      value={this.state.fieldValue}\n    />\n  );\n\n  private toggleEditField = () => (e: any) => {\n    if (!this.state.isEditing) {\n      const fieldVal = getValueFromPath(this.props.path, this.props.assessment) || '';\n      this.setState({\n        isEditing: true,\n        fieldValue: typeof fieldVal === 'string' ? fieldVal : fieldVal.toString()\n      });\n    }\n  };\n}\n\nexport default TextAreaContent;\n","import { Card, Elevation, H6 } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport {\n  Assessment,\n  IProgrammingQuestion,\n  Testcase,\n  testcaseTemplate\n} from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport { getValueFromPath } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype AutograderProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcase: Testcase) => void;\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  questionId: number;\n};\n\nexport class AutograderTab extends React.Component<AutograderProps, {}> {\n  public render() {\n    const question = this.props.assessment.questions[this.props.questionId] as IProgrammingQuestion;\n    const publicTestPath = ['questions', this.props.questionId, 'testcases'];\n\n    const publicTestcases = question.testcases.map((testcase, index) => (\n      <div key={index}>{this.autograderCard(publicTestPath, index)}</div>\n    ));\n\n    const privateTestPath = ['questions', this.props.questionId, 'testcasesPrivate'];\n    const privateTestcases = question.testcasesPrivate!.map((testcase, index) => (\n      <div key={index}>{this.autograderCard(privateTestPath, index)}</div>\n    ));\n\n    return (\n      <div>\n        Public Testcases\n        {publicTestcases}\n        {controlButton('New public testcase', IconNames.PLUS, this.addTestcase(question.testcases))}\n        <br />\n        <br />\n        Private Testcases\n        {privateTestcases}\n        {controlButton(\n          'New private testcase',\n          IconNames.PLUS,\n          this.addTestcase(question.testcasesPrivate!)\n        )}\n      </div>\n    );\n  }\n\n  private addTestcase = (testcases: Testcase[]) => () => {\n    testcases.push(testcaseTemplate());\n    this.props.updateAssessment(this.props.assessment);\n  };\n\n  private removeTestcase = (testcases: Testcase[], id: number) => {\n    testcases.splice(id, 1);\n    this.props.updateAssessment(this.props.assessment);\n  };\n\n  private autograderCard = (testcasePath: Array<string | number>, index: number) => {\n    const testcases = getValueFromPath(testcasePath, this.props.assessment) as Testcase[];\n    const testcase = testcases[index];\n\n    return (\n      <div>\n        <Card className=\"row listing\" elevation={Elevation.ONE}>\n          <div className=\"col-xs-9 listing-text\">\n            {/* {makeOverviewCardTitle(overview, index, setBetchaAssessment, renderGradingStatus)} */}\n            <div className=\"row listing-program\">\n              <H6>\n                Test Program:\n                <TextAreaContent\n                  assessment={this.props.assessment}\n                  path={testcasePath.concat([index, 'program'])}\n                  useRawValue={true}\n                  updateAssessment={this.props.updateAssessment}\n                />\n              </H6>\n            </div>\n            <div className=\"row listing-expected\">\n              <H6>\n                Score:\n                <TextAreaContent\n                  assessment={this.props.assessment}\n                  isNumber={true}\n                  path={testcasePath.concat([index, 'score'])}\n                  updateAssessment={this.props.updateAssessment}\n                />\n              </H6>\n            </div>\n            <div className=\"row listing-expected\">\n              <H6>\n                Expected Answer:\n                <TextAreaContent\n                  assessment={this.props.assessment}\n                  path={testcasePath.concat([index, 'answer'])}\n                  useRawValue={true}\n                  updateAssessment={this.props.updateAssessment}\n                />\n              </H6>\n            </div>\n            <div className=\"listing-controls\">\n              <div>\n                {controlButton('Test', IconNames.PLAY, () =>\n                  this.props.handleTestcaseEval(testcase)\n                )}\n                {controlButton('Delete', IconNames.DELETE, () =>\n                  this.removeTestcase(testcases, index)\n                )}\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    );\n  };\n}\n","import { Button, Classes, Divider, MenuItem, Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\n\nimport { sourceLanguages, styliseChapter } from '../application/ApplicationTypes';\nimport { Chapter } from '../application/types/ChapterTypes';\nimport {\n  External,\n  externalLibraries,\n  ExternalLibraryName\n} from '../application/types/ExternalTypes';\nimport { Assessment, emptyLibrary, Library } from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport { assignToPath, getValueFromPath } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype DeploymentTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n  handleRefreshLibrary: (library: Library) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  label: string;\n  pathToLibrary: Array<string | number>;\n  pathToCopy?: Array<string | number>;\n  isOptionalDeployment: boolean;\n};\n\nexport class DeploymentTab extends React.Component<DeploymentTabProps, {}> {\n  public render() {\n    if (!this.props.isOptionalDeployment) {\n      return (\n        <div>\n          {this.props.label + ' Deployment'}\n          <br />\n          {this.deploymentTab()}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Switch\n            checked={!this.isEmptyLibrary()}\n            label={'Enable ' + this.props.label + ' Deployment'}\n            onChange={this.handleSwitchDeployment}\n          />\n          {this.isEmptyLibrary() ? null : this.deploymentTab()}\n        </div>\n      );\n    }\n  }\n\n  private deploymentTab = () => {\n    const deploymentPath = this.props.pathToLibrary;\n    const deployment = getValueFromPath(deploymentPath, this.props.assessment) as Library;\n    // const deploymentDisp = this.props.isGlobalDeployment ? 'Global Deployment' : 'Local Deployment';\n    const symbols = deployment.external.symbols.map((symbol, i) => (\n      <tr key={i}>\n        <td>{this.textareaContent(deploymentPath.concat(['external', 'symbols', i]))}</td>\n        <td style={{ width: '100px' }}>\n          {controlButton('Delete', IconNames.MINUS, this.handleSymbolDelete(i))}\n        </td>\n      </tr>\n    ));\n\n    const globals = deployment.globals.map((symbol, i) => (\n      <tr key={i}>\n        <td style={{ width: '170px' }}>\n          {this.textareaContent(deploymentPath.concat(['globals', i, 0]))}\n        </td>\n        <td>{this.globalValueTextareaContent(i)}</td>\n        <td style={{ width: '90px' }}>\n          {controlButton('Delete', IconNames.MINUS, this.handleGlobalDelete(i))}\n        </td>\n      </tr>\n    ));\n\n    const resetLibrary = controlButton('Use this Library', IconNames.REFRESH, () =>\n      this.props.handleRefreshLibrary(deployment)\n    );\n\n    const symbolsFragment = (\n      <React.Fragment>\n        External Library:\n        <br />\n        {externalSelect(deployment.external.name, this.handleExternalSelect!)}\n        <Divider />\n        <div>Symbols:</div>\n        <br />\n        <table style={{ width: '100%' }}>\n          <tbody>{symbols}</tbody>\n        </table>\n        {controlButton('New Symbol', IconNames.PLUS, this.handleNewSymbol)}\n      </React.Fragment>\n    );\n\n    const globalsFragment = (\n      <React.Fragment>\n        <div>Globals:</div>\n        <br />\n        <table style={{ width: '100%', borderSpacing: '5px' }}>\n          <tbody>{globals}</tbody>\n        </table>\n        {controlButton('New Global', IconNames.PLUS, this.handleNewGlobal)}\n      </React.Fragment>\n    );\n\n    return (\n      <div>\n        {/* {deploymentDisp}\n        <br /> */}\n        <Divider />\n        {resetLibrary}\n        <Divider />\n        Interpreter:\n        <br />\n        {chapterSelect(deployment.chapter, deployment.variant, this.handleChapterSelect)}\n        <Divider />\n        {symbolsFragment}\n        <Divider />\n        {globalsFragment}\n      </div>\n    );\n  };\n\n  private textareaContent = (path: Array<string | number>) => {\n    return (\n      <TextAreaContent\n        assessment={this.props.assessment}\n        path={path}\n        processResults={removeSpaces}\n        updateAssessment={this.props.updateAssessment}\n        useRawValue={true}\n      />\n    );\n  };\n\n  private globalValueTextareaContent = (i: number) => {\n    const pathVal = this.props.pathToLibrary.concat(['globals', i, 2]);\n    return (\n      <TextAreaContent\n        assessment={this.props.assessment}\n        path={pathVal}\n        updateAssessment={this.handleGlobalValueUpdate(i)}\n        useRawValue={true}\n      />\n    );\n  };\n\n  private handleGlobalValueUpdate = (i: number) => (assessment: Assessment) => {\n    const deployment = getValueFromPath(this.props.pathToLibrary, this.props.assessment) as Library;\n    const global = deployment.globals[i];\n    try {\n      global[1] = altEval(global[2]!);\n      this.props.updateAssessment(assessment);\n    } catch (e) {\n      global[2] = '\"Invalid Expression\"';\n    }\n  };\n\n  private handleSymbolDelete = (index: number) => () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    const symbols = deployment.external.symbols;\n    symbols.splice(index, 1);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleNewSymbol = () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    const symbols = deployment.external.symbols;\n    symbols.push('new_symbol');\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleGlobalDelete = (index: number) => () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.globals.splice(index, 1);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleNewGlobal = () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.globals.push(['new_global', null, 'null']);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleChapterSelect = (i: Chapter, _e?: React.SyntheticEvent<HTMLElement>) => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.chapter = i.chapter;\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleExternalSelect = (i: External, _e?: React.SyntheticEvent<HTMLElement>) => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.external.name = i.name;\n    deployment.external.symbols = JSON.parse(JSON.stringify(externalLibraries.get(i.name)!));\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleSwitchDeployment = () => {\n    const assessment = this.props.assessment;\n    if (this.isEmptyLibrary()) {\n      let library = getValueFromPath(\n        this.props.pathToCopy || ['globalDeployment'],\n        assessment\n      ) as Library;\n      if (library.chapter === -1) {\n        library = assessment.globalDeployment!;\n      }\n      library = JSON.parse(JSON.stringify(library));\n      assignToPath(this.props.pathToLibrary, library, assessment);\n    } else {\n      assignToPath(this.props.pathToLibrary, emptyLibrary(), assessment);\n    }\n    this.props.updateAssessment(assessment);\n  };\n\n  private isEmptyLibrary = (path: Array<string | number> = this.props.pathToLibrary) => {\n    return getValueFromPath(path.concat(['chapter']), this.props.assessment) === -1;\n  };\n}\n\nconst removeSpaces = (str: string | number) => {\n  return typeof str === 'string' ? str.replace(/\\s+/g, '') : str;\n};\n\nconst altEval = (str: string): any => {\n  // eslint-disable-next-line no-new-func\n  return Function('\"use strict\";return (' + str + ')')();\n};\n\nconst chapters = sourceLanguages.map(lang => ({\n  chapter: lang.chapter,\n  variant: lang.variant,\n  displayName: styliseChapter(lang.chapter, lang.variant)\n}));\n\nconst chapterSelect = (\n  currentChap: number,\n  variant: Variant = 'default',\n  handleSelect = (i: Chapter, e?: React.SyntheticEvent<HTMLElement>) => {}\n) => (\n  <ChapterSelectComponent\n    className={Classes.MINIMAL}\n    items={chapters}\n    onItemSelect={handleSelect}\n    itemRenderer={chapterRenderer}\n    filterable={false}\n  >\n    <Button\n      className={Classes.MINIMAL}\n      text={styliseChapter(currentChap, variant)}\n      rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n    />\n  </ChapterSelectComponent>\n);\n\nconst ChapterSelectComponent = Select.ofType<Chapter>();\n\nconst chapterRenderer: ItemRenderer<Chapter> = (chap, { handleClick, modifiers, query }) => (\n  <MenuItem active={false} key={chap.chapter} onClick={handleClick} text={chap.displayName} />\n);\n\nconst iExternals = Array.from(externalLibraries.entries()).map((entry, index) => ({\n  name: entry[0] as ExternalLibraryName,\n  key: index,\n  symbols: entry[1]\n}));\n\nconst externalSelect = (\n  currentExternal: string,\n  handleSelect: (i: External, e?: React.SyntheticEvent<HTMLElement>) => void\n) => (\n  <ExternalSelectComponent\n    className={Classes.MINIMAL}\n    items={iExternals}\n    onItemSelect={handleSelect}\n    itemRenderer={externalRenderer}\n    filterable={false}\n  >\n    <Button\n      className={Classes.MINIMAL}\n      text={currentExternal}\n      rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n    />\n  </ExternalSelectComponent>\n);\n\nconst ExternalSelectComponent = Select.ofType<External>();\n\nconst externalRenderer: ItemRenderer<External> = (external, { handleClick, modifiers, query }) => (\n  <MenuItem active={false} key={external.key} onClick={handleClick} text={external.name} />\n);\n\nexport default DeploymentTab;\n","import * as React from 'react';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport { limitNumberRange } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype GradingTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  path: Array<string | number>;\n};\n\nexport class GradingTab extends React.Component<GradingTabProps, {}> {\n  public constructor(props: GradingTabProps) {\n    super(props);\n  }\n\n  public render() {\n    return this.gradingTab();\n  }\n\n  private textareaContent = (path: Array<string | number>) => {\n    return (\n      <TextAreaContent\n        assessment={this.props.assessment}\n        isNumber={true}\n        path={path}\n        processResults={limitNumberRange(0)}\n        updateAssessment={this.props.updateAssessment}\n      />\n    );\n  };\n\n  private gradingTab = () => (\n    <div>\n      Max Grade:\n      {this.textareaContent(this.props.path.concat(['maxGrade']))}\n      <br />\n      Max Xp:\n      {this.textareaContent(this.props.path.concat(['maxXp']))}\n    </div>\n  );\n}\n\nexport default GradingTab;\n","import { Button, ButtonGroup, Classes, Dialog, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Assessment, mcqTemplate, programmingTemplate } from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport Markdown from '../Markdown';\nimport { history } from '../utils/HistoryHelper';\n\ntype ManageQuestionTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  hasUnsavedChanges: boolean;\n  questionId: number;\n};\n\ntype State = {\n  showSaveOverlay: boolean;\n  modifyAssessment: () => void;\n};\n\nexport class ManageQuestionTab extends React.Component<ManageQuestionTabProps, State> {\n  public constructor(props: ManageQuestionTabProps) {\n    super(props);\n    this.state = {\n      showSaveOverlay: false,\n      modifyAssessment: () => {}\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        {this.confirmSaveOverlay()}\n        {this.props.assessment.questions.map((q, index) => (\n          <div key={index}>\n            Question {index + 1}\n            <br />\n            <Button className=\"mcq-option col-xs-12\" minimal={true}>\n              <Markdown\n                content={q.content.length > 200 ? q.content.substring(0, 300) + '...' : q.content}\n              />\n            </Button>\n            {this.manageQuestionTab(index)}\n            <br />\n            <br />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private manageQuestionTab = (index: number) => {\n    return (\n      <div>\n        {controlButton(\n          `Clone`,\n          IconNames.DOCUMENT,\n          this.confirmSave(\n            this.makeQuestion(() => deepCopy(this.props.assessment.questions[index]), index)\n          )\n        )}\n        {controlButton(`Delete`, IconNames.REMOVE, this.confirmSave(this.deleteQuestion(index)))}\n        {controlButton(\n          `Shift Up`,\n          IconNames.CARET_UP,\n          this.confirmSave(this.shiftQuestion(-1, index)),\n          {},\n          index === 0\n        )}\n        {controlButton(\n          `Shift Down`,\n          IconNames.CARET_DOWN,\n          this.confirmSave(this.shiftQuestion(1, index)),\n          {},\n          index >= this.props.assessment.questions.length - 1\n        )}\n        <br />\n        {controlButton(\n          'Insert Programming Question',\n          IconNames.FONT,\n          this.confirmSave(this.makeQuestion(programmingTemplate, index))\n        )}\n        {controlButton(\n          'Insert MCQ Question',\n          IconNames.CONFIRM,\n          this.confirmSave(this.makeQuestion(mcqTemplate, index))\n        )}\n      </div>\n    );\n  };\n\n  private shiftQuestion = (dir: number, index: number) => () => {\n    const assessment = this.props.assessment;\n    const newIndex = index + dir;\n    if (newIndex >= 0 && newIndex < assessment.questions.length) {\n      const question = assessment.questions[index];\n      const questions = assessment.questions;\n      questions[index] = questions[newIndex];\n      questions[newIndex] = question;\n      assessment.questions = questions;\n      this.props.updateAssessment(assessment);\n      history.push('/mission-control/-1/' + newIndex.toString());\n    }\n  };\n\n  private makeQuestion = (template: () => any, index: number) => () => {\n    const assessment = this.props.assessment;\n    index = index + 1;\n    const questions = assessment.questions;\n    questions.splice(index, 0, template());\n    assessment.questions = questions;\n    this.props.updateAssessment(assessment);\n    history.push('/mission-control/-1/' + index.toString());\n  };\n\n  private deleteQuestion = (index: number) => () => {\n    const assessment = this.props.assessment;\n    let questions = assessment.questions;\n    if (questions.length > 1) {\n      questions = questions.slice(0, index).concat(questions.slice(index + 1));\n    }\n    assessment.questions = questions;\n    this.props.updateAssessment(assessment);\n  };\n\n  private confirmSave = (modifyAssessment: () => void) => () => {\n    if (this.props.hasUnsavedChanges) {\n      this.setState({\n        showSaveOverlay: true,\n        modifyAssessment\n      });\n    } else {\n      modifyAssessment();\n    }\n  };\n\n  /**\n   * Asks to save work.\n   */\n  private confirmSaveOverlay = () => (\n    <Dialog\n      className=\"assessment-reset\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={this.state.showSaveOverlay}\n      title=\"Confirmation: Save unsaved changes?\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Markdown content=\"Are you sure you want to save over your unsaved changes?\" />\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <ButtonGroup>\n          {controlButton('Cancel', null, () => this.setState({ showSaveOverlay: false }), {\n            minimal: false\n          })}\n          {controlButton(\n            'Confirm',\n            null,\n            () => {\n              this.state.modifyAssessment();\n              this.setState({\n                showSaveOverlay: false\n              });\n            },\n            { minimal: false, intent: Intent.DANGER }\n          )}\n        </ButtonGroup>\n      </div>\n    </Dialog>\n  );\n}\n\nconst deepCopy = (arr: any) => {\n  return JSON.parse(JSON.stringify(arr));\n};\n\nexport default ManageQuestionTab;\n","import { Card } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Assessment, IMCQQuestion } from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport { limitNumberRange } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype MCQQuestionTemplateTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  questionId: number;\n};\n\nexport class MCQQuestionTemplateTab extends React.Component<MCQQuestionTemplateTabProps, {}> {\n  public constructor(props: MCQQuestionTemplateTabProps) {\n    super(props);\n  }\n\n  public render() {\n    return this.mcqTab();\n  }\n\n  private mcqTab = () => {\n    const questionId = this.props.questionId;\n    const question = this.props.assessment!.questions[questionId] as IMCQQuestion;\n    const mcqButton = question.choices.map((choice, i) => (\n      <div key={i} className=\"mcq-option col-xs-12\">\n        Option {i}:{this.textareaContent(['questions', questionId, 'choices', i, 'content'])}\n        <br />\n        Hint:\n        {this.textareaContent(['questions', questionId, 'choices', i, 'hint'])}\n      </div>\n    ));\n    const deleteButton = controlButton('Delete Option', IconNames.REMOVE, this.delOption);\n\n    return (\n      <div className=\"MCQChooser row\">\n        <Card className=\"mcq-content-parent col-xs-12 middle-xs\">\n          <div className=\"row mcq-options-parent between-xs\">\n            {mcqButton}\n            Solution:\n            {this.textareaContent(['questions', questionId, 'solution'], true, [\n              0,\n              question.choices.length\n            ])}\n            <br />\n            {controlButton('Add Option', IconNames.CONFIRM, this.addOption)}\n            {question.choices.length > 0 ? deleteButton : undefined}\n          </div>\n        </Card>\n      </div>\n    );\n  };\n\n  private addOption = () => {\n    const assessment = this.props.assessment;\n    const questionId = this.props.questionId;\n    const question = assessment!.questions[questionId] as IMCQQuestion;\n    const choices = question.choices.concat([\n      {\n        content: 'A',\n        hint: null\n      }\n    ]);\n    question.choices = choices;\n    assessment!.questions[questionId] = question;\n    this.props.updateAssessment(assessment);\n  };\n\n  private delOption = () => {\n    const assessment = this.props.assessment;\n    const questionId = this.props.questionId;\n    const question = assessment!.questions[questionId] as IMCQQuestion;\n    const choices = question.choices.slice(0, question.choices.length - 1);\n    question.choices = choices;\n    assessment!.questions[questionId] = question;\n    this.props.updateAssessment(assessment);\n  };\n\n  private textareaContent = (\n    path: Array<string | number>,\n    isNumber: boolean = false,\n    range: number[] = [0]\n  ) => {\n    if (isNumber) {\n      return (\n        <TextAreaContent\n          assessment={this.props.assessment}\n          isNumber={true}\n          path={path}\n          processResults={limitNumberRange(range[0], range[1])}\n          updateAssessment={this.props.updateAssessment}\n        />\n      );\n    } else {\n      return (\n        <TextAreaContent\n          assessment={this.props.assessment}\n          path={path}\n          updateAssessment={this.props.updateAssessment}\n        />\n      );\n    }\n  };\n}\n\nexport default MCQQuestionTemplateTab;\n","import { Button, Card, Classes, Divider, IconName, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport * as React from 'react';\nimport AceEditor from 'react-ace';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport { WorkspaceState } from '../workspace/WorkspaceTypes';\nimport { assignToPath, getValueFromPath } from './EditingWorkspaceSideContentHelper';\n\ntype QuestionEditorProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n  handleEditorValueChange: (val: string) => void;\n  handleUpdateWorkspace: (options: Partial<WorkspaceState>) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  editorValue: string | null;\n  questionId: number;\n};\n\ntype OwnProps = {\n  activeEditor: QuestionEditor;\n  templateValue: string;\n  templateFocused: boolean;\n};\n\nconst questionEditorPaths = ['prepend', 'postpend', 'solutionTemplate', 'answer'] as const;\n\nexport type QuestionEditorId = typeof questionEditorPaths[number];\n\nconst QuestionEditorSelect = Select.ofType<QuestionEditor>();\n\nexport type QuestionEditor = {\n  label: string;\n  icon: IconName;\n  id: QuestionEditorId;\n};\n\nconst questionEditors: QuestionEditor[] = [\n  {\n    label: 'Prepend',\n    icon: IconNames.CHEVRON_UP,\n    id: 'prepend'\n  },\n  {\n    label: 'Postpend',\n    icon: IconNames.CHEVRON_DOWN,\n    id: 'postpend'\n  },\n  {\n    label: 'Solution Template',\n    icon: IconNames.MANUAL,\n    id: 'solutionTemplate'\n  },\n  {\n    label: 'Suggested Answer',\n    icon: IconNames.TICK,\n    id: 'answer'\n  }\n];\n\n/*\n * activeEditor is the default editor to show initially\n */\nexport class ProgrammingQuestionTemplateTab extends React.Component<QuestionEditorProps, OwnProps> {\n  public constructor(props: QuestionEditorProps) {\n    super(props);\n    this.state = {\n      activeEditor: questionEditors[0],\n      templateValue: '',\n      templateFocused: false\n    };\n  }\n\n  public render() {\n    return this.programmingTab();\n  }\n\n  private programmingTab = () => {\n    const qnPath = ['questions', this.props.questionId];\n    const path = qnPath.concat(this.state.activeEditor.id);\n\n    const copyFromEditorButton = controlButton(\n      'Copy from Editor',\n      IconNames.IMPORT,\n      this.handleCopyFromEditor(path)\n    );\n\n    const copyToEditorButton = controlButton(\n      'Copy to Editor',\n      IconNames.EXPORT,\n      this.handleCopyToEditor(path)\n    );\n\n    const editorPanel = (\n      <div>\n        {copyFromEditorButton}\n        {copyToEditorButton}\n        <Divider />\n        {this.editor(path)}\n      </div>\n    );\n\n    const menuRenderer: ItemRenderer<QuestionEditor> = (editor, { handleClick }) => (\n      <MenuItem\n        active={false}\n        key={editor.id}\n        onClick={handleClick}\n        text={editor.label}\n        icon={editor.icon}\n      />\n    );\n\n    const editorSelect = (\n      currentEditor: QuestionEditor,\n      handleSelect: (i: QuestionEditor) => void\n    ) => (\n      <QuestionEditorSelect\n        className={Classes.MINIMAL}\n        items={questionEditors}\n        itemRenderer={menuRenderer}\n        onItemSelect={handleSelect}\n        filterable={false}\n      >\n        <Button\n          className={Classes.MINIMAL}\n          text={currentEditor.label}\n          icon={IconNames.EDIT}\n          rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n        />\n      </QuestionEditorSelect>\n    );\n\n    return (\n      <div className=\"side-content\">\n        <Card>\n          {editorSelect(this.state.activeEditor, this.handleChangeActiveEditor)}\n          <Divider />\n          <div className=\"side-content-text\">{editorPanel}</div>\n        </Card>\n      </div>\n    );\n  };\n\n  private editor = (path: Array<string | number>) => {\n    const value = this.state.templateFocused\n      ? this.state.templateValue\n      : getValueFromPath(path, this.props.assessment);\n\n    return (\n      <div onClick={this.focusEditor(path)} onBlur={this.unFocusEditor(path)}>\n        <AceEditor\n          className=\"react-ace\"\n          editorProps={{\n            $blockScrolling: Infinity\n          }}\n          fontSize={14}\n          highlightActiveLine={false}\n          mode=\"javascript\"\n          onChange={this.handleTemplateChange}\n          theme=\"source\"\n          value={value}\n          width=\"100%\"\n        />\n      </div>\n    );\n  };\n\n  private handleChangeActiveEditor = (editor: QuestionEditor) => {\n    this.setState({\n      activeEditor: editor\n    });\n  };\n\n  private handleTemplateChange = (newCode: string) => {\n    this.setState({\n      templateValue: newCode\n    });\n  };\n\n  private focusEditor = (path: Array<string | number>) => (e: any): void => {\n    if (!this.state.templateFocused) {\n      this.setState({\n        templateValue: getValueFromPath(path, this.props.assessment),\n        templateFocused: true\n      });\n    }\n  };\n\n  private unFocusEditor = (path: Array<string | number>) => (e: any): void => {\n    if (this.state.templateFocused) {\n      const value = getValueFromPath(path, this.props.assessment);\n      if (value !== this.state.templateValue) {\n        const assessmentVal = this.props.assessment;\n        assignToPath(path, this.state.templateValue, assessmentVal);\n        this.props.updateAssessment(assessmentVal);\n      }\n\n      if (this.state.activeEditor.id === 'prepend') {\n        const editorPrepend = this.state.templateValue;\n        this.props.handleUpdateWorkspace({ editorPrepend });\n      } else if (this.state.activeEditor.id === 'postpend') {\n        const editorPostpend = this.state.templateValue;\n        this.props.handleUpdateWorkspace({ editorPostpend });\n      }\n\n      this.setState({\n        templateValue: '',\n        templateFocused: false\n      });\n    }\n  };\n\n  private handleCopyFromEditor = (path: Array<string | number>) => (): void => {\n    const assessment = this.props.assessment;\n    assignToPath(path, this.props.editorValue, assessment);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleCopyToEditor = (path: Array<string | number>) => (): void => {\n    const value = getValueFromPath(path, this.props.assessment);\n    this.props.handleEditorValueChange(value);\n  };\n}\n\nexport default ProgrammingQuestionTemplateTab;\n","import { ButtonGroup, Classes, Dialog, Intent, NonIdealState, Spinner } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport {\n  Assessment,\n  AssessmentOverview,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  Question,\n  QuestionTypes,\n  Testcase\n} from '../assessment/AssessmentTypes';\nimport { ControlBarProps } from '../controlBar/ControlBar';\nimport { ControlBarClearButton } from '../controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../controlBar/ControlBarQuestionViewButton';\nimport { ControlBarResetButton } from '../controlBar/ControlBarResetButton';\nimport { ControlBarRunButton } from '../controlBar/ControlBarRunButton';\nimport { ControlButtonSaveButton } from '../controlBar/ControlBarSaveButton';\nimport { ControlBarToggleEditModeButton } from '../controlBar/ControlBarToggleEditModeButton';\nimport controlButton from '../ControlButton';\nimport { AutograderTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentAutograderTab';\nimport { DeploymentTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentDeploymentTab';\nimport { GradingTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentGradingTab';\nimport { ManageQuestionTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentManageQuestionTab';\nimport { MCQQuestionTemplateTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentMcqQuestionTemplateTab';\nimport { ProgrammingQuestionTemplateTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentProgrammingQuestionTemplateTab';\nimport { TextAreaContent } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentTextAreaContent';\nimport { Position } from '../editor/EditorTypes';\nimport Markdown from '../Markdown';\nimport { SideContentProps } from '../sideContent/SideContent';\nimport SideContentToneMatrix from '../sideContent/SideContentToneMatrix';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport { history } from '../utils/HistoryHelper';\nimport Workspace, { WorkspaceProps } from '../workspace/Workspace';\nimport { WorkspaceState } from '../workspace/WorkspaceTypes';\nimport {\n  retrieveLocalAssessment,\n  storeLocalAssessment,\n  storeLocalAssessmentOverview\n} from '../XMLParser/XMLParserHelper';\n\nexport type EditingWorkspaceProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChapterSelect: (chapter: any, changeEvent: any) => void;\n  handleClearContext: (library: Library) => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleInterruptEval: () => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleResetWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleUpdateWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleSave: (id: number, answer: number | string) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleUpdateCurrentAssessmentId: (assessmentId: number, questionId: number) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\nexport type OwnProps = {\n  assessmentId: number;\n  questionId: number;\n  assessmentOverview: AssessmentOverview;\n  updateAssessmentOverview: (overview: AssessmentOverview) => void;\n  notAttempted: boolean;\n  closeDate: string;\n};\n\nexport type StateProps = {\n  editorHeight?: number;\n  editorValue: string | null;\n  editorWidth: string;\n  breakpoints: string[];\n  highlightedLines: number[][];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  newCursorPosition?: Position;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  storedAssessmentId?: number;\n  storedQuestionId?: number;\n};\n\ntype State = {\n  assessment: Assessment | null;\n  activeTab: SideContentType;\n  editingMode: string;\n  hasUnsavedChanges: boolean;\n  showResetTemplateOverlay: boolean;\n  originalMaxGrade: number;\n  originalMaxXp: number;\n};\n\nclass EditingWorkspace extends React.Component<EditingWorkspaceProps, State> {\n  public constructor(props: EditingWorkspaceProps) {\n    super(props);\n    this.state = {\n      assessment: retrieveLocalAssessment(),\n      activeTab: SideContentType.editorQuestionOverview,\n      editingMode: 'question',\n      hasUnsavedChanges: false,\n      showResetTemplateOverlay: false,\n      originalMaxGrade: 0,\n      originalMaxXp: 0\n    };\n  }\n\n  /**\n   * After mounting (either an older copy of the assessment\n   * or a loading screen), try to fetch a newer assessment,\n   * and show the briefing.\n   */\n  public componentDidMount() {\n    if (this.state.assessment) {\n      this.resetWorkspaceValues();\n      this.setState({\n        originalMaxGrade: this.getMaxMarks('maxGrade'),\n        originalMaxXp: this.getMaxMarks('maxXp')\n      });\n    }\n  }\n\n  /**\n   * Once there is an update (due to the assessment being fetched), check\n   * if a workspace reset is needed.\n   */\n  public componentDidUpdate() {\n    this.checkWorkspaceReset(this.props);\n  }\n\n  public render() {\n    if (this.state.assessment === null || this.state.assessment!.questions.length === 0) {\n      return (\n        <NonIdealState\n          className={classNames('WorkspaceParent', Classes.DARK)}\n          description=\"Getting mission ready...\"\n          icon={<Spinner size={Spinner.SIZE_LARGE} />}\n        />\n      );\n    }\n\n    const questionId = this.formatedQuestionId();\n    const question: Question = this.state.assessment.questions[questionId];\n    const workspaceProps: WorkspaceProps = {\n      controlBarProps: this.controlBarProps(questionId),\n      editorProps:\n        question.type === QuestionTypes.programming\n          ? {\n              editorSessionId: '',\n              editorValue:\n                this.props.editorValue ||\n                question.editorValue ||\n                (question as IProgrammingQuestion).solutionTemplate,\n              handleDeclarationNavigate: this.props.handleDeclarationNavigate,\n              handleEditorEval: this.props.handleEditorEval,\n              handleEditorValueChange: this.props.handleEditorValueChange,\n              breakpoints: this.props.breakpoints,\n              highlightedLines: this.props.highlightedLines,\n              newCursorPosition: this.props.newCursorPosition,\n              handleEditorUpdateBreakpoints: this.props.handleEditorUpdateBreakpoints,\n              handleUpdateHasUnsavedChanges: this.props.handleUpdateHasUnsavedChanges,\n              handlePromptAutocomplete: this.props.handlePromptAutocomplete,\n              isEditorAutorun: false\n            }\n          : undefined,\n      editorHeight: this.props.editorHeight,\n      editorWidth: this.props.editorWidth,\n      handleEditorHeightChange: this.props.handleEditorHeightChange,\n      handleEditorWidthChange: this.props.handleEditorWidthChange,\n      handleSideContentHeightChange: this.props.handleSideContentHeightChange,\n      hasUnsavedChanges: this.state.hasUnsavedChanges,\n      mcqProps: {\n        mcq: question as IMCQQuestion,\n        handleMCQSubmit: (option: number) =>\n          this.props.handleSave(this.state.assessment!.questions[questionId].id, option)\n      },\n      sideContentHeight: this.props.sideContentHeight,\n      sideContentProps: this.sideContentProps(this.props, questionId),\n      replProps: {\n        handleBrowseHistoryDown: this.props.handleBrowseHistoryDown,\n        handleBrowseHistoryUp: this.props.handleBrowseHistoryUp,\n        handleReplEval: this.props.handleReplEval,\n        handleReplValueChange: this.props.handleReplValueChange,\n        output: this.props.output,\n        replValue: this.props.replValue\n      }\n    };\n    return (\n      <div className={classNames('WorkspaceParent', Classes.DARK)}>\n        {this.resetTemplateOverlay()}\n        <Workspace {...workspaceProps} />\n      </div>\n    );\n  }\n\n  /* If questionId is out of bounds, set it within range. */\n  private formatedQuestionId = () => {\n    let questionId = this.props.questionId;\n    if (questionId < 0) {\n      questionId = 0;\n    } else if (questionId >= this.state.assessment!.questions.length) {\n      questionId = this.state.assessment!.questions.length - 1;\n    }\n    return questionId;\n  };\n\n  /**\n   * Resets to last save.\n   */\n  private resetTemplateOverlay = () => (\n    <Dialog\n      className=\"assessment-reset\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={this.state.showResetTemplateOverlay}\n      title=\"Confirmation: Reset editor?\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Markdown content=\"Are you sure you want to reset to your last save?\" />\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <ButtonGroup>\n          {controlButton('Cancel', null, () => this.setState({ showResetTemplateOverlay: false }), {\n            minimal: false\n          })}\n          {controlButton(\n            'Confirm',\n            null,\n            () => {\n              const assessment = retrieveLocalAssessment()!;\n              this.setState({\n                assessment,\n                hasUnsavedChanges: false,\n                showResetTemplateOverlay: false,\n                originalMaxGrade: this.getMaxMarks('maxGrade'),\n                originalMaxXp: this.getMaxMarks('maxXp')\n              });\n              this.handleRefreshLibrary();\n              this.resetWorkspaceValues();\n            },\n            { minimal: false, intent: Intent.DANGER }\n          )}\n        </ButtonGroup>\n      </div>\n    </Dialog>\n  );\n\n  /**\n   * Checks if there is a need to reset the workspace, then executes\n   * a dispatch (in the props) if needed.\n   */\n  private checkWorkspaceReset(props: EditingWorkspaceProps) {\n    /* Don't reset workspace if assessment not fetched yet. */\n    if (this.state.assessment === undefined) {\n      return;\n    }\n\n    /* Reset assessment if it has changed.*/\n    const assessmentId = -1;\n    const questionId = this.formatedQuestionId();\n\n    if (\n      this.props.storedAssessmentId !== assessmentId ||\n      this.props.storedQuestionId !== questionId\n    ) {\n      this.resetWorkspaceValues();\n      this.props.handleUpdateCurrentAssessmentId(assessmentId, questionId);\n      this.props.handleUpdateHasUnsavedChanges(false);\n      if (this.state.hasUnsavedChanges) {\n        this.setState({\n          assessment: retrieveLocalAssessment(),\n          hasUnsavedChanges: false\n        });\n      }\n      this.handleRefreshLibrary();\n    }\n  }\n\n  private handleRefreshLibrary = (library: Library | undefined = undefined) => {\n    const question = this.state.assessment!.questions[this.formatedQuestionId()];\n    if (!library) {\n      library =\n        question.library.chapter === -1\n          ? this.state.assessment!.globalDeployment!\n          : question.library;\n    }\n    if (library && library.globals.length > 0) {\n      const globalsVal = library.globals.map((x: any) => x[0]);\n      const symbolsVal = library.external.symbols.concat(globalsVal);\n      library = {\n        ...library,\n        external: {\n          name: library.external.name,\n          symbols: uniq(symbolsVal)\n        }\n      };\n    }\n    this.props.handleClearContext(library);\n  };\n\n  private resetWorkspaceValues = () => {\n    const question: Question = this.state.assessment!.questions[this.formatedQuestionId()];\n    let editorValue: string;\n    let editorPrepend = '';\n    let editorPostpend = '';\n    if (question.type === QuestionTypes.programming) {\n      if (question.editorValue) {\n        editorValue = question.editorValue;\n      } else {\n        editorValue = (question as IProgrammingQuestion).solutionTemplate as string;\n      }\n      editorPrepend = (question as IProgrammingQuestion).prepend;\n      editorPostpend = (question as IProgrammingQuestion).postpend;\n    } else {\n      editorValue = '//If you see this, this is a bug. Please report bug.';\n    }\n\n    this.props.handleResetWorkspace({\n      editorPrepend,\n      editorValue,\n      editorPostpend\n    });\n    this.props.handleEditorValueChange(editorValue);\n  };\n\n  private handleTestcaseEval = (testcase: Testcase) => {\n    const editorTestcases = [testcase];\n    this.props.handleUpdateWorkspace({ editorTestcases });\n    this.props.handleTestcaseEval(0);\n  };\n\n  private handleSave = () => {\n    const assessment = this.state.assessment!;\n    assessment.questions[this.formatedQuestionId()].editorValue = this.props.editorValue;\n    this.setState({\n      assessment,\n      hasUnsavedChanges: false\n    });\n    storeLocalAssessment(assessment);\n    // this.handleRefreshLibrary();\n    this.handleSaveGradeAndXp();\n  };\n\n  private handleSaveGradeAndXp = () => {\n    const curGrade = this.getMaxMarks('maxGrade');\n    const changeGrade = curGrade - this.state.originalMaxGrade;\n    const curXp = this.getMaxMarks('maxXp');\n    const changeXp = curXp - this.state.originalMaxXp;\n    if (changeGrade !== 0 || changeXp !== 0) {\n      const overview = this.props.assessmentOverview;\n      if (changeGrade !== 0) {\n        overview.maxGrade = curGrade;\n      }\n      if (changeXp !== 0) {\n        overview.maxXp = curXp;\n      }\n      this.setState({\n        originalMaxGrade: curGrade,\n        originalMaxXp: curXp\n      });\n      this.props.updateAssessmentOverview(overview);\n      storeLocalAssessmentOverview(overview);\n    }\n  };\n\n  private getMaxMarks = (field: string) => {\n    let result = 0;\n    const questions = this.state.assessment!.questions;\n    for (const question of questions) {\n      result += question[field];\n    }\n    return result as number;\n  };\n  private updateEditAssessmentState = (assessmentVal: Assessment) => {\n    this.setState({\n      assessment: assessmentVal,\n      hasUnsavedChanges: true\n    });\n  };\n\n  private updateAndSaveAssessment = (assessmentVal: Assessment) => {\n    this.setState({\n      assessment: assessmentVal\n    });\n    this.handleRefreshLibrary();\n    this.handleSave();\n    this.resetWorkspaceValues();\n  };\n\n  private handleActiveTabChange = (tab: SideContentType) => {\n    this.setState({\n      activeTab: tab\n    });\n  };\n  private toggleEditingMode = () => {\n    const toggle = this.state.editingMode === 'question' ? 'global' : 'question';\n    this.setState({\n      editingMode: toggle\n    });\n  };\n\n  /** Pre-condition: IAssessment has been loaded */\n  private sideContentProps: (p: EditingWorkspaceProps, q: number) => SideContentProps = (\n    props: EditingWorkspaceProps,\n    questionId: number\n  ) => {\n    const assessment = this.state.assessment!;\n    let tabs: SideContentTab[];\n    if (this.state.editingMode === 'question') {\n      const qnType = this.state.assessment!.questions[this.props.questionId].type;\n      const questionTemplateTab =\n        qnType === 'mcq' ? (\n          <MCQQuestionTemplateTab\n            assessment={assessment}\n            questionId={questionId}\n            updateAssessment={this.updateEditAssessmentState}\n          />\n        ) : (\n          <ProgrammingQuestionTemplateTab\n            assessment={assessment}\n            questionId={questionId}\n            updateAssessment={this.updateEditAssessmentState}\n            editorValue={this.props.editorValue}\n            handleEditorValueChange={this.props.handleEditorValueChange}\n            handleUpdateWorkspace={this.props.handleUpdateWorkspace}\n          />\n        );\n\n      tabs = [\n        {\n          label: `Task ${questionId + 1}`,\n          iconName: IconNames.NINJA,\n          body: (\n            <TextAreaContent\n              assessment={assessment}\n              path={['questions', questionId, 'content']}\n              updateAssessment={this.updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorQuestionOverview,\n          toSpawn: () => true\n        },\n        {\n          label: `Question Template`,\n          iconName: IconNames.DOCUMENT,\n          body: questionTemplateTab,\n          id: SideContentType.editorQuestionTemplate,\n          toSpawn: () => true\n        },\n        {\n          label: `Manage Local Deployment`,\n          iconName: IconNames.HOME,\n          body: (\n            <DeploymentTab\n              assessment={assessment}\n              label={'Question Specific'}\n              handleRefreshLibrary={this.handleRefreshLibrary}\n              pathToLibrary={['questions', questionId, 'library']}\n              updateAssessment={this.updateEditAssessmentState}\n              isOptionalDeployment={true}\n            />\n          ),\n          id: SideContentType.editorLocalDeployment,\n          toSpawn: () => true\n        },\n        {\n          label: `Manage Local Grader Deployment`,\n          iconName: IconNames.CONFIRM,\n          body: (\n            <DeploymentTab\n              assessment={assessment}\n              label={'Question Specific Grader'}\n              handleRefreshLibrary={this.handleRefreshLibrary}\n              pathToLibrary={['questions', questionId, 'graderLibrary']}\n              pathToCopy={['questions', questionId, 'library']}\n              updateAssessment={this.updateEditAssessmentState}\n              isOptionalDeployment={true}\n            />\n          ),\n          id: SideContentType.editorLocalGraderDeployment,\n          toSpawn: () => true\n        },\n        {\n          label: `Grading`,\n          iconName: IconNames.TICK,\n          body: (\n            <GradingTab\n              assessment={assessment}\n              path={['questions', questionId]}\n              updateAssessment={this.updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorGrading,\n          toSpawn: () => true\n        }\n      ];\n      if (qnType === 'programming') {\n        tabs.push({\n          label: `Autograder`,\n          iconName: IconNames.AIRPLANE,\n          body: (\n            <AutograderTab\n              assessment={assessment}\n              questionId={questionId}\n              handleTestcaseEval={this.handleTestcaseEval}\n              updateAssessment={this.updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorAutograder,\n          toSpawn: () => true\n        });\n      }\n      const functionsAttached = assessment!.globalDeployment!.external.symbols;\n      if (functionsAttached.includes('get_matrix')) {\n        tabs.push({\n          label: `Tone Matrix`,\n          iconName: IconNames.GRID_VIEW,\n          body: <SideContentToneMatrix />,\n          id: SideContentType.toneMatrix,\n          toSpawn: () => true\n        });\n      }\n    } else {\n      tabs = [\n        {\n          label: `${assessment!.category} Briefing`,\n          iconName: IconNames.BRIEFCASE,\n          body: (\n            <TextAreaContent\n              assessment={assessment}\n              path={['longSummary']}\n              updateAssessment={this.updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorBriefing,\n          toSpawn: () => true\n        },\n        {\n          label: `Manage Question`,\n          iconName: IconNames.WRENCH,\n          body: (\n            <ManageQuestionTab\n              assessment={assessment}\n              hasUnsavedChanges={this.state.hasUnsavedChanges}\n              questionId={questionId}\n              updateAssessment={this.updateAndSaveAssessment}\n            />\n          ),\n          id: SideContentType.editorManageQuestion,\n          toSpawn: () => true\n        },\n        {\n          label: `Manage Global Deployment`,\n          iconName: IconNames.GLOBE,\n          body: (\n            <DeploymentTab\n              assessment={assessment}\n              label={'Global'}\n              handleRefreshLibrary={this.handleRefreshLibrary}\n              pathToLibrary={['globalDeployment']}\n              updateAssessment={this.updateEditAssessmentState}\n              isOptionalDeployment={false}\n            />\n          ),\n          id: SideContentType.editorGlobalDeployment,\n          toSpawn: () => true\n        },\n        {\n          label: `Manage Global Grader Deployment`,\n          iconName: IconNames.CONFIRM,\n          body: (\n            <DeploymentTab\n              assessment={assessment}\n              label={'Global Grader'}\n              handleRefreshLibrary={this.handleRefreshLibrary}\n              pathToLibrary={['graderDeployment']}\n              updateAssessment={this.updateEditAssessmentState}\n              isOptionalDeployment={true}\n            />\n          ),\n          id: SideContentType.editorGlobalGraderDeployment,\n          toSpawn: () => true\n        }\n      ];\n    }\n\n    return { handleActiveTabChange: this.handleActiveTabChange, tabs };\n  };\n\n  /** Pre-condition: IAssessment has been loaded */\n  private controlBarProps: (q: number) => ControlBarProps = (questionId: number) => {\n    const listingPath = '/mission-control';\n    const assessmentWorkspacePath = listingPath + `/${this.state.assessment!.id.toString()}`;\n    const questionProgress: [number, number] = [\n      questionId + 1,\n      this.state.assessment!.questions.length\n    ];\n\n    const onClickPrevious = () =>\n      history.push(assessmentWorkspacePath + `/${(questionId - 1).toString()}`);\n    const onClickNext = () =>\n      history.push(assessmentWorkspacePath + `/${(questionId + 1).toString()}`);\n    const onClickReturn = () => history.push(listingPath);\n\n    const onClickResetTemplate = () => {\n      this.setState((currentState: State) => {\n        return {\n          ...currentState,\n          showResetTemplateOverlay: currentState.hasUnsavedChanges\n        };\n      });\n    };\n\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={this.props.handleReplOutputClear}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={this.props.handleReplEval}\n        isRunning={this.props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={onClickNext}\n        onClickReturn={onClickReturn}\n        questionProgress={questionProgress}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={questionProgress}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton questionProgress={questionProgress} key=\"question_view\" />\n    );\n\n    const resetButton = (\n      <ControlBarResetButton onClick={onClickResetTemplate} key=\"reset_template\" />\n    );\n\n    const runButton = (\n      <ControlBarRunButton handleEditorEval={this.props.handleEditorEval} key=\"run\" />\n    );\n\n    const saveButton = (\n      <ControlButtonSaveButton\n        hasUnsavedChanges={this.state.hasUnsavedChanges}\n        onClickSave={this.handleSave}\n        key=\"save\"\n      />\n    );\n\n    const toggleEditModeButton = (\n      <ControlBarToggleEditModeButton\n        editingMode={this.state.editingMode}\n        toggleEditMode={this.toggleEditingMode}\n        key=\"toggle_edit_mode\"\n      />\n    );\n\n    return {\n      editorButtons: [runButton, saveButton, resetButton],\n      flowButtons: [previousButton, questionView, nextButton],\n      replButtons: [evalButton, clearButton, toggleEditModeButton]\n    };\n  };\n}\n\nfunction uniq(a: string[]) {\n  const seen = {};\n  return a.filter(item => (seen.hasOwnProperty(item) ? false : (seen[item] = true)));\n}\n\nexport default EditingWorkspace;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../application/actions/InterpreterActions';\nimport { submitAnswer } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport { Library } from '../assessment/AssessmentTypes';\nimport { Position } from '../editor/EditorTypes';\nimport {\n  beginClearContext,\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeEditorHeight,\n  changeEditorWidth,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  resetWorkspace,\n  setEditorBreakpoint,\n  updateCurrentAssessmentId,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateReplValue,\n  updateWorkspace\n} from '../workspace/WorkspaceActions';\nimport { WorkspaceLocation, WorkspaceState } from '../workspace/WorkspaceTypes';\nimport EditingWorkspace, { DispatchProps, OwnProps, StateProps } from './EditingWorkspace';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  return {\n    editorValue: state.workspaces.assessment.editorValue,\n    editorHeight: state.workspaces.assessment.editorHeight,\n    editorWidth: state.workspaces.assessment.editorWidth,\n    breakpoints: state.workspaces.assessment.breakpoints,\n    highlightedLines: state.workspaces.assessment.highlightedLines,\n    hasUnsavedChanges: state.workspaces.assessment.hasUnsavedChanges,\n    isRunning: state.workspaces.assessment.isRunning,\n    isDebugging: state.workspaces.assessment.isDebugging,\n    enableDebugging: state.workspaces.assessment.enableDebugging,\n    newCursorPosition: state.workspaces.assessment.newCursorPosition,\n    output: state.workspaces.assessment.output,\n    replValue: state.workspaces.assessment.replValue,\n    sideContentHeight: state.workspaces.assessment.sideContentHeight,\n    storedAssessmentId: state.workspaces.assessment.currentAssessment,\n    storedQuestionId: state.workspaces.assessment.currentQuestion\n  };\n};\n\nconst workspaceLocation: WorkspaceLocation = 'assessment';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleBrowseHistoryDown: () => browseReplHistoryDown(workspaceLocation),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(workspaceLocation),\n      handleChapterSelect: (chapter: any, changeEvent: any) =>\n        chapterSelect(chapter, 'default', workspaceLocation),\n      handleClearContext: (library: Library) => beginClearContext(library, workspaceLocation),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(workspaceLocation, cursorPosition),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorHeightChange: (height: number) => changeEditorHeight(height, workspaceLocation),\n      handleEditorWidthChange: (widthChange: number) =>\n        changeEditorWidth(widthChange.toString(), workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleInterruptEval: () => beginInterruptExecution(workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, workspaceLocation),\n      handleResetWorkspace: (options: Partial<WorkspaceState>) =>\n        resetWorkspace(workspaceLocation, options),\n      handleUpdateWorkspace: (options: Partial<WorkspaceState>) =>\n        updateWorkspace(workspaceLocation, options),\n      handleSave: submitAnswer,\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, workspaceLocation),\n      handleTestcaseEval: (testcaseId: number) => evalTestcase(workspaceLocation, testcaseId),\n      handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, hasUnsavedChanges),\n      handleUpdateCurrentAssessmentId: updateCurrentAssessmentId,\n      handleDebuggerPause: () => beginDebuggerPause(workspaceLocation),\n      handleDebuggerResume: () => debuggerResume(workspaceLocation),\n      handleDebuggerReset: () => debuggerReset(workspaceLocation),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback)\n    },\n    dispatch\n  );\n\nconst EditingWorkspaceContainer = connect(mapStateToProps, mapDispatchToProps)(EditingWorkspace);\n\nexport default EditingWorkspaceContainer;\n","import { FileInput } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport { parseString } from 'xml2js';\n\nimport {\n  Assessment,\n  AssessmentOverview,\n  assessmentTemplate,\n  overviewTemplate\n} from '../assessment/AssessmentTypes';\nimport controlButton from '../ControlButton';\nimport {\n  makeEntireAssessment,\n  retrieveLocalAssessment,\n  storeLocalAssessment,\n  storeLocalAssessmentOverview\n} from '../XMLParser/XMLParserHelper';\n\ntype MissionCreatorProps = DispatchProps & OwnProps;\n\nexport type DispatchProps = {\n  newAssessment: (assessment: Assessment) => void;\n};\n\ntype OwnProps = {\n  updateEditingOverview: (overview: AssessmentOverview) => void;\n};\n\ntype State = {\n  fileInputText: string;\n};\n\nclass MissionCreator extends React.Component<MissionCreatorProps, State> {\n  private fileReader?: FileReader = undefined;\n  public constructor(props: any) {\n    super(props);\n    this.handleFileRead = this.handleFileRead.bind(this);\n    this.handleChangeFile = this.handleChangeFile.bind(this);\n    this.makeMission = this.makeMission.bind(this);\n    this.state = {\n      fileInputText: 'Import XML'\n    };\n  }\n\n  public componentDidMount() {\n    const assessment = retrieveLocalAssessment();\n    if (assessment) {\n      this.props.newAssessment(assessment);\n    }\n  }\n\n  public render() {\n    return (\n      <div>\n        <div>Please ensure that the xml uploaded is trustable.</div>\n        <div>\n          <FileInput\n            text={this.state.fileInputText}\n            inputProps={{ accept: '.xml' }}\n            onChange={this.handleChangeFile}\n          />\n        </div>\n        <div>{controlButton('Make New Mission', IconNames.NEW_OBJECT, this.makeMission)}</div>\n      </div>\n    );\n  }\n\n  private handleFileRead = (file: any) => (e: any) => {\n    if (!this.fileReader) {\n      return;\n    }\n    const content = this.fileReader.result;\n    if (content) {\n      parseString(content, (err: any, result: any) => {\n        // tslint:disable-next-line:no-console\n        console.dir(file);\n        try {\n          const entireAssessment: [AssessmentOverview, Assessment] = makeEntireAssessment(result);\n          entireAssessment[0].fileName = file.name.slice(0, -4);\n          storeLocalAssessmentOverview(entireAssessment[0]);\n          this.props.updateEditingOverview(entireAssessment[0]);\n\n          storeLocalAssessment(entireAssessment[1]);\n          this.props.newAssessment(entireAssessment[1]);\n          this.setState({\n            fileInputText: 'Success!'\n          });\n        } catch (err) {\n          // tslint:disable-next-line:no-console\n          console.log(err);\n          this.setState({\n            fileInputText: 'Invalid XML!'\n          });\n        }\n      });\n    }\n  };\n\n  private handleChangeFile = (e: any) => {\n    const files = e.target.files;\n    if (e.target.files) {\n      this.fileReader = new FileReader();\n      this.fileReader.onloadend = this.handleFileRead(files[0]);\n      this.fileReader.readAsText(files[0]);\n    }\n  };\n\n  private makeMission = () => {\n    storeLocalAssessmentOverview(overviewTemplate());\n    this.props.updateEditingOverview(overviewTemplate());\n    storeLocalAssessment(assessmentTemplate());\n    this.props.newAssessment(assessmentTemplate());\n  };\n}\n\nexport default MissionCreator;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { updateAssessment } from '../application/actions/SessionActions';\nimport MissionCreator, { DispatchProps } from './MissionCreator';\n\nconst mapStateToProps: MapStateToProps<{}, any, {}> = (state, ownProps) => ownProps;\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      newAssessment: updateAssessment\n    },\n    dispatch\n  );\n\nconst MissionCreatorContainer = connect(mapStateToProps, mapDispatchToProps)(MissionCreator);\n\nexport default MissionCreatorContainer;\n","import * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\n\nimport {\n  AssessmentOverview,\n  AssessmentStatuses,\n  AssessmentWorkspaceParams\n} from '../../commons/assessment/AssessmentTypes';\nimport ContentDisplay from '../../commons/ContentDisplay';\nimport { EditingOverviewCard } from '../../commons/editingOverviewCard/EditingOverviewCard';\nimport { OwnProps as EditingWorkspaceOwnProps } from '../../commons/editingWorkspace/EditingWorkspace';\nimport EditingWorkspaceContainer from '../../commons/editingWorkspace/EditingWorkspaceContainer';\nimport MissionCreator from '../../commons/missionCreator/MissionCreatorContainer';\nimport Constants from '../../commons/utils/Constants';\nimport { stringParamToInt } from '../../commons/utils/ParamParseHelper';\nimport { retrieveLocalAssessmentOverview } from '../../commons/XMLParser/XMLParserHelper';\n\nexport type MissionControlProps = DispatchProps &\n  StateProps &\n  RouteComponentProps<AssessmentWorkspaceParams>;\n\nexport type DispatchProps = {\n  handleAssessmentOverviewFetch: () => void;\n  handleSubmitAssessment: (id: number) => void;\n};\n\nexport type StateProps = {\n  isStudent: boolean;\n};\n\ntype State = {\n  editOverview: string;\n  editingOverview: AssessmentOverview | null;\n};\n\nclass MissionControl extends React.Component<MissionControlProps, State> {\n  public constructor(props: MissionControlProps) {\n    super(props);\n    this.state = {\n      editOverview: '',\n      editingOverview: retrieveLocalAssessmentOverview()\n    };\n  }\n\n  public render() {\n    const assessmentId: number | null = stringParamToInt(this.props.match.params.assessmentId);\n    const questionId: number =\n      stringParamToInt(this.props.match.params.questionId) || Constants.defaultQuestionId;\n\n    // If mission for testing is to render, create workspace\n    if (assessmentId === -1) {\n      if (this.state.editingOverview) {\n        const overview = this.state.editingOverview;\n        const assessmentProps: EditingWorkspaceOwnProps = {\n          assessmentId,\n          questionId,\n          assessmentOverview: overview,\n          updateAssessmentOverview: this.updateEditingOverview,\n          notAttempted: overview.status === AssessmentStatuses.not_attempted,\n          closeDate: overview.closeAt\n        };\n        return (\n          <div className=\"Academy\">\n            <EditingWorkspaceContainer {...assessmentProps} />\n          </div>\n        );\n      }\n    }\n\n    /** Mission editing card */\n    const missionEditingCard = this.state.editingOverview ? (\n      <EditingOverviewCard\n        overview={this.state.editingOverview}\n        updateEditingOverview={this.updateEditingOverview}\n        listingPath=\"/mission-control\"\n      />\n    ) : null;\n\n    const display = (\n      <>\n        <MissionCreator updateEditingOverview={this.updateEditingOverview} />\n        {missionEditingCard}\n      </>\n    );\n\n    // Finally, render the ContentDisplay.\n    return (\n      <div className=\"Assessment Academy\">\n        <ContentDisplay\n          display={display}\n          loadContentDispatch={this.props.handleAssessmentOverviewFetch}\n        />\n      </div>\n    );\n  }\n\n  private updateEditingOverview = (overview: AssessmentOverview) => {\n    this.setState({\n      editingOverview: overview\n    });\n  };\n}\n\nexport default MissionControl;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  fetchAssessmentOverviews,\n  submitAssessment\n} from '../../commons/application/actions/SessionActions';\nimport { OverallState, Role } from '../../commons/application/ApplicationTypes';\nimport MissionControl, { DispatchProps, StateProps } from './MissionControl';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = (state, props) => {\n  const stateProps: StateProps = {\n    isStudent: state.session.role ? state.session.role === Role.Student : true\n  };\n  return stateProps;\n};\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAssessmentOverviewFetch: fetchAssessmentOverviews,\n      handleSubmitAssessment: submitAssessment\n    },\n    dispatch\n  );\n\nconst MissionControlContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(MissionControl)\n);\n\nexport default MissionControlContainer;\n","import { Classes, NonIdealState } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nconst NotFound: React.SFC<{}> = () => (\n  <div className={classNames('NotFound', Classes.DARK)}>\n    <NonIdealState\n      icon={IconNames.ERROR}\n      title=\"404 Not Found\"\n      description=\"The requested resource could not be found\"\n    />\n  </div>\n);\n\nexport default NotFound;\n","import { NumericInput, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\ntype ControlBarExecutionTimeProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChangeExecTime?: (execTime: number) => void;\n};\n\ntype StateProps = {\n  execTime?: number;\n  key: string;\n};\n\nexport function ControlBarExecutionTime(props: ControlBarExecutionTimeProps) {\n  return (\n    <Tooltip content=\"Execution Time\">\n      <NumericInput\n        leftIcon={IconNames.TIME}\n        style={{ width: 80 }}\n        min={1000}\n        value={props.execTime}\n        onValueChange={props.handleChangeExecTime}\n      />\n    </Tooltip>\n  );\n}\n","import { ButtonGroup, Classes, Intent, Popover, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { PersistenceFile, PersistenceState } from '../../features/persistence/PersistenceTypes';\nimport controlButton from '../ControlButton';\n\nexport type ControlBarPersistenceButtonsProps = {\n  loggedInAs?: string;\n  currentFile?: PersistenceFile;\n  isDirty?: boolean;\n  onClickOpen?: () => any;\n  onClickSave?: () => any;\n  onClickSaveAs?: () => any;\n  onClickLogOut?: () => any;\n  onPopoverOpening?: () => any;\n};\n\nconst stateToIntent: { [state in PersistenceState]: Intent } = {\n  INACTIVE: Intent.NONE,\n  SAVED: Intent.PRIMARY,\n  DIRTY: Intent.WARNING\n};\n\nexport const ControlBarPersistenceButtons: React.FC<ControlBarPersistenceButtonsProps> = props => {\n  const state: PersistenceState = props.currentFile\n    ? props.isDirty\n      ? 'DIRTY'\n      : 'SAVED'\n    : 'INACTIVE';\n  const mainButton = controlButton(\n    (props.currentFile && props.currentFile.name) || 'Google Drive',\n    IconNames.CLOUD,\n    null,\n    {\n      intent: stateToIntent[state]\n    }\n  );\n  const openButton = controlButton('Open', IconNames.DOCUMENT_OPEN, props.onClickOpen);\n  const saveButton = controlButton(\n    'Save',\n    IconNames.FLOPPY_DISK,\n    props.onClickSave,\n    undefined,\n    // disable if logged_in only (i.e. not linked to a file)\n    state === 'INACTIVE'\n  );\n  const saveAsButton = controlButton('Save as', IconNames.SEND_TO, props.onClickSaveAs);\n  const logoutButton = props.loggedInAs && (\n    <Tooltip content={`Logged in as ${props.loggedInAs}`}>\n      {controlButton('Log out', IconNames.LOG_OUT, props.onClickLogOut)}\n    </Tooltip>\n  );\n\n  return (\n    <Popover\n      autoFocus={false}\n      content={\n        <div>\n          <ButtonGroup large={true}>\n            {openButton}\n            {saveButton}\n            {saveAsButton}\n            {logoutButton}\n          </ButtonGroup>\n        </div>\n      }\n      onOpening={props.onPopoverOpening}\n      popoverClassName={Classes.POPOVER_DISMISS}\n    >\n      {mainButton}\n    </Popover>\n  );\n};\n","import { Classes, Colors, Menu, Popover } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport * as CopyToClipboard from 'react-copy-to-clipboard';\n\nimport { checkSessionIdExists, createNewSession } from '../collabEditing/CollabEditingHelper';\nimport controlButton from '../ControlButton';\n\ntype ControlBarSessionButtonsProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleInitInvite?: (value: string) => void;\n  handleInvalidEditorSessionId?: () => void;\n  handleSetEditorSessionId?: (editorSessionId: string) => void;\n};\n\ntype StateProps = {\n  editorSessionId?: string;\n  editorValue?: string | null;\n  websocketStatus?: number;\n  key: string;\n};\n\ntype State = {\n  joinElemValue: string;\n};\n\nexport class ControlBarSessionButtons extends React.PureComponent<\n  ControlBarSessionButtonsProps,\n  State\n> {\n  private inviteInputElem: React.RefObject<HTMLInputElement>;\n\n  constructor(props: ControlBarSessionButtonsProps) {\n    super(props);\n    this.state = { joinElemValue: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.inviteInputElem = React.createRef();\n    this.selectInviteInputText = this.selectInviteInputText.bind(this);\n  }\n\n  public render() {\n    const handleStartInvite = () => {\n      if (this.props.editorSessionId === '') {\n        const onSessionCreated = (sessionId: string) => {\n          this.props.handleSetEditorSessionId!(sessionId);\n          const code = this.props.editorValue || '// Collaborative Editing Mode!';\n          this.props.handleInitInvite!(code);\n        };\n        createNewSession(onSessionCreated);\n      }\n    };\n\n    const inviteButton = (\n      <Popover popoverClassName=\"Popover-share\" inheritDarkTheme={false}>\n        {controlButton('Invite', IconNames.GRAPH, handleStartInvite)}\n        <>\n          <input value={this.props.editorSessionId} readOnly={true} ref={this.inviteInputElem} />\n          <CopyToClipboard text={'' + this.props.editorSessionId}>\n            {controlButton('', IconNames.DUPLICATE, this.selectInviteInputText)}\n          </CopyToClipboard>\n        </>\n      </Popover>\n    );\n\n    const handleStartJoining = (event: React.FormEvent<HTMLFormElement>) => {\n      const onSessionIdExists = () =>\n        this.props.handleSetEditorSessionId!(this.state!.joinElemValue);\n\n      const onSessionIdNotExist = () => {\n        this.props.handleInvalidEditorSessionId!();\n        this.props.handleSetEditorSessionId!('');\n      };\n\n      const onServerUnreachable = () => this.props.handleSetEditorSessionId!('');\n\n      checkSessionIdExists(\n        this.state.joinElemValue,\n        onSessionIdExists,\n        onSessionIdNotExist,\n        onServerUnreachable\n      );\n      event.preventDefault();\n    };\n\n    const joinButton = (\n      <Popover popoverClassName=\"Popover-share\" inheritDarkTheme={false}>\n        {controlButton('Join', IconNames.LOG_IN)}\n        <>\n          <form onSubmit={handleStartJoining}>\n            <input type=\"text\" value={this.state.joinElemValue} onChange={this.handleChange} />\n            <span className={Classes.POPOVER_DISMISS}>\n              {controlButton('', IconNames.KEY_ENTER, null, { type: 'submit' })}\n            </span>\n          </form>\n        </>\n      </Popover>\n    );\n\n    const leaveButton = controlButton('Leave', IconNames.FEED, () => {\n      this.props.handleSetEditorSessionId!('');\n      this.setState({ joinElemValue: '' });\n    });\n\n    return (\n      <Popover\n        content={\n          <Menu large={true}>\n            {inviteButton}\n            {this.props.editorSessionId === '' ? joinButton : leaveButton}\n          </Menu>\n        }\n      >\n        {controlButton('Session', IconNames.SOCIAL_MEDIA, undefined, {\n          iconColor:\n            this.props.editorSessionId === ''\n              ? undefined\n              : this.props.websocketStatus === 0\n              ? Colors.RED3\n              : Colors.GREEN3\n        })}\n      </Popover>\n    );\n  }\n\n  private selectInviteInputText() {\n    if (this.inviteInputElem.current !== null) {\n      this.inviteInputElem.current.focus();\n      this.inviteInputElem.current.select();\n    }\n  }\n\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ joinElemValue: event.target.value });\n  }\n}\n","import { NonIdealState, Popover, Spinner, Text, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport * as CopyToClipboard from 'react-copy-to-clipboard';\n\nimport controlButton from '../ControlButton';\nimport Constants from '../utils/Constants';\n\ntype ControlBarShareButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleGenerateLz?: () => void;\n  handleShortenURL: (s: string) => void;\n  handleUpdateShortURL: (s: string) => void;\n};\n\ntype StateProps = {\n  queryString?: string;\n  shortURL?: string;\n  key: string;\n};\n\ntype State = {\n  keyword: string;\n  isLoading: boolean;\n};\n\nexport class ControlBarShareButton extends React.PureComponent<ControlBarShareButtonProps, State> {\n  private shareInputElem: React.RefObject<HTMLInputElement>;\n\n  constructor(props: ControlBarShareButtonProps) {\n    super(props);\n    this.selectShareInputText = this.selectShareInputText.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.shareInputElem = React.createRef();\n    this.state = { keyword: '', isLoading: false };\n  }\n\n  public render() {\n    let url = '';\n    const { urlShortener } = Constants;\n    if (urlShortener) {\n      url = urlShortener.split('/').slice(0, -1).join('/') + '/';\n    }\n\n    return (\n      <Popover popoverClassName=\"Popover-share\" inheritDarkTheme={false}>\n        <Tooltip content=\"Get shareable link\">\n          {controlButton('Share', IconNames.SHARE, () => this.toggleButton())}\n        </Tooltip>\n        {this.props.queryString === undefined ? (\n          <Text>\n            Share your programs! Type something into the editor (left), then click on this button\n            again.\n          </Text>\n        ) : (\n          <>\n            {!this.props.shortURL || this.props.shortURL === 'ERROR' ? (\n              !this.state.isLoading || this.props.shortURL === 'ERROR' ? (\n                <div>\n                  {url}&nbsp;\n                  <input\n                    placeholder={'custom string (optional)'}\n                    onChange={this.handleChange}\n                    style={{ width: 175 }}\n                  />\n                  {controlButton('Get Link', IconNames.SHARE, () => {\n                    this.props.handleShortenURL(this.state.keyword);\n                    this.setState({ isLoading: true });\n                  })}\n                </div>\n              ) : (\n                <div>\n                  <NonIdealState\n                    description=\"Generating Shareable Link...\"\n                    icon={<Spinner size={Spinner.SIZE_SMALL} />}\n                  />\n                </div>\n              )\n            ) : (\n              <div key={this.props.shortURL}>\n                <input\n                  defaultValue={this.props.shortURL}\n                  readOnly={true}\n                  ref={this.shareInputElem}\n                />\n                <Tooltip content=\"Copy link to clipboard\">\n                  <CopyToClipboard text={this.props.shortURL}>\n                    {controlButton('', IconNames.DUPLICATE, this.selectShareInputText)}\n                  </CopyToClipboard>\n                </Tooltip>\n              </div>\n            )}\n          </>\n        )}\n      </Popover>\n    );\n  }\n\n  public componentDidUpdate(prevProps: ControlBarShareButtonProps) {\n    if (this.props.shortURL !== prevProps.shortURL) {\n      this.setState({ keyword: '', isLoading: false });\n    }\n  }\n\n  private toggleButton() {\n    if (this.props.handleGenerateLz) {\n      this.props.handleGenerateLz();\n    }\n\n    // reset state\n    this.props.handleUpdateShortURL('');\n    this.setState({ keyword: '', isLoading: false });\n  }\n\n  private handleChange(event: React.FormEvent<HTMLInputElement>) {\n    this.setState({ keyword: event.currentTarget.value });\n  }\n\n  private selectShareInputText() {\n    if (this.shareInputElem.current !== null) {\n      this.shareInputElem.current.focus();\n      this.shareInputElem.current.select();\n    }\n  }\n}\n","import { Button, Divider } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\ntype State = {\n  width: number;\n  height: number;\n};\n\nclass SideContentFaceapiDisplay extends React.Component<{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      width: (window as any)._WIDTH,\n      height: (window as any)._HEIGHT\n    };\n  }\n\n  public takePhotoA() {\n    (window as any).video.takePhotoA();\n  }\n\n  public takePhotoB() {\n    (window as any).video.takePhotoB();\n  }\n\n  public takePhotoC() {\n    (window as any).video.takePhotoC();\n  }\n\n  public resetPhotoA() {\n    (window as any).resetPhotoA();\n  }\n\n  public resetPhotoB() {\n    (window as any).resetPhotoB();\n  }\n\n  public resetPhotoC() {\n    (window as any).resetPhotoC();\n  }\n\n  // UI can be improved\n  public render() {\n    return (\n      <div className=\"sa-video\">\n        <div className=\"sa-video-element\">\n          <video\n            id=\"video\"\n            style={{ position: 'absolute' }}\n            autoPlay={true}\n            width={333}\n            height={250}\n          />\n\n          <canvas\n            id=\"canvas\"\n            style={{ position: 'relative', top: 0, left: 0 }}\n            width={333}\n            height={250}\n          />\n        </div>\n\n        <Divider />\n\n        <div className=\"sa-video-header\">\n          <div className=\"sa-video-header-element\">\n            <Button\n              className={'sa-live-video-button'}\n              style={{ height: 20 }}\n              icon={IconNames.CAMERA}\n              onClick={this.takePhotoA}\n              text={'Take picture'}\n            />\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <canvas id=\"canvas-capture-a\" style={{ height: 30 }} />\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <Button\n              className={'sa-still-image-button'}\n              style={{ height: 20 }}\n              icon={IconNames.RESET}\n              onClick={this.resetPhotoA}\n              text={'Reset'}\n            />\n          </div>\n        </div>\n\n        <div className=\"sa-video-header\">\n          <div className=\"sa-video-header-element\">\n            <Button\n              className={'sa-live-video-button'}\n              style={{ height: 20 }}\n              icon={IconNames.CAMERA}\n              onClick={this.takePhotoB}\n              text={'Take picture'}\n            />\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <canvas id=\"canvas-capture-b\" style={{ height: 20 }} />\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <Button\n              className={'sa-still-image-button'}\n              style={{ height: 20 }}\n              icon={IconNames.RESET}\n              onClick={this.resetPhotoB}\n              text={'Reset'}\n            />\n          </div>\n        </div>\n\n        <div className=\"sa-video-header\">\n          <div className=\"sa-video-header-element\">\n            <Button\n              className={'sa-live-video-button'}\n              style={{ height: 20 }}\n              icon={IconNames.CAMERA}\n              onClick={this.takePhotoC}\n              text={'Take picture'}\n            />\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <canvas id=\"canvas-capture-c\" style={{ height: 20 }} />\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <Button\n              className={'sa-still-image-button'}\n              style={{ height: 20 }}\n              icon={IconNames.RESET}\n              onClick={this.resetPhotoC}\n              text={'Reset'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideContentFaceapiDisplay;\n","/* eslint-disable simple-import-sort/sort */\nimport { Card, Classes, Divider, Pre, Slider } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport AceEditor from 'react-ace';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { HighlightRulesSelector, ModeSelector } from 'js-slang/dist/editors/ace/modes/source';\nimport 'js-slang/dist/editors/ace/theme/source';\nimport { IStepperPropContents } from 'js-slang/dist/stepper/stepper';\n\nimport controlButton from '../ControlButton';\n\nconst SubstDefaultText = () => {\n  return (\n    <div>\n      <div id=\"substituter-default-text\" className={Classes.RUNNING_TEXT}>\n        Welcome to the Stepper!\n        <br />\n        <br />\n        On this tab, the REPL will be hidden from view, so do check that your code has no errors\n        before running the stepper. You may use this tool by writing your program on the left, then\n        dragging the slider above to see its evaluation.\n        <br />\n        <br />\n        On even-numbered steps, the part of the program that will be evaluated next is highlighted\n        in yellow. On odd-numbered steps, the result of the evaluation is highlighted in green.\n        <br />\n        <br />\n        <Divider />\n        Some useful keyboard shortcuts:\n        <br />\n        <br />\n        {controlButton('(Comma)', IconNames.LESS_THAN)}: Move to the first step\n        <br />\n        {controlButton('(Period)', IconNames.GREATER_THAN)}: Move to the last step\n        <br />\n        <br />\n        Note that the first and last step shortcuts are only active when the browser focus is on\n        this panel (click on the slider or the text!).\n        <br />\n        <br />\n        When the focus is on the slider, the arrow keys may also be used to move a single step.\n      </div>\n    </div>\n  );\n};\n\nconst substKeyMap = {\n  FIRST_STEP: ',',\n  LAST_STEP: '.'\n};\n\nconst SubstCodeDisplay = (props: { content: string }) => {\n  return (\n    <Card>\n      <Pre className=\"resultOutput\">{props.content}</Pre>\n    </Card>\n  );\n};\n\ntype SubstVisualizerProps = StateProps;\n\ntype StateProps = {\n  content: IStepperPropContents[];\n};\n\ntype State = {\n  value: number;\n};\n\nclass SideContentSubstVisualizer extends React.Component<SubstVisualizerProps, State> {\n  constructor(props: SubstVisualizerProps) {\n    super(props);\n    this.state = {\n      value: 1\n    };\n\n    // set source mode as 2\n    HighlightRulesSelector(2);\n    ModeSelector(2);\n  }\n\n  public render() {\n    const lastStepValue = this.props.content.length;\n    // 'content' property is initialised to '[]' by Playground component\n    const hasRunCode = lastStepValue !== 0;\n    const substHandlers = hasRunCode\n      ? {\n          FIRST_STEP: this.stepFirst,\n          LAST_STEP: this.stepLast(lastStepValue)\n        }\n      : {\n          FIRST_STEP: () => {},\n          LAST_STEP: () => {}\n        };\n\n    return (\n      <HotKeys keyMap={substKeyMap} handlers={substHandlers}>\n        <div>\n          <div className=\"sa-substituter\">\n            <Slider\n              disabled={!hasRunCode}\n              min={1}\n              max={this.props.content.length}\n              onChange={this.sliderShift}\n              value={this.state.value <= lastStepValue ? this.state.value : 1}\n            />\n            {hasRunCode ? (\n              <AceEditor\n                className=\"react-ace\"\n                mode=\"source2defaultNONE\"\n                theme=\"source\"\n                fontSize={17}\n                highlightActiveLine={false}\n                wrapEnabled={true}\n                height=\"unset\"\n                width=\"100%\"\n                showGutter={false}\n                readOnly={true}\n                maxLines={Infinity}\n                value={this.getText(this.state.value)}\n                markers={this.getDiffMarkers(this.state.value)}\n                setOptions={{\n                  fontFamily: \"'Inconsolata', 'Consolas', monospace\"\n                }}\n              />\n            ) : (\n              <SubstDefaultText />\n            )}\n            {hasRunCode ? (\n              <SubstCodeDisplay\n                content={\n                  this.state.value <= lastStepValue\n                    ? this.props.content[this.state.value - 1].explanation\n                    : this.props.content[0].explanation\n                }\n              />\n            ) : null}\n          </div>\n        </div>\n      </HotKeys>\n    );\n  }\n\n  private getDiffMarkers = (value: number) => {\n    const lastStepValue = this.props.content.length;\n    const contIndex = value <= lastStepValue ? value - 1 : 0;\n    const pathified = this.props.content[contIndex];\n    const redexed = pathified.code;\n    const redex = pathified.redex.split('\\n');\n\n    const diffMarkers = [] as any[];\n    if (redex.length > 0) {\n      const mainprog = redexed.split('$');\n      let text = mainprog[0];\n      let front = text.split('\\n');\n\n      let startR = front.length - 1;\n      let startC = front[startR].length;\n\n      for (let i = 0; i < mainprog.length - 1; i++) {\n        const endR = startR + redex.length - 1;\n        const endC =\n          redex.length === 1\n            ? startC + redex[redex.length - 1].length\n            : redex[redex.length - 1].length;\n\n        diffMarkers.push({\n          startRow: startR,\n          startCol: startC,\n          endRow: endR,\n          endCol: endC,\n          className: value % 2 === 0 ? 'beforeMarker' : 'afterMarker',\n          type: 'background'\n        });\n\n        text = text + redex + mainprog[i + 1];\n        front = text.split('\\n');\n        startR = front.length - 1;\n        startC = front[startR].length;\n      }\n    }\n    return diffMarkers;\n  };\n\n  private getText(value: number) {\n    const lastStepValue = this.props.content.length;\n    const contIndex = value <= lastStepValue ? value - 1 : 0;\n    const pathified = this.props.content[contIndex];\n    const redexed = pathified.code;\n    const redex = pathified.redex;\n    const split = pathified.code.split('$');\n    if (split.length > 1) {\n      let text = split[0];\n      for (let i = 1; i < split.length; i++) {\n        text = text + redex + split[i];\n      }\n      return text;\n    } else {\n      return redexed;\n    }\n  }\n\n  private sliderShift = (newValue: number) => {\n    this.setState((state: State) => {\n      return { value: newValue };\n    });\n  };\n\n  private stepFirst = () => {\n    // Move to the first step\n    this.sliderShift(1);\n  };\n\n  private stepLast = (lastStepValue: number) => () => {\n    // Move to the last step\n    this.sliderShift(lastStepValue);\n  };\n}\n\nexport default SideContentSubstVisualizer;\n","import { Button, ButtonGroup, Divider, NumericInput, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nexport type SideContentVideoDisplayMode = 'video' | 'still';\n\ntype State = {\n  width: number;\n  height: number;\n  mode: SideContentVideoDisplayMode;\n};\n\nclass SideContentVideoDisplay extends React.Component<{}, State> {\n  private $video: HTMLElement | null = null;\n  private $canvas: HTMLElement | null = null;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      width: (window as any)._WIDTH,\n      height: (window as any)._HEIGHT,\n      mode: 'video' as SideContentVideoDisplayMode\n    };\n    this.handleWidthChange = this.handleWidthChange.bind(this);\n    this.handleHeightChange = this.handleHeightChange.bind(this);\n  }\n  public componentDidMount() {\n    if (this.$video && this.$canvas) {\n      (window as any).VD.init(this.$video, this.$canvas);\n    }\n  }\n  public componentWillUnmount() {\n    (window as any).VD.deinit();\n  }\n  public handleStartVideo() {\n    (window as any).VD.handleStartVideo();\n  }\n  public handleSnapPicture() {\n    (window as any).VD.handleSnapPicture();\n  }\n  public handleCloseVideo() {\n    (window as any).VD.handleCloseVideo();\n  }\n  public handleWidthChange(n: number) {\n    if (n > 0) {\n      this.setState({\n        width: n,\n        height: this.state.height\n      });\n      this.handleUpdateDimensions(n, this.state.height);\n    }\n  }\n  public handleHeightChange(m: number) {\n    if (m > 0) {\n      this.setState({\n        width: this.state.width,\n        height: m\n      });\n      this.handleUpdateDimensions(this.state.width, m);\n    }\n  }\n  public handleUpdateDimensions(n: number, m: number) {\n    (window as any).VD.handleUpdateDimensions(n, m);\n  }\n  // UI can be improved\n  public render() {\n    const hideVideo = {\n      display: 'none'\n    };\n\n    const videoIsActive = this.state.mode === ('video' as SideContentVideoDisplayMode);\n    const stillIsActive = this.state.mode === ('still' as SideContentVideoDisplayMode);\n\n    return (\n      <div className=\"sa-video\">\n        <div className=\"sa-video-header\">\n          <div className=\"sa-video-header-element\">\n            <ButtonGroup>\n              <Button\n                className={'sa-live-video-button'}\n                icon={IconNames.VIDEO}\n                active={videoIsActive}\n                onClick={this.swapModes(this.state.mode)}\n                text={'Live Video'}\n              />\n              <Button\n                className={'sa-still-image-button'}\n                icon={IconNames.CAMERA}\n                active={stillIsActive}\n                onClick={stillIsActive ? this.handleSnapPicture : this.swapModes(this.state.mode)}\n                text={'Still Image'}\n              />\n            </ButtonGroup>\n          </div>\n          <Divider />\n          <div className=\"sa-video-header-element\">\n            <div className=\"sa-video-header-numeric-input\">\n              <Tooltip content=\"Change width\">\n                <NumericInput\n                  leftIcon={IconNames.HORIZONTAL_DISTRIBUTION}\n                  style={{ width: 70 }}\n                  value={this.state.width}\n                  onValueChange={this.handleWidthChange}\n                  minorStepSize={1}\n                  stepSize={10}\n                  majorStepSize={100}\n                />\n              </Tooltip>\n            </div>\n            <div className=\"sa-video-header-numeric-input\">\n              <Tooltip content=\"Change height\">\n                <NumericInput\n                  leftIcon={IconNames.VERTICAL_DISTRIBUTION}\n                  style={{ width: 70 }}\n                  value={this.state.height}\n                  onValueChange={this.handleHeightChange}\n                  minorStepSize={1}\n                  stepSize={10}\n                  majorStepSize={100}\n                />\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n        <div className=\"sa-video-element\">\n          <video\n            ref={r => (this.$video = r)}\n            style={hideVideo}\n            autoPlay={true}\n            width={(window as any)._WIDTH}\n            height={(window as any)._HEIGHT}\n          />\n          <canvas\n            ref={r => (this.$canvas = r)}\n            width={(window as any)._WIDTH}\n            height={(window as any)._HEIGHT}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private swapModes = (mode: SideContentVideoDisplayMode) => () => {\n    switch (mode) {\n      case 'video':\n        this.setState((state: State) => {\n          return { ...state, mode: 'still' as SideContentVideoDisplayMode };\n        }, this.handleSnapPicture);\n        break;\n\n      case 'still':\n        this.setState((state: State) => {\n          return { ...state, mode: 'video' as SideContentVideoDisplayMode };\n        }, this.handleStartVideo);\n        break;\n    }\n  };\n}\n\nexport default SideContentVideoDisplay;\n","import { Links } from './Constants';\n\nconst CHAP = '\\xa7';\n\nconst MAIN_INTRODUCTION = `\nWelcome to the Source Academy playground!\n\nThe language [_Source_](${Links.sourceDocs}) is the official language of the textbook [_Structure and\nInterpretation of Computer Programs, JavaScript Adaptation_](${Links.textbook}). `;\n\nconst HOTKEYS_INTRODUCTION = `\n\nIn the editor on the left, you can use the [_Ace keyboard shortcuts_](${Links.aceHotkeys}) \nand also the [_Source Academy keyboard shortcuts_](${Links.sourceHotkeys}).\n\n`;\n\nconst generateSourceDocsLink = (sourceType: string) => {\n  switch (sourceType) {\n    case '1 default':\n      return `You have chosen the sublanguage [_Source ${CHAP}1_](${Links.source_1}).`;\n    case '1 wasm':\n      return `You have chosen the sublanguage [_Source ${CHAP}1 WebAssembly_](${Links.source_1_Wasm}).`;\n    case '1 lazy':\n      return `You have chosen the sublanguage [_Source ${CHAP}1 Lazy_](${Links.source_1_Lazy}).`;\n    case '2 default':\n      return `You have chosen the sublanguage [_Source ${CHAP}2_](${Links.source_2}).`;\n    case '2 lazy':\n      return `You have chosen the sublanguage [_Source ${CHAP}2 Lazy_](${Links.source_2_Lazy}).`;\n    case '3 default':\n      return `You have chosen the sublanguage [_Source ${CHAP}3_](${Links.source_3}).`;\n    case '3 non-det':\n      return `You have chosen the sublanguage [_Source ${CHAP}3 Non-Det_](${Links.source_3_Nondet}).`;\n    case '3 concurrent':\n      return `You have chosen the sublanguage [_Source ${CHAP}3 Concurrent_](${Links.source_3_Concurrent}).`;\n    case '4 default':\n      return `You have chosen the sublanguage [_Source ${CHAP}4_](${Links.source_4}).`;\n    case '4 gpu':\n      return `You have chosen the sublanguage [_Source ${CHAP}4 GPU_](${Links.source_4_Gpu}).`;\n    default:\n      return 'You have chosen an invalid sublanguage. Please pick a sublanguage from the dropdown instead.';\n  }\n};\n\nconst generateIntroductionText = (sourceType: string) => {\n  return MAIN_INTRODUCTION + generateSourceDocsLink(sourceType) + HOTKEYS_INTRODUCTION;\n};\n\nexport const generateSourceIntroduction = (sourceChapter: number, sourceVariant: string) => {\n  return generateIntroductionText(`${sourceChapter} ${sourceVariant}`);\n};\n","import { Classes } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport { isStepperOutput } from 'js-slang/dist/stepper/stepper';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\nimport { HotKeys } from 'react-hotkeys';\nimport { RouteComponentProps } from 'react-router';\n\nimport { InterpreterOutput } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { ControlBarAutorunButtons } from '../../commons/controlBar/ControlBarAutorunButtons';\nimport { ControlBarChapterSelect } from '../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarExecutionTime } from '../../commons/controlBar/ControlBarExecutionTime';\nimport { ControlBarExternalLibrarySelect } from '../../commons/controlBar/ControlBarExternalLibrarySelect';\nimport { ControlBarPersistenceButtons } from '../../commons/controlBar/ControlBarPersistenceButtons';\nimport { ControlBarSessionButtons } from '../../commons/controlBar/ControlBarSessionButton';\nimport { ControlBarShareButton } from '../../commons/controlBar/ControlBarShareButton';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport Markdown from '../../commons/Markdown';\nimport SideContentEnvVisualizer from '../../commons/sideContent/SideContentEnvVisualizer';\nimport SideContentFaceapiDisplay from '../../commons/sideContent/SideContentFaceapiDisplay';\nimport SideContentInspector from '../../commons/sideContent/SideContentInspector';\nimport SideContentListVisualizer from '../../commons/sideContent/SideContentListVisualizer';\nimport SideContentSubstVisualizer from '../../commons/sideContent/SideContentSubstVisualizer';\nimport { SideContentTab, SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport SideContentVideoDisplay from '../../commons/sideContent/SideContentVideoDisplay';\nimport { generateSourceIntroduction } from '../../commons/utils/IntroductionHelper';\nimport Workspace, { WorkspaceProps } from '../../commons/workspace/Workspace';\nimport { PersistenceFile } from '../../features/persistence/PersistenceTypes';\n\nexport type PlaygroundProps = DispatchProps & StateProps & RouteComponentProps<{}>;\n\nexport type DispatchProps = {\n  handleActiveTabChange: (activeTab: SideContentType) => void;\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChangeExecTime: (execTime: number) => void;\n  handleChapterSelect: (chapter: number, variant: Variant) => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleFinishInvite: () => void;\n  handleGenerateLz: () => void;\n  handleShortenURL: (s: string) => void;\n  handleUpdateShortURL: (s: string) => void;\n  handleInterruptEval: () => void;\n  handleInvalidEditorSessionId: () => void;\n  handleExternalSelect: (externalLibraryName: ExternalLibraryName) => void;\n  handleInitInvite: (value: string) => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleSendReplInputToOutput: (code: string) => void;\n  handleSetEditorSessionId: (editorSessionId: string) => void;\n  handleSetWebsocketStatus: (websocketStatus: number) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleUsingSubst: (usingSubst: boolean) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleToggleEditorAutorun: () => void;\n  handleFetchChapter: () => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n  handlePersistenceOpenPicker: () => void;\n  handlePersistenceSaveFile: () => void;\n  handlePersistenceUpdateFile: (file: PersistenceFile) => void;\n  handlePersistenceInitialise: () => void;\n  handlePersistenceLogOut: () => void;\n};\n\nexport type StateProps = {\n  editorSessionId: string;\n  editorValue: string;\n  editorHeight?: number;\n  editorWidth: string;\n  execTime: number;\n  breakpoints: string[];\n  highlightedLines: number[][];\n  isEditorAutorun: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  newCursorPosition?: Position;\n  output: InterpreterOutput[];\n  queryString?: string;\n  shortURL?: string;\n  replValue: string;\n  sideContentHeight?: number;\n  sharedbAceInitValue: string;\n  sharedbAceIsInviting: boolean;\n  sourceChapter: number;\n  sourceVariant: Variant;\n  websocketStatus: number;\n  externalLibraryName: string;\n  usingSubst: boolean;\n  persistenceUser: string | undefined;\n  persistenceFile: PersistenceFile | undefined;\n};\n\nconst keyMap = { goGreen: 'h u l k' };\n\nconst Playground: React.FC<PlaygroundProps> = props => {\n  const [lastEdit, setLastEdit] = React.useState(new Date());\n  const [isGreen, setIsGreen] = React.useState(false);\n  const [selectedTab, setSelectedTab] = React.useState(SideContentType.introduction);\n  const [hasBreakpoints, setHasBreakpoints] = React.useState(false);\n\n  const handlers = React.useMemo(\n    () => ({\n      goGreen: () => setIsGreen(!isGreen)\n    }),\n    [isGreen, setIsGreen]\n  );\n\n  const { handleEditorValueChange } = props;\n  const onEditorValueChange = React.useCallback(\n    val => {\n      setLastEdit(new Date());\n      handleEditorValueChange(val);\n    },\n    [handleEditorValueChange]\n  );\n\n  const { handleUsingSubst, handleReplOutputClear, sourceChapter } = props;\n  const onChangeTabs = React.useCallback(\n    (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n\n      if (sourceChapter <= 2 && newTabId === SideContentType.substVisualizer) {\n        handleUsingSubst(true);\n      }\n\n      if (prevTabId === SideContentType.substVisualizer && !hasBreakpoints) {\n        handleReplOutputClear();\n        handleUsingSubst(false);\n      }\n\n      setSelectedTab(newTabId);\n    },\n    [handleReplOutputClear, handleUsingSubst, hasBreakpoints, sourceChapter]\n  );\n\n  const processStepperOutput = (output: InterpreterOutput[]) => {\n    const editorOutput = output[0];\n    if (\n      editorOutput &&\n      editorOutput.type === 'result' &&\n      editorOutput.value instanceof Array &&\n      editorOutput.value[0] === Object(editorOutput.value[0]) &&\n      isStepperOutput(editorOutput.value[0])\n    ) {\n      return editorOutput.value;\n    } else {\n      return [];\n    }\n  };\n\n  const autorunButtons = React.useMemo(\n    () => (\n      <ControlBarAutorunButtons\n        handleDebuggerPause={props.handleDebuggerPause}\n        handleDebuggerReset={props.handleDebuggerReset}\n        handleDebuggerResume={props.handleDebuggerResume}\n        handleEditorEval={props.handleEditorEval}\n        handleInterruptEval={props.handleInterruptEval}\n        handleToggleEditorAutorun={props.handleToggleEditorAutorun}\n        isDebugging={props.isDebugging}\n        isEditorAutorun={props.isEditorAutorun}\n        isRunning={props.isRunning}\n        key=\"autorun\"\n      />\n    ),\n    [\n      props.handleDebuggerPause,\n      props.handleDebuggerReset,\n      props.handleDebuggerResume,\n      props.handleEditorEval,\n      props.handleInterruptEval,\n      props.handleToggleEditorAutorun,\n      props.isDebugging,\n      props.isEditorAutorun,\n      props.isRunning\n    ]\n  );\n\n  const { handleChapterSelect } = props;\n  const chapterSelectHandler = React.useCallback(\n    ({ chapter, variant }: { chapter: number; variant: Variant }, e: any) => {\n      if ((chapter <= 2 && hasBreakpoints) || selectedTab === SideContentType.substVisualizer) {\n        handleUsingSubst(true);\n      }\n      if (chapter > 2) {\n        handleReplOutputClear();\n        handleUsingSubst(false);\n      }\n      handleChapterSelect(chapter, variant);\n    },\n    [handleReplOutputClear, handleUsingSubst, hasBreakpoints, handleChapterSelect, selectedTab]\n  );\n\n  const chapterSelect = React.useMemo(\n    () => (\n      <ControlBarChapterSelect\n        handleChapterSelect={chapterSelectHandler}\n        sourceChapter={props.sourceChapter}\n        sourceVariant={props.sourceVariant}\n        key=\"chapter\"\n      />\n    ),\n    [chapterSelectHandler, props.sourceChapter, props.sourceVariant]\n  );\n\n  const clearButton = React.useMemo(\n    () =>\n      selectedTab === SideContentType.substVisualizer ? null : (\n        <ControlBarClearButton\n          handleReplOutputClear={props.handleReplOutputClear}\n          key=\"clear_repl\"\n        />\n      ),\n    [props.handleReplOutputClear, selectedTab]\n  );\n\n  const evalButton = React.useMemo(\n    () =>\n      selectedTab === SideContentType.substVisualizer ? null : (\n        <ControlBarEvalButton\n          handleReplEval={props.handleReplEval}\n          isRunning={props.isRunning}\n          key=\"eval_repl\"\n        />\n      ),\n    [props.handleReplEval, props.isRunning, selectedTab]\n  );\n\n  const { persistenceUser, persistenceFile, handlePersistenceUpdateFile } = props;\n  // Compute this here to avoid re-rendering the button every keystroke\n  const persistenceIsDirty =\n    persistenceFile && (!persistenceFile.lastSaved || persistenceFile.lastSaved < lastEdit);\n  const persistenceButtons = React.useMemo(() => {\n    return (\n      <ControlBarPersistenceButtons\n        currentFile={persistenceFile}\n        loggedInAs={persistenceUser}\n        isDirty={persistenceIsDirty}\n        key=\"googledrive\"\n        onClickSaveAs={props.handlePersistenceSaveFile}\n        onClickOpen={props.handlePersistenceOpenPicker}\n        onClickSave={\n          persistenceFile ? () => handlePersistenceUpdateFile(persistenceFile) : undefined\n        }\n        onClickLogOut={props.handlePersistenceLogOut}\n        onPopoverOpening={props.handlePersistenceInitialise}\n      />\n    );\n  }, [\n    persistenceUser,\n    persistenceFile,\n    persistenceIsDirty,\n    props.handlePersistenceSaveFile,\n    props.handlePersistenceOpenPicker,\n    props.handlePersistenceLogOut,\n    props.handlePersistenceInitialise,\n    handlePersistenceUpdateFile\n  ]);\n\n  const { handleChangeExecTime, execTime } = props;\n  const executionTime = React.useMemo(\n    () => (\n      <ControlBarExecutionTime\n        execTime={execTime}\n        handleChangeExecTime={(execTime: number) => handleChangeExecTime(execTime)}\n        key=\"execution_time\"\n      />\n    ),\n    [execTime, handleChangeExecTime]\n  );\n\n  const { handleExternalSelect, externalLibraryName } = props;\n  const externalLibrarySelect = React.useMemo(\n    () => (\n      <ControlBarExternalLibrarySelect\n        externalLibraryName={externalLibraryName}\n        handleExternalSelect={({ name }: { name: ExternalLibraryName }, e: any) =>\n          handleExternalSelect(name)\n        }\n        key=\"external_library\"\n      />\n    ),\n    [externalLibraryName, handleExternalSelect]\n  );\n\n  const sessionButtons = React.useMemo(\n    () => (\n      <ControlBarSessionButtons\n        editorSessionId={props.editorSessionId}\n        editorValue={props.editorValue}\n        handleInitInvite={props.handleInitInvite}\n        handleInvalidEditorSessionId={props.handleInvalidEditorSessionId}\n        handleSetEditorSessionId={props.handleSetEditorSessionId}\n        websocketStatus={props.websocketStatus}\n        key=\"session\"\n      />\n    ),\n    [\n      props.editorSessionId,\n      props.editorValue,\n      props.handleInitInvite,\n      props.handleInvalidEditorSessionId,\n      props.handleSetEditorSessionId,\n      props.websocketStatus\n    ]\n  );\n\n  const shareButton = React.useMemo(\n    () => (\n      <ControlBarShareButton\n        handleGenerateLz={props.handleGenerateLz}\n        handleShortenURL={props.handleShortenURL}\n        handleUpdateShortURL={props.handleUpdateShortURL}\n        queryString={props.queryString}\n        shortURL={props.shortURL}\n        key=\"share\"\n      />\n    ),\n    [\n      props.handleGenerateLz,\n      props.handleShortenURL,\n      props.handleUpdateShortURL,\n      props.queryString,\n      props.shortURL\n    ]\n  );\n\n  const playgroundIntroductionTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Introduction',\n      iconName: IconNames.COMPASS,\n      body: (\n        <Markdown\n          content={generateSourceIntroduction(props.sourceChapter, props.sourceVariant)}\n          openLinksInNewWindow={true}\n        />\n      ),\n      id: SideContentType.introduction,\n      toSpawn: () => true\n    }),\n    [props.sourceChapter, props.sourceVariant]\n  );\n\n  const tabs = React.useMemo(() => {\n    const tabs: SideContentTab[] = [playgroundIntroductionTab];\n\n    // Conditional logic for tab rendering\n    if (\n      props.externalLibraryName === ExternalLibraryName.PIXNFLIX ||\n      props.externalLibraryName === ExternalLibraryName.ALL\n    ) {\n      // Enable video tab only when 'PIX&FLIX' is selected\n      tabs.push(videoDisplayTab);\n    }\n    if (props.externalLibraryName === ExternalLibraryName.MACHINELEARNING) {\n      // Enable Face API Display only when 'MACHINELEARNING' is selected\n      tabs.push(FaceapiDisplayTab);\n    }\n    if (props.sourceChapter >= 2) {\n      // Enable Data Visualizer for Source Chapter 2 and above\n      tabs.push(listVisualizerTab);\n    }\n    if (\n      props.sourceChapter >= 3 &&\n      props.sourceVariant !== 'concurrent' &&\n      props.sourceVariant !== 'non-det'\n    ) {\n      // Enable Inspector, Env Visualizer for Source Chapter 3 and above\n      tabs.push(inspectorTab);\n      tabs.push(envVisualizerTab);\n    }\n\n    if (props.sourceChapter <= 2 && props.sourceVariant !== 'wasm') {\n      // Enable Subst Visualizer for Source 1 & 2\n      tabs.push({\n        label: 'Stepper',\n        iconName: IconNames.FLOW_REVIEW,\n        body: <SideContentSubstVisualizer content={processStepperOutput(props.output)} />,\n        id: SideContentType.substVisualizer,\n        toSpawn: () => true\n      });\n    }\n    return tabs;\n  }, [\n    playgroundIntroductionTab,\n    props.externalLibraryName,\n    props.output,\n    props.sourceChapter,\n    props.sourceVariant\n  ]);\n\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: {\n      editorButtons: [\n        autorunButtons,\n        shareButton,\n        chapterSelect,\n        props.sourceVariant !== 'concurrent' ? externalLibrarySelect : null,\n        sessionButtons,\n        persistenceButtons,\n        executionTime\n      ],\n      replButtons: [props.sourceVariant !== 'concurrent' ? evalButton : null, clearButton]\n    },\n    editorProps: {\n      sourceChapter: props.sourceChapter,\n      externalLibraryName: props.externalLibraryName,\n      sourceVariant: props.sourceVariant,\n      editorValue: props.editorValue,\n      editorSessionId: props.editorSessionId,\n      handleDeclarationNavigate: props.handleDeclarationNavigate,\n      handleEditorEval: props.handleEditorEval,\n      handleEditorValueChange: onEditorValueChange,\n      handleSendReplInputToOutput: props.handleSendReplInputToOutput,\n      handlePromptAutocomplete: props.handlePromptAutocomplete,\n      handleFinishInvite: props.handleFinishInvite,\n      sharedbAceInitValue: props.sharedbAceInitValue,\n      sharedbAceIsInviting: props.sharedbAceIsInviting,\n      isEditorAutorun: props.isEditorAutorun,\n      breakpoints: props.breakpoints,\n      highlightedLines: props.highlightedLines,\n      newCursorPosition: props.newCursorPosition,\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) => {\n        // get rid of holes in array\n        const numberOfBreakpoints = breakpoints.filter(arrayItem => !!arrayItem).length;\n        if (numberOfBreakpoints > 0) {\n          setHasBreakpoints(true);\n          if (props.sourceChapter <= 2) {\n            /**\n             * There are breakpoints set on Source Chapter 2, so we set the\n             * Redux state for the editor to evaluate to the substituter\n             */\n\n            props.handleUsingSubst(true);\n          }\n        }\n        if (numberOfBreakpoints === 0) {\n          setHasBreakpoints(false);\n\n          if (selectedTab !== SideContentType.substVisualizer) {\n            props.handleReplOutputClear();\n            props.handleUsingSubst(false);\n          }\n        }\n        props.handleEditorUpdateBreakpoints(breakpoints);\n      },\n      handleSetWebsocketStatus: props.handleSetWebsocketStatus\n    },\n    editorHeight: props.editorHeight,\n    editorWidth: props.editorWidth,\n    handleEditorHeightChange: props.handleEditorHeightChange,\n    handleEditorWidthChange: props.handleEditorWidthChange,\n    handleSideContentHeightChange: props.handleSideContentHeightChange,\n    replProps: {\n      sourceChapter: props.sourceChapter,\n      sourceVariant: props.sourceVariant,\n      output: props.output,\n      replValue: props.replValue,\n      handleBrowseHistoryDown: props.handleBrowseHistoryDown,\n      handleBrowseHistoryUp: props.handleBrowseHistoryUp,\n      handleReplEval: props.handleReplEval,\n      handleReplValueChange: props.handleReplValueChange,\n      hidden: selectedTab === SideContentType.substVisualizer,\n      usingSubst: props.usingSubst\n    },\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: {\n      defaultSelectedTabId: selectedTab,\n      handleActiveTabChange: props.handleActiveTabChange,\n      onChange: onChangeTabs,\n      tabs,\n      workspaceLocation: 'playground'\n    },\n    sideContentIsResizeable: selectedTab !== SideContentType.substVisualizer\n  };\n\n  return (\n    <HotKeys\n      className={classNames('Playground', Classes.DARK, isGreen ? 'GreenScreen' : undefined)}\n      keyMap={keyMap}\n      handlers={handlers}\n    >\n      <Workspace {...workspaceProps} />\n    </HotKeys>\n  );\n};\n\nconst listVisualizerTab: SideContentTab = {\n  label: 'Data Visualizer',\n  iconName: IconNames.EYE_OPEN,\n  body: <SideContentListVisualizer />,\n  id: SideContentType.dataVisualiser,\n  toSpawn: () => true\n};\n\nconst videoDisplayTab: SideContentTab = {\n  label: 'Video Display',\n  iconName: IconNames.MOBILE_VIDEO,\n  body: <SideContentVideoDisplay />,\n  toSpawn: () => true\n};\n\nconst FaceapiDisplayTab: SideContentTab = {\n  label: 'Face API Display',\n  iconName: IconNames.MUGSHOT,\n  body: <SideContentFaceapiDisplay />,\n  toSpawn: () => true\n};\n\nconst inspectorTab: SideContentTab = {\n  label: 'Inspector',\n  iconName: IconNames.SEARCH,\n  body: <SideContentInspector />,\n  id: SideContentType.inspector,\n  toSpawn: () => true\n};\n\nconst envVisualizerTab: SideContentTab = {\n  label: 'Env Visualizer',\n  iconName: IconNames.GLOBE,\n  body: <SideContentEnvVisualizer />,\n  id: SideContentType.envVisualiser,\n  toSpawn: () => true\n};\n\nexport default Playground;\n","import { Variant } from 'js-slang/dist/types';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../../commons/application/actions/InterpreterActions';\nimport { logoutGoogle } from '../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport {\n  finishInvite,\n  initInvite,\n  invalidEditorSessionId,\n  setEditorSessionId,\n  setWebsocketStatus\n} from '../../commons/collabEditing/CollabEditingActions';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport { SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeEditorHeight,\n  changeEditorWidth,\n  changeExecTime,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  externalLibrarySelect,\n  fetchChapter,\n  navigateToDeclaration,\n  promptAutocomplete,\n  sendReplInputToOutput,\n  setEditorBreakpoint,\n  toggleEditorAutorun,\n  updateActiveTab,\n  updateEditorValue,\n  updateReplValue\n} from '../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  persistenceInitialise,\n  persistenceOpenPicker,\n  persistenceSaveFile,\n  persistenceSaveFileAs\n} from '../../features/persistence/PersistenceActions';\nimport {\n  generateLzString,\n  shortenURL,\n  toggleUsingSubst,\n  updateShortURL\n} from '../../features/playground/PlaygroundActions';\nimport Playground, { DispatchProps, StateProps } from './Playground';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  editorSessionId: state.workspaces.playground.editorSessionId,\n  editorWidth: state.workspaces.playground.editorWidth,\n  editorValue: state.workspaces.playground.editorValue!,\n  execTime: state.workspaces.playground.execTime,\n  isEditorAutorun: state.workspaces.playground.isEditorAutorun,\n  breakpoints: state.workspaces.playground.breakpoints,\n  highlightedLines: state.workspaces.playground.highlightedLines,\n  isRunning: state.workspaces.playground.isRunning,\n  isDebugging: state.workspaces.playground.isDebugging,\n  enableDebugging: state.workspaces.playground.enableDebugging,\n  newCursorPosition: state.workspaces.playground.newCursorPosition,\n  output: state.workspaces.playground.output,\n  queryString: state.playground.queryString,\n  shortURL: state.playground.shortURL,\n  replValue: state.workspaces.playground.replValue,\n  sharedbAceIsInviting: state.workspaces.playground.sharedbAceIsInviting,\n  sharedbAceInitValue: state.workspaces.playground.sharedbAceInitValue,\n  sideContentHeight: state.workspaces.playground.sideContentHeight,\n  sourceChapter: state.workspaces.playground.context.chapter,\n  sourceVariant: state.workspaces.playground.context.variant,\n  websocketStatus: state.workspaces.playground.websocketStatus,\n  externalLibraryName: state.workspaces.playground.externalLibrary,\n  usingSubst: state.playground.usingSubst,\n  persistenceUser: state.session.googleUser,\n  persistenceFile: state.playground.persistenceFile\n});\n\nconst workspaceLocation: WorkspaceLocation = 'playground';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleActiveTabChange: (activeTab: SideContentType) =>\n        updateActiveTab(activeTab, workspaceLocation),\n      handleBrowseHistoryDown: () => browseReplHistoryDown(workspaceLocation),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(workspaceLocation),\n      handleChangeExecTime: (execTime: number) =>\n        changeExecTime(execTime.toString(), workspaceLocation),\n      handleChapterSelect: (chapter: number, variant: Variant) =>\n        chapterSelect(chapter, variant, workspaceLocation),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(workspaceLocation, cursorPosition),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorHeightChange: (height: number) => changeEditorHeight(height, workspaceLocation),\n      handleEditorWidthChange: (widthChange: number) =>\n        changeEditorWidth(widthChange.toString(), workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleFinishInvite: () => finishInvite(workspaceLocation),\n      handleGenerateLz: generateLzString,\n      handleShortenURL: (s: string) => shortenURL(s),\n      handleUpdateShortURL: (s: string) => updateShortURL(s),\n      handleInterruptEval: () => beginInterruptExecution(workspaceLocation),\n      handleInvalidEditorSessionId: () => invalidEditorSessionId(),\n      handleExternalSelect: (externalLibraryName: ExternalLibraryName) =>\n        externalLibrarySelect(externalLibraryName, workspaceLocation),\n      handleInitInvite: (editorValue: string) => initInvite(editorValue, workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, workspaceLocation),\n      handleSetEditorSessionId: (editorSessionId: string) =>\n        setEditorSessionId(workspaceLocation, editorSessionId),\n      handleSendReplInputToOutput: (code: string) => sendReplInputToOutput(code, workspaceLocation),\n      handleSetWebsocketStatus: (websocketStatus: number) =>\n        setWebsocketStatus(workspaceLocation, websocketStatus),\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, workspaceLocation),\n      handleToggleEditorAutorun: () => toggleEditorAutorun(workspaceLocation),\n      handleUsingSubst: (usingSubst: boolean) => toggleUsingSubst(usingSubst),\n      handleDebuggerPause: () => beginDebuggerPause(workspaceLocation),\n      handleDebuggerResume: () => debuggerResume(workspaceLocation),\n      handleDebuggerReset: () => debuggerReset(workspaceLocation),\n      handleFetchChapter: fetchChapter,\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback),\n      handlePersistenceOpenPicker: persistenceOpenPicker,\n      handlePersistenceSaveFile: persistenceSaveFileAs,\n      handlePersistenceUpdateFile: persistenceSaveFile,\n      handlePersistenceInitialise: persistenceInitialise,\n      handlePersistenceLogOut: logoutGoogle\n    },\n    dispatch\n  );\n\nconst PlaygroundContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Playground));\n\nexport default PlaygroundContainer;\n","import { Classes, Pre } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport { Variant } from 'js-slang/dist/types';\nimport * as React from 'react';\n\nimport { InterpreterOutput } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { ControlBarAutorunButtons } from '../../commons/controlBar/ControlBarAutorunButtons';\nimport { ControlBarChapterSelect } from '../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarExternalLibrarySelect } from '../../commons/controlBar/ControlBarExternalLibrarySelect';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport SideContentEnvVisualizer from '../../commons/sideContent/SideContentEnvVisualizer';\nimport SideContentInspector from '../../commons/sideContent/SideContentInspector';\nimport SideContentListVisualizer from '../../commons/sideContent/SideContentListVisualizer';\nimport { SideContentTab, SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport SourceRecorderControlBar, {\n  SourceRecorderControlBarProps\n} from '../../commons/sourceRecorder/SourceRecorderControlBar';\nimport SourceRecorderEditor, {\n  SourceRecorderEditorProps\n} from '../../commons/sourceRecorder/SourceRecorderEditor';\nimport SourceRecorderTable from '../../commons/sourceRecorder/SourceRecorderTable';\nimport Workspace, { WorkspaceProps } from '../../commons/workspace/Workspace';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SourcecastData\n} from '../../features/sourceRecorder/SourceRecorderTypes';\n\nexport type SourcecastProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleActiveTabChange: (activeTab: SideContentType) => void;\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChapterSelect: (chapter: number) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorHeightChange: (height: number) => void;\n  handleEditorValueChange: (val: string) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n  handleEditorWidthChange: (widthChange: number) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleExternalSelect: (externalLibraryName: ExternalLibraryName) => void;\n  handleFetchSourcecastIndex: () => void;\n  handleInterruptEval: () => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleSetCurrentPlayerTime: (playTime: number) => void;\n  handleSetCodeDeltasToApply: (delta: CodeDelta[]) => void;\n  handleSetEditorReadonly: (editorReadonly: boolean) => void;\n  handleSetInputToApply: (inputToApply: Input) => void;\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetSourcecastDuration: (duration: number) => void;\n  handleSetSourcecastStatus: (PlaybackStatus: PlaybackStatus) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleToggleEditorAutorun: () => void;\n};\n\nexport type StateProps = {\n  audioUrl: string;\n  currentPlayerTime: number;\n  codeDeltasToApply: CodeDelta[] | null;\n  title: string | null;\n  description: string | null;\n  editorReadonly: boolean;\n  editorValue: string;\n  editorHeight?: number;\n  editorWidth: string;\n  externalLibraryName: string;\n  breakpoints: string[];\n  highlightedLines: number[][];\n  isEditorAutorun: boolean;\n  inputToApply: Input | null;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  newCursorPosition?: Position;\n  output: InterpreterOutput[];\n  playbackDuration: number;\n  playbackData: PlaybackData;\n  playbackStatus: PlaybackStatus;\n  replValue: string;\n  sideContentActiveTab: SideContentType;\n  sideContentHeight?: number;\n  sourcecastIndex: SourcecastData[] | null;\n  sourceChapter: number;\n  sourceVariant: Variant;\n};\n\nclass Sourcecast extends React.Component<SourcecastProps> {\n  public componentDidUpdate(prevProps: SourcecastProps) {\n    const { inputToApply } = this.props;\n\n    if (!inputToApply || inputToApply === prevProps.inputToApply) {\n      return;\n    }\n\n    switch (inputToApply.type) {\n      case 'activeTabChange':\n        this.props.handleActiveTabChange(inputToApply.data);\n        break;\n      case 'chapterSelect':\n        this.props.handleChapterSelect(inputToApply.data);\n        break;\n      case 'externalLibrarySelect':\n        this.props.handleExternalSelect(inputToApply.data);\n        break;\n    }\n  }\n\n  public render() {\n    const autorunButtons = (\n      <ControlBarAutorunButtons\n        handleDebuggerPause={this.props.handleDebuggerPause}\n        handleDebuggerReset={this.props.handleDebuggerReset}\n        handleDebuggerResume={this.props.handleDebuggerResume}\n        handleEditorEval={this.props.handleEditorEval}\n        handleInterruptEval={this.props.handleInterruptEval}\n        handleToggleEditorAutorun={this.props.handleToggleEditorAutorun}\n        isDebugging={this.props.isDebugging}\n        isEditorAutorun={this.props.isEditorAutorun}\n        isRunning={this.props.isRunning}\n        key=\"autorun\"\n      />\n    );\n\n    const chapterSelectHandler = ({ chapter }: { chapter: number }, e: any) =>\n      this.props.handleChapterSelect(chapter);\n\n    const chapterSelect = (\n      <ControlBarChapterSelect\n        handleChapterSelect={chapterSelectHandler}\n        sourceChapter={this.props.sourceChapter}\n        sourceVariant={this.props.sourceVariant}\n        key=\"chapter\"\n      />\n    );\n\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={this.props.handleReplOutputClear}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={this.props.handleReplEval}\n        isRunning={this.props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    const externalSelectHandler = ({ name }: { name: ExternalLibraryName }, e: any) =>\n      this.props.handleExternalSelect(name);\n\n    const externalLibrarySelect = (\n      <ControlBarExternalLibrarySelect\n        externalLibraryName={this.props.externalLibraryName}\n        handleExternalSelect={externalSelectHandler}\n        key=\"external_library\"\n      />\n    );\n\n    const editorProps: SourceRecorderEditorProps = {\n      codeDeltasToApply: this.props.codeDeltasToApply,\n      editorReadonly: this.props.editorReadonly,\n      editorValue: this.props.editorValue,\n      editorSessionId: '',\n      handleDeclarationNavigate: this.props.handleDeclarationNavigate,\n      handleEditorEval: this.props.handleEditorEval,\n      handleEditorValueChange: this.props.handleEditorValueChange,\n      isEditorAutorun: this.props.isEditorAutorun,\n      inputToApply: this.props.inputToApply,\n      isPlaying: this.props.playbackStatus === PlaybackStatus.playing,\n      breakpoints: this.props.breakpoints,\n      highlightedLines: this.props.highlightedLines,\n      newCursorPosition: this.props.newCursorPosition,\n      handleEditorUpdateBreakpoints: this.props.handleEditorUpdateBreakpoints\n    };\n    const workspaceProps: WorkspaceProps = {\n      controlBarProps: {\n        editorButtons: [autorunButtons, chapterSelect, externalLibrarySelect],\n        replButtons: [evalButton, clearButton]\n      },\n      customEditor: <SourceRecorderEditor {...editorProps} />,\n      editorHeight: this.props.editorHeight,\n      editorWidth: this.props.editorWidth,\n      handleEditorHeightChange: this.props.handleEditorHeightChange,\n      handleEditorWidthChange: this.props.handleEditorWidthChange,\n      handleSideContentHeightChange: this.props.handleSideContentHeightChange,\n      replProps: {\n        output: this.props.output,\n        replValue: this.props.replValue,\n        handleBrowseHistoryDown: this.props.handleBrowseHistoryDown,\n        handleBrowseHistoryUp: this.props.handleBrowseHistoryUp,\n        handleReplEval: this.props.handleReplEval,\n        handleReplValueChange: this.props.handleReplValueChange\n      },\n      sideContentHeight: this.props.sideContentHeight,\n      sideContentProps: {\n        handleActiveTabChange: this.props.handleActiveTabChange,\n        selectedTabId: this.props.sideContentActiveTab,\n        tabs: [\n          {\n            label: 'Sourcecast Table',\n            iconName: IconNames.COMPASS,\n            body: (\n              <div>\n                <span className=\"Multi-line\">\n                  <Pre>\n                    {this.props.title\n                      ? 'Title: ' + this.props.title + '\\nDescription: ' + this.props.description\n                      : INTRODUCTION}\n                  </Pre>\n                </span>\n                <SourceRecorderTable\n                  handleFetchSourcecastIndex={this.props.handleFetchSourcecastIndex}\n                  handleSetSourcecastData={this.props.handleSetSourcecastData}\n                  sourcecastIndex={this.props.sourcecastIndex}\n                />\n              </div>\n            ),\n            id: SideContentType.introduction,\n            toSpawn: () => true\n          },\n          listVisualizerTab,\n          inspectorTab,\n          envVisualizerTab\n        ],\n        workspaceLocation: 'sourcecast'\n      }\n    };\n    const sourcecastControlbarProps: SourceRecorderControlBarProps = {\n      handleEditorValueChange: this.props.handleEditorValueChange,\n      handlePromptAutocomplete: this.props.handlePromptAutocomplete,\n      handleSetCurrentPlayerTime: this.props.handleSetCurrentPlayerTime,\n      handleSetCodeDeltasToApply: this.props.handleSetCodeDeltasToApply,\n      handleSetEditorReadonly: this.props.handleSetEditorReadonly,\n      handleSetInputToApply: this.props.handleSetInputToApply,\n      handleSetSourcecastDuration: this.props.handleSetSourcecastDuration,\n      handleSetSourcecastStatus: this.props.handleSetSourcecastStatus,\n      audioUrl: this.props.audioUrl,\n      currentPlayerTime: this.props.currentPlayerTime,\n      duration: this.props.playbackDuration,\n      playbackData: this.props.playbackData,\n      playbackStatus: this.props.playbackStatus,\n      handleChapterSelect: this.props.handleChapterSelect,\n      handleExternalSelect: this.props.handleExternalSelect\n    };\n    return (\n      <div className={classNames('Sourcecast', Classes.DARK)}>\n        <SourceRecorderControlBar {...sourcecastControlbarProps} />\n        <Workspace {...workspaceProps} />\n      </div>\n    );\n  }\n}\n\nconst INTRODUCTION = 'Welcome to Sourcecast!';\n\nconst listVisualizerTab: SideContentTab = {\n  label: 'Data Visualizer',\n  iconName: IconNames.EYE_OPEN,\n  body: <SideContentListVisualizer />,\n  id: SideContentType.dataVisualiser,\n  toSpawn: () => true\n};\n\nconst inspectorTab: SideContentTab = {\n  label: 'Inspector',\n  iconName: IconNames.SEARCH,\n  body: <SideContentInspector />,\n  id: SideContentType.inspector,\n  toSpawn: () => true\n};\n\nconst envVisualizerTab: SideContentTab = {\n  label: 'Env Visualizer',\n  iconName: IconNames.GLOBE,\n  body: <SideContentEnvVisualizer />,\n  id: SideContentType.envVisualiser,\n  toSpawn: () => true\n};\n\nexport default Sourcecast;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../../commons/application/actions/InterpreterActions';\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport { SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeEditorHeight,\n  changeEditorWidth,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  externalLibrarySelect,\n  navigateToDeclaration,\n  promptAutocomplete,\n  setEditorBreakpoint,\n  setEditorReadonly,\n  toggleEditorAutorun,\n  updateActiveTab,\n  updateEditorValue,\n  updateReplValue\n} from '../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport { fetchSourcecastIndex } from '../../features/sourceRecorder/sourcecast/SourcecastActions';\nimport {\n  setCodeDeltasToApply,\n  setCurrentPlayerTime,\n  setInputToApply,\n  setSourcecastData,\n  setSourcecastDuration,\n  setSourcecastStatus\n} from '../../features/sourceRecorder/SourceRecorderActions';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport Sourcecast, { DispatchProps, StateProps } from './Sourcecast';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  audioUrl: state.workspaces.sourcecast.audioUrl,\n  currentPlayerTime: state.workspaces.sourcecast.currentPlayerTime,\n  codeDeltasToApply: state.workspaces.sourcecast.codeDeltasToApply,\n  title: state.workspaces.sourcecast.title,\n  description: state.workspaces.sourcecast.description,\n  editorReadonly: state.workspaces.sourcecast.editorReadonly,\n  editorWidth: state.workspaces.sourcecast.editorWidth,\n  editorValue: state.workspaces.sourcecast.editorValue!,\n  externalLibraryName: state.workspaces.sourcecast.externalLibrary,\n  isEditorAutorun: state.workspaces.sourcecast.isEditorAutorun,\n  inputToApply: state.workspaces.sourcecast.inputToApply,\n  breakpoints: state.workspaces.sourcecast.breakpoints,\n  highlightedLines: state.workspaces.sourcecast.highlightedLines,\n  isRunning: state.workspaces.sourcecast.isRunning,\n  isDebugging: state.workspaces.sourcecast.isDebugging,\n  enableDebugging: state.workspaces.sourcecast.enableDebugging,\n  newCursorPosition: state.workspaces.sourcecast.newCursorPosition,\n  output: state.workspaces.sourcecast.output,\n  playbackDuration: state.workspaces.sourcecast.playbackDuration,\n  playbackData: state.workspaces.sourcecast.playbackData,\n  playbackStatus: state.workspaces.sourcecast.playbackStatus,\n  replValue: state.workspaces.sourcecast.replValue,\n  sideContentActiveTab: state.workspaces.sourcecast.sideContentActiveTab,\n  sideContentHeight: state.workspaces.sourcecast.sideContentHeight,\n  sourcecastIndex: state.workspaces.sourcecast.sourcecastIndex,\n  sourceChapter: state.workspaces.sourcecast.context.chapter,\n  sourceVariant: state.workspaces.sourcecast.context.variant\n});\n\nconst location: WorkspaceLocation = 'sourcecast';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleActiveTabChange: (activeTab: SideContentType) => updateActiveTab(activeTab, location),\n      handleBrowseHistoryDown: () => browseReplHistoryDown(location),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(location),\n      handleChapterSelect: (chapter: number) => chapterSelect(chapter, 'default', location),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(location, cursorPosition),\n      handleEditorEval: () => evalEditor(location),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, location),\n      handleEditorHeightChange: (height: number) => changeEditorHeight(height, location),\n      handleEditorWidthChange: (widthChange: number) =>\n        changeEditorWidth(widthChange.toString(), location),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, location),\n      handleExternalSelect: (externalLibraryName: ExternalLibraryName) =>\n        externalLibrarySelect(externalLibraryName, location),\n      handleFetchSourcecastIndex: () => fetchSourcecastIndex(location),\n      handleInterruptEval: () => beginInterruptExecution(location),\n      handleReplEval: () => evalRepl(location),\n      handleReplOutputClear: () => clearReplOutput(location),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, location),\n      handleSetCurrentPlayerTime: (playerTime: number) =>\n        setCurrentPlayerTime(playerTime, location),\n      handleSetCodeDeltasToApply: (deltas: CodeDelta[]) => setCodeDeltasToApply(deltas, location),\n      handleSetEditorReadonly: (editorReadonly: boolean) =>\n        setEditorReadonly(location, editorReadonly),\n      handleSetInputToApply: (inputToApply: Input) => setInputToApply(inputToApply, location),\n      handleSetSourcecastData: (\n        title: string,\n        description: string,\n        audioUrl: string,\n        playbackData: PlaybackData\n      ) => setSourcecastData(title, description, audioUrl, playbackData, location),\n      handleSetSourcecastDuration: (duration: number) => setSourcecastDuration(duration, location),\n      handleSetSourcecastStatus: (playbackStatus: PlaybackStatus) =>\n        setSourcecastStatus(playbackStatus, location),\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, location),\n      handleToggleEditorAutorun: () => toggleEditorAutorun(location),\n      handleDebuggerPause: () => beginDebuggerPause(location),\n      handleDebuggerResume: () => debuggerResume(location),\n      handleDebuggerReset: () => debuggerReset(location),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(location, row, col, callback)\n    },\n    dispatch\n  );\n\nconst SourcecastContainer = connect(mapStateToProps, mapDispatchToProps)(Sourcecast);\n\nexport default SourcecastContainer;\n","import { Callout, ProgressBar } from '@blueprintjs/core';\nimport { IconName } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n  AssessmentCategories,\n  AssessmentCategory,\n  AssessmentOverview\n} from '../assessment/AssessmentTypes';\nimport { assessmentCategoryLink } from '../utils/ParamParseHelper';\n\ntype ProfileCardProps = DispatchProps & StateProps;\n\ntype StateProps = {\n  item: AssessmentOverview;\n};\n\ntype DispatchProps = {\n  getFrac: (num: number, den: number) => number;\n  parseColour: (frac: number) => string;\n  renderIcon: (category: AssessmentCategory) => IconName;\n};\n\nclass ProfileCard extends React.Component<ProfileCardProps, {}> {\n  public render() {\n    const { item } = this.props;\n\n    const isInvalidMission =\n      item.category !== AssessmentCategories.Mission || (item.maxGrade <= 0 && item.grade === 0);\n    const isInvalidXP = item.maxXp <= 0 && item.xp === 0;\n\n    const missionDetail = (\n      <div className=\"grade-details\">\n        <div className=\"title\">Grade</div>\n        <div className=\"value\">\n          {item.grade} / {item.maxGrade}\n        </div>\n        <ProgressBar\n          animate={false}\n          className={\n            'value-bar' + this.props.parseColour(this.props.getFrac(item.grade, item.maxGrade))\n          }\n          stripes={false}\n          value={this.props.getFrac(item.grade, item.maxGrade)}\n        />\n      </div>\n    );\n\n    const xpDetails = (\n      <div className=\"xp-details\">\n        <div className=\"title\">XP</div>\n        <div className=\"value\">\n          {item.xp} / {item.maxXp}\n        </div>\n        <ProgressBar\n          animate={false}\n          className={'value-bar' + this.props.parseColour(this.props.getFrac(item.xp, item.maxXp))}\n          stripes={false}\n          value={this.props.getFrac(item.xp, item.maxXp)}\n        />\n      </div>\n    );\n\n    return (\n      // Make each card navigate the user to the respective assessment\n      <NavLink\n        className=\"profile-summary-navlink\"\n        key={`${item.title}-${item.id}`}\n        target=\"_blank\"\n        to={`/academy/${assessmentCategoryLink(item.category)}/${item.id}/0`}\n        activeClassName=\"profile-summary-navlink\"\n      >\n        <Callout\n          className=\"profile-summary-callout\"\n          key={`${item.title}-${item.id}`}\n          icon={this.props.renderIcon(item.category)}\n          title={item.title}\n        >\n          {isInvalidMission ? '' : missionDetail}\n          {isInvalidXP ? '' : xpDetails}\n        </Callout>\n      </NavLink>\n    );\n  }\n}\n\nexport default ProfileCard;\n","import { Drawer, NonIdealState, Spinner } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Role } from '../application/ApplicationTypes';\nimport {\n  AssessmentCategories,\n  AssessmentCategory,\n  AssessmentOverview,\n  AssessmentStatuses,\n  GradingStatuses\n} from '../assessment/AssessmentTypes';\nimport ProfileCard from './ProfileCard';\n\ntype ProfileProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleAssessmentOverviewFetch: () => void;\n};\n\nexport type StateProps = {\n  name?: string;\n  role?: Role;\n  assessmentOverviews?: AssessmentOverview[];\n};\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nclass Profile extends React.Component<ProfileProps, {}> {\n  public componentDidMount() {\n    if (this.props.name && this.props.role && !this.props.assessmentOverviews) {\n      // If assessment overviews are not loaded, fetch them\n      this.props.handleAssessmentOverviewFetch();\n    }\n  }\n\n  public render() {\n    const isLoaded = this.props.name && this.props.role && this.props.assessmentOverviews;\n    let content: JSX.Element;\n\n    if (!isLoaded) {\n      content = <NonIdealState description=\"Loading...\" icon={<Spinner />} />;\n    } else {\n      // Check if there are any closed assessments, else render a placeholder <div>\n      const numClosed = this.props.assessmentOverviews!.filter(\n        item => item.status === AssessmentStatuses.submitted\n      ).length;\n\n      const userDetails = (\n        <div className=\"profile-header\">\n          <div className=\"profile-username\">\n            <div className=\"name\">{this.props.name}</div>\n            <div className=\"role\">{this.props.role}</div>\n          </div>\n        </div>\n      );\n\n      if (numClosed === 0) {\n        content = (\n          <div className=\"profile-content\">\n            {userDetails}\n            <div className=\"profile-placeholder\">\n              There are no closed assessments to render grade and XP of.\n            </div>\n          </div>\n        );\n      } else {\n        // Compute the user's current total grade and XP from submitted assessments\n        const [currentGrade, currentXp, maxGrade, maxXp] = this.props.assessmentOverviews!.reduce(\n          (acc, item) =>\n            item.status === AssessmentStatuses.submitted\n              ? item.category === AssessmentCategories.Mission &&\n                item.gradingStatus === GradingStatuses.graded\n                ? [\n                    acc[0] + item.grade / item.maxGrade,\n                    acc[1] + item.xp,\n                    acc[2] + 1,\n                    acc[3] + item.maxXp\n                  ]\n                : [acc[0], acc[1] + item.xp, acc[2], acc[3] + item.maxXp]\n              : acc,\n          [0, 0, 0, 0]\n        );\n\n        // Performs boundary checks if denominator is 0 or if it exceeds 1 (100%)\n        const getFrac = (num: number, den: number): number => {\n          return den <= 0 || num / den > 1 ? 1 : num / den;\n        };\n\n        // Given a fraction between 0 and 1 inclusive, returns a className to apply colour with CSS\n        const parseColour = (frac: number): string => {\n          return frac < 0\n            ? ''\n            : frac >= 0.8\n            ? ' progress-steelblue'\n            : frac >= 0.45\n            ? ' progress-deepskyblue'\n            : ' progress-skyblue';\n        };\n\n        // Given an assessment category, return its icon\n        const renderIcon = (category: AssessmentCategory) => {\n          switch (category) {\n            case AssessmentCategories.Mission:\n              return IconNames.FLAME;\n            case AssessmentCategories.Sidequest:\n              return IconNames.LIGHTBULB;\n            case AssessmentCategories.Path:\n              return IconNames.PREDICTIVE_ANALYSIS;\n            case AssessmentCategories.Contest:\n              return IconNames.COMPARISON;\n            default:\n              // For rendering hidden assessments not visible to the student\n              // e.g. studio participation marks\n              return IconNames.PULSE;\n          }\n        };\n\n        // Build condensed assessment cards from an array of assessments\n        const summaryCallouts = this.props\n          .assessmentOverviews!.filter(item => item.status === AssessmentStatuses.submitted)\n          .map((assessment, index) => {\n            return (\n              <ProfileCard\n                key={index}\n                item={assessment}\n                getFrac={getFrac}\n                parseColour={parseColour}\n                renderIcon={renderIcon}\n              />\n            );\n          });\n\n        // Compute the user's maximum total grade and XP from submitted assessments\n        content = (\n          <div className=\"profile-content\">\n            {userDetails}\n            <div className=\"profile-progress\">\n              <div className=\"profile-grade\">\n                <Spinner\n                  className={'profile-spinner' + parseColour(getFrac(currentGrade, maxGrade))}\n                  size={144}\n                  value={getFrac(currentGrade, maxGrade)}\n                />\n                <div className=\"type\">Grade</div>\n                <div className=\"total-value\">\n                  {currentGrade.toFixed(2)} / {maxGrade.toFixed(2)}\n                </div>\n                <div className=\"percentage\">\n                  {(getFrac(currentGrade, maxGrade) * 100).toFixed(2)}%\n                </div>\n              </div>\n              <div className=\"profile-xp\">\n                <Spinner\n                  className={'profile-spinner' + parseColour(getFrac(currentXp, maxXp))}\n                  size={144}\n                  value={getFrac(currentXp, maxXp)}\n                />\n                <div className=\"type\">XP</div>\n                <div className=\"total-value\">\n                  {currentXp} / {maxXp}\n                </div>\n                <div className=\"percentage\">{(getFrac(currentXp, maxXp) * 100).toFixed(2)}%</div>\n              </div>\n            </div>\n            <div className=\"profile-callouts\">{summaryCallouts}</div>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Drawer\n        className=\"profile\"\n        icon={IconNames.USER}\n        isCloseButtonShown={true}\n        isOpen={this.props.isOpen}\n        onClose={this.props.onClose}\n        title=\"User Profile\"\n        position=\"left\"\n        size={'30%'}\n      >\n        {content}\n      </Drawer>\n    );\n  }\n}\n\nexport default Profile;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { fetchAssessmentOverviews } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport Profile, { DispatchProps, StateProps } from './Profile';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  assessmentOverviews: state.session.assessmentOverviews,\n  name: state.session.name,\n  role: state.session.role\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAssessmentOverviewFetch: fetchAssessmentOverviews\n    },\n    dispatch\n  );\n\nconst ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nexport default ProfileContainer;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Links } from '../utils/Constants';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst DropdownAbout: React.SFC<DialogProps> = props => (\n  <Dialog\n    className=\"about\"\n    icon={IconNames.HELP}\n    isCloseButtonShown={true}\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    title=\"About\"\n  >\n    <div className={Classes.DIALOG_BODY}>\n      <div className=\"abt\">\n        <p>\n          The <i>Source Academy</i> is a computer-mediated learning environment for studying the\n          structure and interpretation of computer programs. Students write and run their programs\n          in their web browser, using sublanguages of JavaScript called{' '}\n          <a href={Links.sourceDocs}>Source</a>, designed for the textbook{' '}\n          <a href={Links.textbook}>\n            Structure and Interpretation of Computer Programs, JavaScript Adaptation\n          </a>\n          .\n        </p>\n        <p>\n          The Source Academy is available under the Apache License 2.0 at our GitHub organisation,{' '}\n          <a href={Links.githubOrg}>Source Academy</a>. The National University of Singapore uses\n          the Source Academy for teaching Programming Methodology to freshmen Computer Science\n          students in the course <a href={Links.moduleDetails}>CS1101S</a>.\n        </p>\n      </div>\n    </div>\n  </Dialog>\n);\n\nexport default DropdownAbout;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Links } from '../utils/Constants';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst DropdownHelp: React.SFC<DialogProps> = props => (\n  <Dialog\n    className=\"help\"\n    icon={IconNames.ERROR}\n    isCloseButtonShown={true}\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    title=\"Help\"\n  >\n    <div className={Classes.DIALOG_BODY}>\n      <p>Please use the following resources when you encounter issues with this system.</p>\n      <p>\n        As of August 2020, we recommend the browsers <b>Google Chrome</b> or <b>Microsoft Edge</b>,\n        Version 83 or higher, or <b>Mozilla Firefox</b>, Version 78 or higher, to visit the Source\n        Academy. If you encounter issues with the Source Academy using these browsers, please use\n        the following resources.\n      </p>\n      <ul>\n        <li>\n          For critical technical issues that seriously affect your learning experience, email the\n          Technical Services of the NUS School of Computing at{' '}\n          <a href={Links.techSVC}>{Links.techSVC}</a> or call {Links.techSVCNumber}.\n        </li>\n        <li>\n          For non-critical technical issues, such as enhancement suggestions, please use the issue\n          system of the <a href={Links.githubIssues}>Source Academy repositories on GitHub</a>.\n        </li>\n        <li>\n          For issues related to the content of missions, quests, paths and contests, use the\n          respective forum at <a href={Links.piazza}> piazza</a>, or approach your Avenger,\n          Reflection instructor or lecturer.\n        </li>\n      </ul>\n    </div>\n  </Dialog>\n);\n\nexport default DropdownHelp;\n","import { Menu, MenuItem, Popover, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport controlButton from '../ControlButton';\nimport Profile from '../profile/ProfileContainer';\nimport DropdownAbout from './DropdownAbout';\nimport DropdownHelp from './DropdownHelp';\n\ntype DropdownProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleLogOut: () => void;\n};\n\ntype StateProps = {\n  name?: string;\n};\n\ntype State = {\n  isAboutOpen: boolean;\n  isHelpOpen: boolean;\n  isProfileOpen: boolean;\n};\n\nclass Dropdown extends React.Component<DropdownProps, State> {\n  constructor(props: DropdownProps) {\n    super(props);\n    this.state = {\n      isAboutOpen: false,\n      isHelpOpen: false,\n      isProfileOpen: false\n    };\n  }\n\n  public render() {\n    return (\n      <>\n        <Popover\n          content={this.menu(this.props)}\n          inheritDarkTheme={false}\n          position={Position.BOTTOM}\n        >\n          {controlButton('', IconNames.CARET_DOWN)}\n        </Popover>\n        <DropdownAbout isOpen={this.state.isAboutOpen} onClose={this.toggleAboutOpen} />\n        <DropdownHelp isOpen={this.state.isHelpOpen} onClose={this.toggleHelpOpen} />\n        {this.props.name ? (\n          <Profile isOpen={this.state.isProfileOpen} onClose={this.toggleProfileOpen} />\n        ) : null}\n      </>\n    );\n  }\n\n  private menu(props: DropdownProps) {\n    const profile = this.props.name ? (\n      <MenuItem\n        icon={IconNames.USER}\n        onClick={this.toggleProfileOpen}\n        text={titleCase(this.props.name)}\n      />\n    ) : null;\n\n    const logout = this.props.name ? (\n      <MenuItem icon={IconNames.LOG_OUT} text=\"Logout\" onClick={this.props.handleLogOut} />\n    ) : null;\n\n    return (\n      <Menu>\n        {profile}\n        <MenuItem icon={IconNames.HELP} onClick={this.toggleAboutOpen} text=\"About\" />\n        <MenuItem icon={IconNames.ERROR} onClick={this.toggleHelpOpen} text=\"Help\" />\n        {logout}\n      </Menu>\n    );\n  }\n\n  private toggleAboutOpen = () => {\n    this.setState({ ...this.state, isAboutOpen: !this.state.isAboutOpen });\n  };\n\n  private toggleHelpOpen = () =>\n    this.setState({ ...this.state, isHelpOpen: !this.state.isHelpOpen });\n\n  private toggleProfileOpen = () =>\n    this.setState({ ...this.state, isProfileOpen: !this.state.isProfileOpen });\n}\n\nconst titleCase = (str: string) =>\n  str.replace(/\\w\\S*/g, wrd => wrd.charAt(0).toUpperCase() + wrd.substr(1).toLowerCase());\n\nexport default Dropdown;\n","import {\n  Alignment,\n  Classes,\n  Icon,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { Role } from '../application/ApplicationTypes';\nimport Dropdown from '../dropdown/Dropdown';\nimport Constants from '../utils/Constants';\n\ntype NavigationBarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleLogOut: () => void;\n};\n\ntype StateProps = {\n  role?: Role;\n  title: string;\n  name?: string;\n};\n\nconst NavigationBar: React.SFC<NavigationBarProps> = props => (\n  <Navbar className={classNames('NavigationBar', 'primary-navbar', Classes.DARK)}>\n    <NavbarGroup align={Alignment.LEFT}>\n      {!Constants.playgroundOnly && (\n        <>\n          <NavLink\n            activeClassName={Classes.ACTIVE}\n            className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n            to=\"/academy\"\n          >\n            <Icon icon={IconNames.SYMBOL_DIAMOND} />\n            <NavbarHeading className=\"hidden-xs hidden-sm\">Source Academy</NavbarHeading>\n          </NavLink>{' '}\n          <NavLink\n            activeClassName={Classes.ACTIVE}\n            className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n            to=\"/sourcecast\"\n          >\n            <Icon icon={IconNames.MUSIC} />\n            <div className=\"navbar-button-text hidden-xs hidden-sm\">Sourcecast</div>\n          </NavLink>\n        </>\n      )}\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        to=\"/playground\"\n      >\n        <Icon icon={IconNames.CODE} />\n        <div className=\"navbar-button-text hidden-xs hidden-sm\">\n          {Constants.playgroundOnly ? 'Source Academy Playground' : 'Playground'}\n        </div>\n      </NavLink>\n    </NavbarGroup>\n\n    <NavbarGroup align={Alignment.RIGHT}>\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        to=\"/contributors\"\n      >\n        <Icon icon={IconNames.HEART} />\n        <div className=\"navbar-button-text hidden-xs hidden-sm\">Contributors</div>\n      </NavLink>\n\n      <div className=\"visible-xs\">\n        <NavbarDivider className=\"thin-divider\" />\n      </div>\n      <div className=\"hidden-xs\">\n        <NavbarDivider className=\"default-divider\" />\n      </div>\n\n      <Dropdown handleLogOut={props.handleLogOut} name={props.name} />\n    </NavbarGroup>\n  </Navbar>\n);\n\nexport default NavigationBar;\n","import * as qs from 'query-string';\nimport { isArray } from 'util';\n\nexport interface IParsedQuery {\n  [key: string]: string | undefined;\n}\n\n/**\n * Parse a query string into an object.\n *\n * This is a wrapper for query-string that disables array and null parsing (so\n * the object has only strings).\n */\nexport function parseQuery(query: string): IParsedQuery {\n  const parsed = qs.parse(query);\n  for (const [key, val] of Object.entries(parsed)) {\n    if (isArray(val)) {\n      parsed[key] = val.join(',');\n    } else if (val === null) {\n      delete parsed[key];\n    }\n  }\n\n  return parsed as IParsedQuery;\n}\n","import { Variant } from 'js-slang/dist/types';\nimport { decompressFromEncodedURIComponent } from 'lz-string';\nimport * as React from 'react';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router';\n\nimport Academy from '../../pages/academy/AcademyContainer';\nimport Contributors from '../../pages/contributors/Contributors';\nimport Login from '../../pages/login/LoginContainer';\nimport MissionControlContainer from '../../pages/missionControl/MissionControlContainer';\nimport NotFound from '../../pages/notFound/NotFound';\nimport Playground from '../../pages/playground/PlaygroundContainer';\nimport SourcecastContainer from '../../pages/sourcecast/SourcecastContainer';\nimport NavigationBar from '../navigationBar/NavigationBar';\nimport Constants from '../utils/Constants';\nimport { stringParamToInt } from '../utils/ParamParseHelper';\nimport { parseQuery } from '../utils/QueryHelper';\nimport { Role, sourceLanguages } from './ApplicationTypes';\nimport { ExternalLibraryName } from './types/ExternalTypes';\n\nexport type ApplicationProps = DispatchProps & StateProps & RouteComponentProps<{}>;\n\nexport type DispatchProps = {\n  handleClearContext: (\n    chapter: number,\n    variant: Variant,\n    externalLibraryName: ExternalLibraryName\n  ) => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleEnsureLibrariesLoaded: () => void;\n  handleLogOut: () => void;\n  handleExternalLibrarySelect: (external: ExternalLibraryName) => void;\n  handleSetExecTime: (execTime: string) => void;\n};\n\nexport type StateProps = {\n  accessToken?: string;\n  currentPlaygroundChapter: number;\n  currentPlaygroundVariant: Variant;\n  role?: Role;\n  title: string;\n  name?: string;\n  currentExternalLibrary: ExternalLibraryName;\n};\n\nconst assessmentRegExp = ':assessmentId(-?\\\\d+)?/:questionId(\\\\d+)?';\n\nclass Application extends React.Component<ApplicationProps, {}> {\n  public componentDidMount() {\n    parsePlayground(this.props);\n  }\n\n  public render() {\n    return (\n      <div className=\"Application\">\n        <NavigationBar\n          handleLogOut={this.props.handleLogOut}\n          role={this.props.role}\n          name={this.props.name}\n          title={this.props.title}\n        />\n        <div className=\"Application__main\">\n          {/* Unfortunately Switches cannot contain fragments :( */}\n          {Constants.playgroundOnly ? (\n            <Switch>\n              <Route path=\"/playground\" component={Playground} />\n              <Route path=\"/contributors\" component={Contributors} />\n              <Route path=\"/sourcecast\" component={SourcecastContainer} />\n              <Route exact={true} path=\"/\" render={this.redirectToPlayground} />\n              <Route component={NotFound} />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route path=\"/academy\" component={toAcademy(this.props)} />\n              <Route path={`/mission-control/${assessmentRegExp}`} render={toIncubator} />\n              <Route path=\"/playground\" component={Playground} />\n              <Route path=\"/login\" render={toLogin(this.props)} />\n              <Route path=\"/contributors\" component={Contributors} />\n              <Route path=\"/sourcecast\" component={SourcecastContainer} />\n              <Route exact={true} path=\"/\" render={this.redirectToAcademy} />\n              <Route component={NotFound} />\n            </Switch>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private redirectToPlayground = () => <Redirect to=\"/playground\" />;\n  private redirectToAcademy = () => <Redirect to=\"/academy\" />;\n}\n\n/**\n * A user routes to /academy,\n *  1. If the user is logged in, render the Academy component\n *  2. If the user is not logged in, redirect to /login\n */\nconst toAcademy = (props: ApplicationProps) =>\n  props.accessToken === undefined || props.role === undefined\n    ? () => <Redirect to=\"/login\" />\n    : () => <Academy accessToken={props.accessToken} role={props.role!} />;\n\nconst toLogin = (props: ApplicationProps) => () => {\n  const qstr = parseQuery(props.location.search);\n\n  return (\n    <Login\n      code={qstr.code}\n      providerId={qstr.provider}\n      providers={[...Constants.authProviders.entries()].map(([id, { name }]) => ({\n        id,\n        name\n      }))}\n    />\n  );\n};\n\nconst parsePlayground = (props: ApplicationProps) => {\n  const prgrm = parsePrgrm(props);\n  const chapter = parseChapter(props) || props.currentPlaygroundChapter;\n  const variant = parseVariant(props, chapter) || props.currentPlaygroundVariant;\n  const externalLibraryName = parseExternalLibrary(props) || props.currentExternalLibrary;\n  const execTime = parseExecTime(props);\n  if (prgrm) {\n    props.handleEditorValueChange(prgrm);\n    props.handleEnsureLibrariesLoaded();\n    props.handleClearContext(chapter, variant, externalLibraryName);\n    props.handleExternalLibrarySelect(externalLibraryName);\n    props.handleSetExecTime(execTime);\n  }\n};\n\nconst toIncubator = (routerProps: RouteComponentProps<any>) => <MissionControlContainer />;\n\nconst parsePrgrm = (props: RouteComponentProps<{}>) => {\n  const qsParsed = parseQuery(props.location.hash);\n  // legacy support\n  const program = qsParsed.lz !== undefined ? qsParsed.lz : qsParsed.prgrm;\n  return program !== undefined ? decompressFromEncodedURIComponent(program) : undefined;\n};\n\nconst parseChapter = (props: RouteComponentProps<{}>) => {\n  return stringParamToInt(parseQuery(props.location.hash).chap) || undefined;\n};\n\nconst parseVariant = (props: RouteComponentProps<{}>, chap: number) => {\n  const variantQuery = parseQuery(props.location.hash).variant;\n  // find a language with this variant and chapter (if any)\n  const matchingLang = sourceLanguages.find(\n    language => language.chapter === chap && language.variant === variantQuery\n  );\n\n  const variant: Variant = matchingLang ? matchingLang.variant : 'default';\n\n  return variant;\n};\n\nconst parseExternalLibrary = (props: RouteComponentProps<{}>) => {\n  const ext = parseQuery(props.location.hash).ext || '';\n  return Object.values(ExternalLibraryName).find(v => v === ext) || ExternalLibraryName.NONE;\n};\n\nconst parseExecTime = (props: RouteComponentProps<{}>) => {\n  const time = parseQuery(props.location.hash).exec || '1000';\n  // Parse the time string to a number, defaulting execTime to 1000\n  const execTime = stringParamToInt(time) || 1000;\n  return `${execTime < 1000 ? 1000 : execTime}`;\n};\n\nexport default Application;\n","import { Variant } from 'js-slang/dist/types';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginClearContext,\n  changeExecTime,\n  ensureLibrariesLoaded,\n  externalLibrarySelect,\n  promptAutocomplete,\n  setEditorBreakpoint,\n  updateEditorValue\n} from '../workspace/WorkspaceActions';\nimport { logOut } from './actions/CommonsActions';\nimport Application, { DispatchProps, StateProps } from './Application';\nimport { OverallState } from './ApplicationTypes';\nimport { externalLibraries, ExternalLibraryName } from './types/ExternalTypes';\n\n/**\n * Provides the title of the application for display.\n * An object with the relevant properties must be\n * returned instead of an object of type @type {IApplicationProps},\n * as the routing properties of @type {RouteComponentProps} are\n * provided using the withRouter() method below.\n */\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  title: state.application.title,\n  accessToken: state.session.accessToken,\n  role: state.session.role,\n  name: state.session.name,\n  currentPlaygroundChapter: state.workspaces.playground.context.chapter,\n  currentPlaygroundVariant: state.workspaces.playground.context.variant,\n  currentExternalLibrary: state.workspaces.playground.externalLibrary\n});\n\nconst workspaceLocation = 'playground';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleClearContext: (\n        chapter: number,\n        variant: Variant,\n        externalLibraryName: ExternalLibraryName\n      ) =>\n        beginClearContext(\n          {\n            chapter,\n            variant,\n            external: {\n              name: externalLibraryName,\n              symbols: externalLibraries.get(externalLibraryName)!\n            },\n            globals: []\n          },\n          workspaceLocation\n        ),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleEnsureLibrariesLoaded: ensureLibrariesLoaded,\n      handleLogOut: logOut,\n      handleExternalLibrarySelect: (externalLibraryName: ExternalLibraryName) =>\n        externalLibrarySelect(externalLibraryName, workspaceLocation),\n      handleSetExecTime: (execTime: string) => changeExecTime(execTime, workspaceLocation)\n    },\n    dispatch\n  );\n\nconst ApplicationContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Application));\n\nexport default ApplicationContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL || '', window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL || ''}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'src/styles/index.scss';\n\nimport * as Sentry from '@sentry/browser';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { setBackendStaticURL } from 'js-slang/dist/modules/moduleLoader';\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ApplicationContainer from 'src/commons/application/ApplicationContainer';\nimport Constants, { Links } from 'src/commons/utils/Constants';\nimport { history } from 'src/commons/utils/HistoryHelper';\nimport { showWarningMessage } from 'src/commons/utils/NotificationsHelper';\nimport { register as registerServiceWorker } from 'src/commons/utils/RegisterServiceWorker';\nimport { store } from 'src/pages/createStore';\n\nif (Constants.sentryDsn) {\n  Sentry.init({ dsn: Constants.sentryDsn });\n}\n\nconst rootContainer = document.getElementById('root') as HTMLElement;\n(window as any).__REDUX_STORE__ = store; // need this for slang's display\nconsole.log(\n  `%c Source Academy ${Constants.sourceAcademyVersion}; ` +\n    `Please visit ${Links.githubIssues} to report bugs or issues.`,\n  'font-weight: bold;'\n);\n\nsetBackendStaticURL(Constants.moduleBackendUrl);\nconsole.log(`Using module backend: ${Constants.moduleBackendUrl}`);\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <ApplicationContainer />\n    </ConnectedRouter>\n  </Provider>,\n  rootContainer\n);\n\nregisterServiceWorker({\n  onUpdate: () => {\n    showWarningMessage(\n      'A new version of Source Academy is available. Please refresh the browser.',\n      0\n    );\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/default_cover_image.6f45c87a.jpg\";"],"sourceRoot":""}